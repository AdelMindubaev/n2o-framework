{
  "id": "proto",
  "routes": {
    "list": [
      {
        "path": "/proto/create2",
        "exact": true,
        "isOtherPage": true
      },
      {
        "path": "/proto/:proto_clients_id/contacts/:proto_contacts_id/update",
        "exact": true,
        "isOtherPage": true
      },
      {
        "path": "/proto/:proto_clients_id/contacts/create",
        "exact": true,
        "isOtherPage": true
      },
      {
        "path": "/proto/:proto_clients_id/update",
        "exact": true,
        "isOtherPage": true
      },
      {
        "path": "/proto/:proto_clients_id/name",
        "exact": true,
        "isOtherPage": true
      },
      {
        "path": "/proto/:proto_clients_id/surname",
        "exact": true,
        "isOtherPage": true
      },
      {
        "path": "/proto/:proto_clients_id/view",
        "exact": true,
        "isOtherPage": true
      },
      {
        "path": "/proto/:proto_clients_id/update2",
        "exact": true,
        "isOtherPage": true
      },
      {
        "path": "/proto/:proto_clients_id/update_client",
        "exact": true,
        "isOtherPage": true
      },
      {
        "path": "/proto/create",
        "exact": true,
        "isOtherPage": true
      },
      {
        "path": "/proto",
        "exact": true,
        "isOtherPage": false
      },
      {
        "path": "/proto/:proto_clients_id",
        "exact": true,
        "isOtherPage": false
      },
      {
        "path": "/proto/:proto_clients_id/contacts",
        "exact": true,
        "isOtherPage": false
      },
      {
        "path": "/proto/:proto_clients_id/contacts/:proto_contacts_id",
        "exact": true,
        "isOtherPage": false
      },
      {
        "path": "/proto/:client_id/card",
        "exact": true,
        "isOtherPage": false
      },
      {
        "path": "/proto/:client_id/card/:proto_form_id",
        "exact": true,
        "isOtherPage": false
      }
    ],
    "pathMapping": {
      "proto_clients_id": {
        "type": "n2o/widgets/CHANGE_SELECTED_ID",
        "payload": {
          "widgetId": "proto_clients",
          "value": ":proto_clients_id"
        }
      },
      "proto_contacts_id": {
        "type": "n2o/widgets/CHANGE_SELECTED_ID",
        "payload": {
          "widgetId": "proto_contacts",
          "value": ":proto_contacts_id"
        }
      },
      "client_id": {
        "type": "n2o/widgets/CHANGE_SELECTED_ID",
        "payload": {
          "widgetId": "proto_clients",
          "value": ":client_id"
        }
      },
      "proto_form_id": {
        "type": "n2o/widgets/CHANGE_SELECTED_ID",
        "payload": {
          "widgetId": "proto_form",
          "value": ":proto_form_id"
        }
      }
    },
    "queryMapping": {
      "clients_surname": {
        "get": {
          "type": "n2o/models/UPDATE",
          "payload": {
            "prefix": "filter",
            "key": "proto_clients",
            "field": "surname",
            "value": ":clients_surname"
          }
        },
        "set": {
          "value": "`surname`",
          "link": "models.filter['proto_clients']"
        }
      },
      "clients_name": {
        "get": {
          "type": "n2o/models/UPDATE",
          "payload": {
            "prefix": "filter",
            "key": "proto_clients",
            "field": "name",
            "value": ":clients_name"
          }
        },
        "set": {
          "value": "`name`",
          "link": "models.filter['proto_clients']"
        }
      },
      "clients_bdate_begin": {
        "get": {
          "type": "n2o/models/UPDATE",
          "payload": {
            "prefix": "filter",
            "key": "proto_clients",
            "field": "bdate.begin",
            "value": ":clients_bdate_begin"
          }
        },
        "set": {
          "value": "`bdate.begin`",
          "link": "models.filter['proto_clients']"
        }
      },
      "clients_bdate_end": {
        "get": {
          "type": "n2o/models/UPDATE",
          "payload": {
            "prefix": "filter",
            "key": "proto_clients",
            "field": "bdate.end",
            "value": ":clients_bdate_end"
          }
        },
        "set": {
          "value": "`bdate.end`",
          "link": "models.filter['proto_clients']"
        }
      },
      "clients_genders_id": {
        "get": {
          "type": "n2o/models/UPDATE_MAP",
          "payload": {
            "prefix": "filter",
            "key": "proto_clients",
            "field": "genders",
            "value": ":clients_genders_id",
            "map": "id"
          }
        },
        "set": {
          "value": "`genders.map(function(t){return t.id})`",
          "link": "models.filter['proto_clients']"
        }
      },
      "clients_vip": {
        "get": {
          "type": "n2o/models/UPDATE",
          "payload": {
            "prefix": "filter",
            "key": "proto_clients",
            "field": "vip",
            "value": ":clients_vip"
          }
        },
        "set": {
          "value": "`vip`",
          "link": "models.filter['proto_clients']"
        }
      },
      "sorting_clients_surname": {
        "get": {
          "type": "n2o/widgets/SORT_BY",
          "payload": {
            "widgetId": "proto_clients",
            "fieldKey": "surname",
            "sortDirection": ":sorting_clients_surname"
          }
        },
        "set": {
          "link": "widgets['proto_clients'].sorting.surname"
        }
      },
      "sorting_clients_name": {
        "get": {
          "type": "n2o/widgets/SORT_BY",
          "payload": {
            "widgetId": "proto_clients",
            "fieldKey": "name",
            "sortDirection": ":sorting_clients_name"
          }
        },
        "set": {
          "link": "widgets['proto_clients'].sorting.name"
        }
      },
      "sorting_clients_patrName": {
        "get": {
          "type": "n2o/widgets/SORT_BY",
          "payload": {
            "widgetId": "proto_clients",
            "fieldKey": "patrName",
            "sortDirection": ":sorting_clients_patrName"
          }
        },
        "set": {
          "link": "widgets['proto_clients'].sorting.patrName"
        }
      },
      "sorting_clients_birthday": {
        "get": {
          "type": "n2o/widgets/SORT_BY",
          "payload": {
            "widgetId": "proto_clients",
            "fieldKey": "birthday",
            "sortDirection": ":sorting_clients_birthday"
          }
        },
        "set": {
          "link": "widgets['proto_clients'].sorting.birthday"
        }
      },
      "sorting_clients_age": {
        "get": {
          "type": "n2o/widgets/SORT_BY",
          "payload": {
            "widgetId": "proto_clients",
            "fieldKey": "age",
            "sortDirection": ":sorting_clients_age"
          }
        },
        "set": {
          "link": "widgets['proto_clients'].sorting.age"
        }
      },
      "sorting_contacts_value": {
        "get": {
          "type": "n2o/widgets/SORT_BY",
          "payload": {
            "widgetId": "proto_contacts",
            "fieldKey": "value",
            "sortDirection": ":sorting_contacts_value"
          }
        },
        "set": {
          "link": "widgets['proto_contacts'].sorting.value"
        }
      },
      "sorting_form_surname": {
        "get": {
          "type": "n2o/widgets/SORT_BY",
          "payload": {
            "widgetId": "proto_form",
            "fieldKey": "surname",
            "sortDirection": ":sorting_form_surname"
          }
        },
        "set": {
          "link": "widgets['proto_form'].sorting.surname"
        }
      },
      "sorting_form_name": {
        "get": {
          "type": "n2o/widgets/SORT_BY",
          "payload": {
            "widgetId": "proto_form",
            "fieldKey": "name",
            "sortDirection": ":sorting_form_name"
          }
        },
        "set": {
          "link": "widgets['proto_form'].sorting.name"
        }
      },
      "sorting_form_patrName": {
        "get": {
          "type": "n2o/widgets/SORT_BY",
          "payload": {
            "widgetId": "proto_form",
            "fieldKey": "patrName",
            "sortDirection": ":sorting_form_patrName"
          }
        },
        "set": {
          "link": "widgets['proto_form'].sorting.patrName"
        }
      },
      "sorting_form_birthday": {
        "get": {
          "type": "n2o/widgets/SORT_BY",
          "payload": {
            "widgetId": "proto_form",
            "fieldKey": "birthday",
            "sortDirection": ":sorting_form_birthday"
          }
        },
        "set": {
          "link": "widgets['proto_form'].sorting.birthday"
        }
      },
      "sorting_form_age": {
        "get": {
          "type": "n2o/widgets/SORT_BY",
          "payload": {
            "widgetId": "proto_form",
            "fieldKey": "age",
            "sortDirection": ":sorting_form_age"
          }
        },
        "set": {
          "link": "widgets['proto_form'].sorting.age"
        }
      }
    }
  },
  "toolbar": {
    "topRight": [
      {
        "id": "topRight0",
        "buttons": [
          {
            "src": "StandardButton",
            "id": "create2",
            "label": "Добавить клиента",
            "icon": "fa fa-plus",
            "action": {},
            "hint": "Добавить клиента",
            "hintPosition": "bottom",
            "conditions": {},
            "color": "primary",
            "url": "/proto/create2",
            "target": "application",
            "pathMapping": {},
            "queryMapping": {}
          }
        ]
      }
    ]
  },
  "widgets": {
    "proto_clients": {
      "src": "TilesWidget",
      "id": "tiles",
      "dataProvider": {
        "url": "n2o/data/tiles",
        "pathMapping": {},
        "queryMapping": {},
        "headersMapping": {}
      },
      "paging": {
        "size": 10
      },
      "filter": {
        "filterFieldsets": [
          {
            "src": "StandardFieldset",
            "rows": [
              {
                "cols": [
                  {
                    "fields": [
                      {
                        "src": "StandardField",
                        "id": "surname",
                        "label": "Фамилия",
                        "dependency": [],
                        "control": {
                          "src": "InputText",
                          "id": "surname"
                        }
                      }
                    ]
                  },
                  {
                    "fields": [
                      {
                        "src": "StandardField",
                        "id": "name",
                        "label": "Имя",
                        "dependency": [],
                        "control": {
                          "src": "InputText",
                          "id": "name"
                        }
                      }
                    ]
                  },
                  {
                    "fields": [
                      {
                        "src": "StandardField",
                        "id": "bdate",
                        "label": "Дата рождения",
                        "dependency": [],
                        "control": {
                          "src": "DateInterval",
                          "id": "bdate",
                          "dateFormat": "DD.MM.YYYY",
                          "utc": false,
                          "outputFormat": "YYYY-MM-DDTHH:mm:ss"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "cols": [
                  {
                    "size": 10,
                    "fields": [
                      {
                        "src": "StandardField",
                        "id": "genders",
                        "label": "Пол",
                        "dependency": [],
                        "control": {
                          "src": "CheckboxGroup",
                          "id": "genders",
                          "valueFieldId": "id",
                          "labelFieldId": "name",
                          "sortFieldId": "name",
                          "dataProvider": {
                            "url": "n2o/data/ProtoGender",
                            "queryMapping": {}
                          },
                          "inline": true,
                          "type": "n2o"
                        }
                      }
                    ]
                  },
                  {
                    "fields": [
                      {
                        "src": "StandardField",
                        "id": "vip",
                        "dependency": [],
                        "control": {
                          "src": "Checkbox",
                          "id": "vip",
                          "label": "VIP",
                          "defaultUnchecked": "null"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "filterButtonId": "filter",
        "blackResetList": [],
        "filterPlace": "top",
        "validation": {}
      },
      "colsSm": 2,
      "colsMd": 3,
      "colsLg": 4,
      "tiles": [
        {
          "id": "tile1",
          "className": "p-4",
          "style": {},
          "fieldKey": "url",
          "src": "ImageCell"
        },
        {
          "id": "tile2",
          "className": "mt-4",
          "style": {},
          "fieldKey": "text",
          "src": "TextCell"
        },
        {
          "id": "tile3",
          "className": "mt-4",
          "style": {},
          "fieldKey": "rating",
          "src": "RatingCell"
        }
      ]
    },
    "proto_contacts": {
      "src": "ListWidget",
      "id": "proto_contacts",
      "dataProvider": {
        "url": "n2o/data/proto/:proto_clients_id/contacts",
        "pathMapping": {
          "proto_clients_id": {
            "link": "models.resolve['proto_clients'].id"
          }
        },
        "queryMapping": {}
      },
      "toolbar": {
        "topLeft": [
          {
            "id": "topLeft0",
            "buttons": [
              {
                "src": "StandardButton",
                "id": "create",
                "label": "Создать",
                "icon": "fa fa-plus",
                "action": {
                  "type": "n2o/overlays/INSERT",
                  "payload": {
                    "name": "proto_contacts_create",
                    "pageId": "proto_contacts_create",
                    "pageUrl": "/proto/:proto_clients_id/contacts/create",
                    "pathMapping": {
                      "proto_clients_id": {
                        "link": "models.resolve['proto_clients'].id"
                      }
                    },
                    "queryMapping": {},
                    "closeButton": true,
                    "visible": true,
                    "mode": "modal"
                  }
                },
                "conditions": {}
              }
            ]
          }
        ]
      },
      "actions": {
        "create": {
          "type": "n2o/overlays/INSERT",
          "payload": {
            "name": "proto_contacts_create",
            "pageId": "proto_contacts_create",
            "pageUrl": "/proto/:proto_clients_id/contacts/create",
            "pathMapping": {
              "proto_clients_id": {
                "link": "models.resolve['proto_clients'].id"
              }
            },
            "queryMapping": {},
            "closeButton": true,
            "visible": true,
            "mode": "modal"
          }
        },
        "update": {
          "type": "n2o/overlays/INSERT",
          "payload": {
            "name": "proto_contacts_update",
            "pageId": "proto_contacts_update",
            "pageUrl": "/proto/:proto_clients_id/contacts/:proto_contacts_id/update",
            "pathMapping": {
              "proto_clients_id": {
                "link": "models.resolve['proto_clients'].id"
              },
              "proto_contacts_id": {
                "link": "models.resolve['proto_contacts'].id"
              }
            },
            "queryMapping": {},
            "closeButton": true,
            "visible": true,
            "mode": "modal"
          }
        },
        "delete": {
          "type": "n2o/actionImpl/START_INVOKE",
          "payload": {
            "widgetId": "proto_contacts",
            "dataProvider": {
              "url": "n2o/data/proto/:proto_clients_id/contacts/:proto_contacts_id/delete",
              "pathMapping": {
                "proto_contacts_id": {
                  "link": "models.resolve['proto_contacts'].id"
                },
                "proto_clients_id": {
                  "link": "models.resolve['proto_clients'].id"
                }
              },
              "method": "POST",
              "optimistic": false
            },
            "modelLink": "models.resolve['proto_contacts']"
          },
          "meta": {
            "success": {
              "refresh": {
                "type": "widget",
                "options": {
                  "widgetId": "proto_contacts"
                }
              }
            },
            "fail": {}
          }
        }
      },
      "dependency": {
        "fetch": [
          {
            "on": "models.resolve['proto_clients']"
          }
        ],
        "visible": [
          {
            "on": "models.resolve['proto_clients']",
            "condition": "name != 'Мария'"
          }
        ]
      },
      "list": {
        "leftTop": {
          "src": "IconCell",
          "icon": "`type.id == 2 ? 'fa fa-phone' : type.id == 4 ? 'fa fa-envelop' : type.id == 7 ? 'fa fa-fax' : null`"
        },
        "extra": {
          "src": "ButtonsCell",
          "toolbar": [
            {
              "buttons": [
                {
                  "src": "StandardButton",
                  "id": "update",
                  "label": "Изменить",
                  "icon": "fa fa-pencil",
                  "action": {
                    "type": "n2o/overlays/INSERT",
                    "payload": {
                      "name": "proto_contacts_update",
                      "pageId": "proto_contacts_update",
                      "pageUrl": "/proto/:proto_clients_id/contacts/:proto_contacts_id/update",
                      "pathMapping": {
                        "proto_clients_id": {
                          "link": "models.resolve['proto_clients'].id"
                        },
                        "proto_contacts_id": {
                          "link": "models.resolve['proto_contacts'].id"
                        }
                      },
                      "queryMapping": {},
                      "closeButton": true,
                      "visible": true,
                      "mode": "modal"
                    }
                  },
                  "conditions": {},
                  "color": "link"
                },
                {
                  "src": "StandardButton",
                  "id": "delete",
                  "label": "Удалить",
                  "icon": "fa fa-trash",
                  "action": {
                    "type": "n2o/actionImpl/START_INVOKE",
                    "payload": {
                      "widgetId": "proto_contacts",
                      "dataProvider": {
                        "url": "n2o/data/proto/:proto_clients_id/contacts/:proto_contacts_id/delete",
                        "pathMapping": {
                          "proto_contacts_id": {
                            "link": "models.resolve['proto_contacts'].id"
                          },
                          "proto_clients_id": {
                            "link": "models.resolve['proto_clients'].id"
                          }
                        },
                        "method": "POST",
                        "optimistic": false
                      },
                      "modelLink": "models.resolve['proto_contacts']"
                    },
                    "meta": {
                      "success": {
                        "refresh": {
                          "type": "widget",
                          "options": {
                            "widgetId": "proto_contacts"
                          }
                        }
                      },
                      "fail": {}
                    }
                  },
                  "conditions": {},
                  "confirm": {
                    "text": "Нажмите \"Да\", если Вы уверены в совершаемом действии. Или \"Нет\", если ещё хотите обдумать совершаемое действие.",
                    "title": "Предупреждение",
                    "okLabel": "Да",
                    "cancelLabel": "Нет",
                    "mode": "modal"
                  },
                  "color": "link"
                }
              ]
            }
          ]
        },
        "header": {
          "id": "type.name",
          "fieldKey": "type.name",
          "src": "TextCell",
          "className": "text-muted"
        },
        "body": {
          "id": "value",
          "fieldKey": "value",
          "src": "TextCell"
        }
      },
      "paging": {
        "size": 5
      }
    },
    "proto_form": {
      "src": "FormWidget",
      "dataProvider": {
        "url": "n2o/data/proto/:client_id/card",
        "pathMapping": {
          "client_id": {
            "link": "models.resolve['proto_clients'].id"
          }
        },
        "queryMapping": {}
      },
      "actions": {},
      "dependency": {
        "fetch": [
          {
            "on": "models.resolve['proto_clients']"
          }
        ]
      },
      "form": {
        "fieldsets": [
          {
            "src": "MultiFieldset",
            "needRemoveAllButton": true,
            "needCopyButton": true,
            "name": "members",
            "label": "#index. Такой вот плейсхолдер",
            "rows": [
              {
                "cols": [
                  {
                    "fields": [
                      {
                        "src": "StandardField",
                        "id": "surname",
                        "label": "Фамилия",
                        "dependency": [
                          {
                            "type": "enabled",
                            "on": ["members[#index].name"],
                            "expression": "members[#index].name !== 'test'",
                            "applyOnInit": true
                          }
                        ],
                        "control": {
                          "src": "InputText",
                          "id": "surname"
                        }
                      }
                    ]
                  },
                  {
                    "fields": [
                      {
                        "src": "StandardField",
                        "id": "name",
                        "label": "Имя",
                        "dependency": [],
                        "control": {
                          "src": "InputText",
                          "id": "name"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "cols": [
                  {
                    "size": 8,
                    "fields": [
                      {
                        "src": "StandardField",
                        "id": "gender",
                        "enabled": false,
                        "label": "Пол",
                        "dependency": [],
                        "control": {
                          "src": "RadioGroup",
                          "id": "gender",
                          "valueFieldId": "id",
                          "labelFieldId": "name",
                          "sortFieldId": "name",
                          "size": 30,
                          "dataProvider": {
                            "url": "n2o/data/ProtoGender",
                            "queryMapping": {}
                          },
                          "type": "n2o"
                        }
                      }
                    ]
                  },
                  {
                    "fields": [
                      {
                        "src": "StandardField",
                        "id": "vip",
                        "enabled": false,
                        "dependency": [],
                        "style": {"fontWeight": "bold"},
                        "control": {
                          "src": "Checkbox",
                          "id": "vip",
                          "label": "VIP",
                          "defaultUnchecked": "null",
                          "style": {"fontWeight": "bold"}
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "validation": {},
        "modelPrefix": "resolve",
        "fetchOnInit": false,
        "autoFocus": true
      }
    }
  },
  "regions": {
    "left": [
      {
        "src": "PanelRegion",
        "hasTabs": false,
        "headerTitle": "Данные клиента",
        "open": true,
        "collapsible": false,
        "fullScreen": false,
        "header": true,
        "panels": [
          {
            "id": "panel1",
            "label": "Клиенты",
            "opened": true,
            "widgetId": "proto_clients"
          }
        ]
      }
    ]
  },
  "actions": {
    "create2": {}
  },


  "needScrollButton": true,
  "src": "TopLeftRightPage",
  "places": {
    "top": {
      "width": "100%",
      "fixed": true
    },
    "left": {
      "width": "100%"
    },
    "right": {
      "width": "0",
      "fixed": true,
      "offset": 100
    }
  },


  "page": {
    "title": "Список контактов"
  }
}
