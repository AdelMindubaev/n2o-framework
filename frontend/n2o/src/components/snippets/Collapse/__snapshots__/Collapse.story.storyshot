// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots UI Компоненты/Collapse Компонент type=default 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        UI Компоненты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Collapse
      </li>
      <li
        className="breadcrumb-item active"
      >
        Компонент type=default
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "ui-компоненты-collapse--компонент-type-default",
                        "kind": "UI Компоненты/Collapse",
                        "name": "Компонент type=default",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\snippets\\\\Collapse\\\\Collapse.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Сворачиваемый список'
      ~~~js
      import Collapse, { Panel } from 'n2o/lib/components/snippets/Collapse/Collapse';
      
      <Collapse defaultActiveKey=\\"1\\">
        <Panel key=\\"1\\" header=\\"Первый\\" type=\\"default\\" >{textToPanel}</Panel>
        <Panel key=\\"2\\" header=\\"Второй\\" type=\\"default\\" >{textToPanel}</Panel>
        <Panel key=\\"3\\" header=\\"Третий\\" type=\\"default\\" >{textToPanel}</Panel>
      </Collapse>
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Компонент type=default",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Сворачиваемый список'
      ~~~js
      import Collapse, { Panel } from 'n2o/lib/components/snippets/Collapse/Collapse';
      
      <Collapse defaultActiveKey=\\"1\\">
        <Panel key=\\"1\\" header=\\"Первый\\" type=\\"default\\" >{textToPanel}</Panel>
        <Panel key=\\"2\\" header=\\"Второй\\" type=\\"default\\" >{textToPanel}</Panel>
        <Panel key=\\"3\\" header=\\"Третий\\" type=\\"default\\" >{textToPanel}</Panel>
      </Collapse>
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Collapse
                      accordion={false}
                      activeKey=""
                      defaultActiveKey=""
                      destroyInactivePanel={false}
                      type="default"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots UI Компоненты/Collapse Компонент type=divider 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        UI Компоненты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Collapse
      </li>
      <li
        className="breadcrumb-item active"
      >
        Компонент type=divider
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "ui-компоненты-collapse--компонент-type-divider",
                        "kind": "UI Компоненты/Collapse",
                        "name": "Компонент type=divider",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\snippets\\\\Collapse\\\\Collapse.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Сворачиваемый список'
      ~~~js
      import Collapse, { Panel } from 'n2o/lib/components/snippets/Collapse/Collapse';
      
      <Collapse defaultActiveKey=\\"1\\">
        <Panel key=\\"1\\" header=\\"Первый\\" type=\\"divider\\" >{textToPanel}</Panel>
        <Panel key=\\"2\\" header=\\"Второй\\" type=\\"divider\\" >{textToPanel}</Panel>
        <Panel key=\\"3\\" header=\\"Третий\\" type=\\"divider\\" >{textToPanel}</Panel>
      </Collapse>
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Компонент type=divider",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Сворачиваемый список'
      ~~~js
      import Collapse, { Panel } from 'n2o/lib/components/snippets/Collapse/Collapse';
      
      <Collapse defaultActiveKey=\\"1\\">
        <Panel key=\\"1\\" header=\\"Первый\\" type=\\"divider\\" >{textToPanel}</Panel>
        <Panel key=\\"2\\" header=\\"Второй\\" type=\\"divider\\" >{textToPanel}</Panel>
        <Panel key=\\"3\\" header=\\"Третий\\" type=\\"divider\\" >{textToPanel}</Panel>
      </Collapse>
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Collapse
                      type="divider"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots UI Компоненты/Collapse Компонент type=line 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        UI Компоненты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Collapse
      </li>
      <li
        className="breadcrumb-item active"
      >
        Компонент type=line
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "ui-компоненты-collapse--компонент-type-line",
                        "kind": "UI Компоненты/Collapse",
                        "name": "Компонент type=line",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\snippets\\\\Collapse\\\\Collapse.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Сворачиваемый список'
      ~~~js
      import Collapse, { Panel } from 'n2o/lib/components/snippets/Collapse/Collapse';
      
      <Collapse defaultActiveKey=\\"1\\">
        <Panel key=\\"1\\" header=\\"Первый\\" type=\\"line\\" >{textToPanel}</Panel>
        <Panel key=\\"2\\" header=\\"Второй\\" type=\\"line\\" >{textToPanel}</Panel>
        <Panel key=\\"3\\" header=\\"Третий\\" type=\\"line\\" >{textToPanel}</Panel>
      </Collapse>
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Компонент type=line",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Сворачиваемый список'
      ~~~js
      import Collapse, { Panel } from 'n2o/lib/components/snippets/Collapse/Collapse';
      
      <Collapse defaultActiveKey=\\"1\\">
        <Panel key=\\"1\\" header=\\"Первый\\" type=\\"line\\" >{textToPanel}</Panel>
        <Panel key=\\"2\\" header=\\"Второй\\" type=\\"line\\" >{textToPanel}</Panel>
        <Panel key=\\"3\\" header=\\"Третий\\" type=\\"line\\" >{textToPanel}</Panel>
      </Collapse>
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Collapse
                      type="line"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots UI Компоненты/Collapse Компонент с InputSelect внутри 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        UI Компоненты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Collapse
      </li>
      <li
        className="breadcrumb-item active"
      >
        Компонент с InputSelect внутри
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "ui-компоненты-collapse--компонент-с-inputselect-внутри",
                        "kind": "UI Компоненты/Collapse",
                        "name": "Компонент с InputSelect внутри",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\snippets\\\\Collapse\\\\Collapse.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Сворачиваемый список'
      ~~~js
      import Collapse, { Panel } from 'n2o/lib/components/snippets/Collapse/Collapse';
      import InputSelect from 'n2o/lib/components/controls/InputSelect/InputSelect';
      
      <Collapse defaultActiveKey=\\"1\\">
        <Panel key=\\"1\\" header=\\"Первый\\">
          <InputSelect {...inputSelectProps} options={InputSelectJson.value} />
        </Panel>
        <Panel key=\\"2\\" header=\\"Второй\\">
          <InputSelect {...inputSelectProps} options={InputSelectJson.value} />
        </Panel>
      </Collapse>
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Компонент с InputSelect внутри",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Сворачиваемый список'
      ~~~js
      import Collapse, { Panel } from 'n2o/lib/components/snippets/Collapse/Collapse';
      import InputSelect from 'n2o/lib/components/controls/InputSelect/InputSelect';
      
      <Collapse defaultActiveKey=\\"1\\">
        <Panel key=\\"1\\" header=\\"Первый\\">
          <InputSelect {...inputSelectProps} options={InputSelectJson.value} />
        </Panel>
        <Panel key=\\"2\\" header=\\"Второй\\">
          <InputSelect {...inputSelectProps} options={InputSelectJson.value} />
        </Panel>
      </Collapse>
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Collapse
                      accordion={false}
                      dataKey="items"
                      defaultActiveKey="1"
                      destroyInactivePanel={false}
                    >
                      <Panel
                        header="Первый"
                        type="default"
                      >
                        <InputSelect
                          badgeColorFieldId="color"
                          badgeFieldId="badgeField"
                          closePopupOnSelect={false}
                          disabled={false}
                          eventTypes={
                            Array [
                              "mousedown",
                              "touchstart",
                            ]
                          }
                          excludeScrollbar={false}
                          filter="includes"
                          format="\`id+' '+id\`"
                          groupFieldId="country"
                          hasCheckboxes={true}
                          iconFieldId="icon"
                          imageFieldId="image"
                          labelFieldId="name"
                          loading={false}
                          multiSelect={true}
                          options={
                            Array [
                              Object {
                                "badgeField": "Художник",
                                "color": "danger",
                                "country": "Россия",
                                "dob": "11.09.1992",
                                "icon": "fa fa-address-card",
                                "id": 1,
                                "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png",
                                "name": "Алексей Николаев",
                              },
                              Object {
                                "badgeField": "Писатель",
                                "color": "success",
                                "country": "Россия",
                                "dob": "24.04.1891",
                                "icon": "fa fa-address-card",
                                "id": 2,
                                "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png",
                                "name": "Игонь Николаев",
                              },
                              Object {
                                "badgeField": "Художник",
                                "color": "danger",
                                "country": "США",
                                "dob": "03.12.1981",
                                "icon": "fa fa-address-card",
                                "id": 3,
                                "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png",
                                "name": "Владимир Серпухов",
                              },
                              Object {
                                "country": "США",
                                "dob": "11.11.2003",
                                "icon": "fa fa-address-card",
                                "id": 4,
                                "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png",
                                "name": "Анатолий Петухов",
                              },
                              Object {
                                "country": "Беларусь",
                                "dob": "20.11.1991",
                                "icon": "fa fa-address-card",
                                "id": 5,
                                "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_9319.png",
                                "name": "Николай Патухов",
                              },
                            ]
                          }
                          outsideClickIgnoreClass="ignore-react-onclickoutside"
                          placeholder="Введите"
                          preventDefault={false}
                          resetOnBlur={false}
                          stopPropagation={false}
                          value={
                            Array [
                              Object {
                                "badgeField": "Художник",
                                "color": "danger",
                                "country": "Россия",
                                "dob": "11.09.1992",
                                "icon": "fa fa-address-card",
                                "id": 1,
                                "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png",
                                "name": "Алексей Николаев",
                              },
                              Object {
                                "badgeField": "Писатель",
                                "color": "success",
                                "country": "Россия",
                                "dob": "24.04.1891",
                                "icon": "fa fa-address-card",
                                "id": 2,
                                "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png",
                                "name": "Игонь Николаев",
                              },
                              Object {
                                "badgeField": "Художник",
                                "color": "danger",
                                "country": "США",
                                "dob": "03.12.1981",
                                "icon": "fa fa-address-card",
                                "id": 3,
                                "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png",
                                "name": "Владимир Серпухов",
                              },
                              Object {
                                "country": "США",
                                "dob": "11.11.2003",
                                "icon": "fa fa-address-card",
                                "id": 4,
                                "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png",
                                "name": "Анатолий Петухов",
                              },
                              Object {
                                "country": "Беларусь",
                                "dob": "20.11.1991",
                                "icon": "fa fa-address-card",
                                "id": 5,
                                "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_9319.png",
                                "name": "Николай Патухов",
                              },
                            ]
                          }
                          valueFieldId="id"
                        />
                      </Panel>
                      <Panel
                        header="Второй"
                        type="default"
                      >
                        <InputSelect
                          badgeColorFieldId="color"
                          badgeFieldId="badgeField"
                          closePopupOnSelect={false}
                          disabled={false}
                          eventTypes={
                            Array [
                              "mousedown",
                              "touchstart",
                            ]
                          }
                          excludeScrollbar={false}
                          filter="includes"
                          format="\`id+' '+id\`"
                          groupFieldId="country"
                          hasCheckboxes={true}
                          iconFieldId="icon"
                          imageFieldId="image"
                          labelFieldId="name"
                          loading={false}
                          multiSelect={true}
                          options={
                            Array [
                              Object {
                                "badgeField": "Художник",
                                "color": "danger",
                                "country": "Россия",
                                "dob": "11.09.1992",
                                "icon": "fa fa-address-card",
                                "id": 1,
                                "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png",
                                "name": "Алексей Николаев",
                              },
                              Object {
                                "badgeField": "Писатель",
                                "color": "success",
                                "country": "Россия",
                                "dob": "24.04.1891",
                                "icon": "fa fa-address-card",
                                "id": 2,
                                "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png",
                                "name": "Игонь Николаев",
                              },
                              Object {
                                "badgeField": "Художник",
                                "color": "danger",
                                "country": "США",
                                "dob": "03.12.1981",
                                "icon": "fa fa-address-card",
                                "id": 3,
                                "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png",
                                "name": "Владимир Серпухов",
                              },
                              Object {
                                "country": "США",
                                "dob": "11.11.2003",
                                "icon": "fa fa-address-card",
                                "id": 4,
                                "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png",
                                "name": "Анатолий Петухов",
                              },
                              Object {
                                "country": "Беларусь",
                                "dob": "20.11.1991",
                                "icon": "fa fa-address-card",
                                "id": 5,
                                "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_9319.png",
                                "name": "Николай Патухов",
                              },
                            ]
                          }
                          outsideClickIgnoreClass="ignore-react-onclickoutside"
                          placeholder="Введите"
                          preventDefault={false}
                          resetOnBlur={false}
                          stopPropagation={false}
                          value={
                            Array [
                              Object {
                                "badgeField": "Художник",
                                "color": "danger",
                                "country": "Россия",
                                "dob": "11.09.1992",
                                "icon": "fa fa-address-card",
                                "id": 1,
                                "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png",
                                "name": "Алексей Николаев",
                              },
                              Object {
                                "badgeField": "Писатель",
                                "color": "success",
                                "country": "Россия",
                                "dob": "24.04.1891",
                                "icon": "fa fa-address-card",
                                "id": 2,
                                "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png",
                                "name": "Игонь Николаев",
                              },
                              Object {
                                "badgeField": "Художник",
                                "color": "danger",
                                "country": "США",
                                "dob": "03.12.1981",
                                "icon": "fa fa-address-card",
                                "id": 3,
                                "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png",
                                "name": "Владимир Серпухов",
                              },
                              Object {
                                "country": "США",
                                "dob": "11.11.2003",
                                "icon": "fa fa-address-card",
                                "id": 4,
                                "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png",
                                "name": "Анатолий Петухов",
                              },
                              Object {
                                "country": "Беларусь",
                                "dob": "20.11.1991",
                                "icon": "fa fa-address-card",
                                "id": 5,
                                "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_9319.png",
                                "name": "Николай Патухов",
                              },
                            ]
                          }
                          valueFieldId="id"
                        />
                      </Panel>
                    </Collapse>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots UI Компоненты/Collapse Компонент с длинным заголовком 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        UI Компоненты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Collapse
      </li>
      <li
        className="breadcrumb-item active"
      >
        Компонент с длинным заголовком
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "ui-компоненты-collapse--компонент-с-длинным-заголовком",
                        "kind": "UI Компоненты/Collapse",
                        "name": "Компонент с длинным заголовком",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\snippets\\\\Collapse\\\\Collapse.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Сворачиваемый список'
      ~~~js
      import Collapse, { Panel } from 'n2o/lib/components/snippets/Collapse/Collapse';
      import InputSelect from 'n2o/lib/components/controls/InputSelect/InputSelect';
      
      <Collapse defaultActiveKey=\\"1\\">
        <Panel
          key=\\"1\\"
          type=\\"default\\"
          header={longText}
        >
          {textToPanel}
        </Panel>
        <Panel
          key=\\"2\\"
          type=\\"line\\"
          header={longText}
        >
          {textToPanel}
        </Panel>
        <Panel
          key=\\"3\\"
          type=\\"divider\\"
          header={longText}
        >
          {textToPanel}
        </Panel>
        <Panel
          key=\\"4\\"
          type=\\"divider\\"
          header={longText}
        >
          {textToPanel}
        </Panel>
      </Collapse>
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Компонент с длинным заголовком",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Сворачиваемый список'
      ~~~js
      import Collapse, { Panel } from 'n2o/lib/components/snippets/Collapse/Collapse';
      import InputSelect from 'n2o/lib/components/controls/InputSelect/InputSelect';
      
      <Collapse defaultActiveKey=\\"1\\">
        <Panel
          key=\\"1\\"
          type=\\"default\\"
          header={longText}
        >
          {textToPanel}
        </Panel>
        <Panel
          key=\\"2\\"
          type=\\"line\\"
          header={longText}
        >
          {textToPanel}
        </Panel>
        <Panel
          key=\\"3\\"
          type=\\"divider\\"
          header={longText}
        >
          {textToPanel}
        </Panel>
        <Panel
          key=\\"4\\"
          type=\\"divider\\"
          header={longText}
        >
          {textToPanel}
        </Panel>
      </Collapse>
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Collapse
                      accordion={false}
                      dataKey="items"
                      defaultActiveKey="1"
                      destroyInactivePanel={false}
                      style={
                        Object {
                          "maxWidth": "800px",
                        }
                      }
                    >
                      <Panel
                        header="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis corporis ex expedita magnam quibusdam quisquam quod rerum. Assumenda deleniti, earum ipsa porro praesentium qui quisquam quod repudiandae sequi tempore totam."
                        type="default"
                      >
                        Значимость этих проблем настолько очевидна, что сложившаяся структура организации требует определения и уточнения модели развития! Дорогие друзья, рамки и место обучения кадров создаёт предпосылки качественно новых шагов для дальнейших направлений развития проекта! Дорогие друзья, курс на социально-ориентированный национальный проект представляет собой интересный эксперимент проверки дальнейших направлений развития проекта.
                      </Panel>
                      <Panel
                        header="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis corporis ex expedita magnam quibusdam quisquam quod rerum. Assumenda deleniti, earum ipsa porro praesentium qui quisquam quod repudiandae sequi tempore totam."
                        type="line"
                      >
                        Значимость этих проблем настолько очевидна, что сложившаяся структура организации требует определения и уточнения модели развития! Дорогие друзья, рамки и место обучения кадров создаёт предпосылки качественно новых шагов для дальнейших направлений развития проекта! Дорогие друзья, курс на социально-ориентированный национальный проект представляет собой интересный эксперимент проверки дальнейших направлений развития проекта.
                      </Panel>
                      <Panel
                        header="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis corporis ex expedita magnam quibusdam quisquam quod rerum. Assumenda deleniti, earum ipsa porro praesentium qui quisquam quod repudiandae sequi tempore totam."
                        type="divider"
                      >
                        Значимость этих проблем настолько очевидна, что сложившаяся структура организации требует определения и уточнения модели развития! Дорогие друзья, рамки и место обучения кадров создаёт предпосылки качественно новых шагов для дальнейших направлений развития проекта! Дорогие друзья, курс на социально-ориентированный национальный проект представляет собой интересный эксперимент проверки дальнейших направлений развития проекта.
                      </Panel>
                      <Panel
                        header="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis corporis ex expedita magnam quibusdam quisquam quod rerum. Assumenda deleniti, earum ipsa porro praesentium qui quisquam quod repudiandae sequi tempore totam."
                        type="divider"
                      >
                        Значимость этих проблем настолько очевидна, что сложившаяся структура организации требует определения и уточнения модели развития! Дорогие друзья, рамки и место обучения кадров создаёт предпосылки качественно новых шагов для дальнейших направлений развития проекта! Дорогие друзья, курс на социально-ориентированный национальный проект представляет собой интересный эксперимент проверки дальнейших направлений развития проекта.
                      </Panel>
                    </Collapse>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots UI Компоненты/Collapse Создание через Factory 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        UI Компоненты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Collapse
      </li>
      <li
        className="breadcrumb-item active"
      >
        Создание через Factory
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "ui-компоненты-collapse--создание-через-factory",
                        "kind": "UI Компоненты/Collapse",
                        "name": "Создание через Factory",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\snippets\\\\Collapse\\\\Collapse.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Сворачиваемый список'
      ~~~js
      import Factory from 'n2o/lib/core/factory/Factory';
      
      <Factory level={SNIPPETS} id=\\"uniqId\\" {...collapseProps} />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Создание через Factory",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Сворачиваемый список'
      ~~~js
      import Factory from 'n2o/lib/core/factory/Factory';
      
      <Factory level={SNIPPETS} id=\\"uniqId\\" {...collapseProps} />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      accordion={false}
                      dataKey="items"
                      defaultActiveKey="1"
                      destroyInactivePanel={false}
                      id="uniqId"
                      items={
                        Array [
                          Object {
                            "header": "Первый",
                            "key": "1",
                            "text": "Teкст",
                          },
                          Object {
                            "header": "Второй",
                            "key": "2",
                            "text": "Teкст",
                          },
                        ]
                      }
                      level="snippets"
                      src="Collapse"
                      type="default"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;
