// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Действия Page Buttons с предустановленным visible/disabled 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Действия
      </li>
      <li
        className="breadcrumb-item active"
      >
        Page Buttons с предустановленным visible/disabled
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "действия--page-buttons-с-предустановленным-visible-disabled",
                        "kind": "Действия",
                        "name": "Page Buttons с предустановленным visible/disabled",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\actions\\\\Actions.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Page Buttons с предустановленным visible/disabled",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <div
                      className="row mb-2"
                    >
                      Кнопку не видно, потому что она скрыта
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="visibleTest"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "id": "111",
                                  "title": "Кнопка",
                                  "visible": false,
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      Кнопка неактивна
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="disabledTest"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "disabled": true,
                                  "id": "1112",
                                  "title": "Кнопка",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      Дропдаун не видно, потому что он скрыт
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="notVisibleDropDown"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "id": "11113",
                                  "subMenu": Array [
                                    Object {
                                      "actionId": "dummy",
                                      "id": "testBtn29",
                                      "title": "Элемент списка",
                                    },
                                    Object {
                                      "actionId": "dummy",
                                      "id": "testBtn29",
                                      "title": "Элемент списка",
                                    },
                                  ],
                                  "title": "Дропдаун",
                                  "visible": false,
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      Дропдаун неактивен
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="dropdownDisabled"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "disabled": true,
                                  "id": "11134",
                                  "subMenu": Array [
                                    Object {
                                      "actionId": "dummy",
                                      "id": "testBtn29",
                                      "title": "Элемент списка",
                                    },
                                    Object {
                                      "actionId": "dummy",
                                      "id": "testBtn29",
                                      "title": "Элемент списка",
                                    },
                                  ],
                                  "title": "Дропдаун",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Действия Варианты кнопок 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Действия
      </li>
      <li
        className="breadcrumb-item active"
      >
        Варианты кнопок
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "действия--варианты-кнопок",
                        "kind": "Действия",
                        "name": "Варианты кнопок",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\actions\\\\Actions.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Варианты кнопок",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <div
                      className="row mb-2"
                    >
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="test"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "id": "testBtn21",
                                  "title": "Кнопка",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="test"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "id": "testBtn22",
                                  "title": "Кнопка",
                                },
                                Object {
                                  "actionId": "dummy",
                                  "id": "testBtn23",
                                  "title": "Еще кнопка",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="test"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "id": "testBtn24",
                                  "title": "Кнопка",
                                },
                                Object {
                                  "actionId": "dummy",
                                  "id": "testBtn25",
                                  "title": "Еще кнопка",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "id": "testBtn26",
                                  "title": "Кнопка",
                                },
                                Object {
                                  "actionId": "dummy",
                                  "id": "testBtn27",
                                  "title": "Еще кнопка",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="test"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "color": "primary",
                                  "id": "testBtn28",
                                  "subMenu": Array [
                                    Object {
                                      "actionId": "dummy",
                                      "id": "testBtn29",
                                      "title": "Элемент списка",
                                    },
                                    Object {
                                      "actionId": "dummy",
                                      "id": "testBtn299",
                                      "title": "Элемент списка",
                                    },
                                  ],
                                  "title": "Дропдаун",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="test"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "id": "testBtn30",
                                  "title": "Кнопка",
                                },
                                Object {
                                  "id": "testBtn31",
                                  "subMenu": Array [
                                    Object {
                                      "actionId": "dummy",
                                      "id": "testBtn32",
                                      "title": "Элемент списка",
                                    },
                                  ],
                                  "title": "Дропдаун",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "id": "testBtn33",
                                  "subMenu": Array [
                                    Object {
                                      "actionId": "dummy",
                                      "id": "testBtn34",
                                      "title": "Элемент списка",
                                    },
                                  ],
                                  "title": "Дропдаун",
                                },
                                Object {
                                  "actionId": "dummy",
                                  "id": "testBtn35",
                                  "title": "Кнопка",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="test"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "color": "default",
                                  "id": "testBtn1",
                                  "title": "Кнопка",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "color": "primary",
                                  "id": "testBtn2",
                                  "title": "Кнопка",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "color": "success",
                                  "id": "testBtn3",
                                  "title": "Кнопка",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "color": "info",
                                  "id": "testBtn4",
                                  "title": "Кнопка",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "color": "warning",
                                  "id": "testBtn5",
                                  "title": "Кнопка",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "color": "danger",
                                  "id": "testBtn6",
                                  "title": "Кнопка",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="test"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "icon": "fa fa-apple",
                                  "id": "testBtn7",
                                  "title": "Apple",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "icon": "fa fa-github",
                                  "id": "testBtn8",
                                  "title": "Github",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "icon": "fa fa-telegram",
                                  "id": "testBtn9",
                                  "title": "Telegram",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "icon": "fa fa-vk",
                                  "id": "testBtn10",
                                  "title": "Vk",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "icon": "fa fa-imdb",
                                  "id": "testBtn11",
                                  "title": "Imdb",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "icon": "fa fa-facebook",
                                  "id": "testBtn12",
                                  "title": "Facebook",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="test"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "icon": "fa fa-apple",
                                  "id": "testBtn13",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "icon": "fa fa-github",
                                  "id": "testBtn14",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "icon": "fa fa-telegram",
                                  "id": "testBtn15",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "icon": "fa fa-vk",
                                  "id": "testBtn16",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "icon": "fa fa-imdb",
                                  "id": "testBtn17",
                                },
                              ],
                            },
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "icon": "fa fa-facebook",
                                  "id": "testBtn18",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="large"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "id": "small",
                                  "size": "lg",
                                  "title": "Большая",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="default"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "id": "small",
                                  "title": "Стандартная",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="sm"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "id": "small",
                                  "size": "sm",
                                  "title": "Маленькая",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                    <div
                      className="row mb-2"
                    >
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummyImpl",
                            },
                          }
                        }
                        containerKey="sm"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "hint": "Left",
                                  "hintPosition": "left",
                                  "id": "Left1",
                                  "title": "Left",
                                },
                                Object {
                                  "hint": "Right",
                                  "hintPosition": "right",
                                  "id": "Right1",
                                  "title": "Right",
                                },
                                Object {
                                  "hint": "Top",
                                  "hintPosition": "top",
                                  "id": "Top1",
                                  "title": "Top",
                                },
                                Object {
                                  "hint": "Bottom",
                                  "hintPosition": "bottom",
                                  "id": "Bottom1",
                                  "title": "Bottom",
                                },
                                Object {
                                  "hint": "Left",
                                  "hintPosition": "left",
                                  "icon": "fa fa-vk",
                                  "id": "Left2",
                                  "subMenu": Array [
                                    Object {
                                      "header": true,
                                      "id": "23",
                                      "title": "Заголовок",
                                    },
                                  ],
                                  "title": "Left",
                                },
                                Object {
                                  "hint": "Right",
                                  "hintPosition": "right",
                                  "icon": "fa fa-vk",
                                  "id": "Right2",
                                  "subMenu": Array [
                                    Object {
                                      "header": true,
                                      "id": "23",
                                      "title": "Заголовок",
                                    },
                                  ],
                                  "title": "Right",
                                },
                                Object {
                                  "hint": "Top",
                                  "hintPosition": "top",
                                  "icon": "fa fa-vk",
                                  "id": "Top2",
                                  "subMenu": Array [
                                    Object {
                                      "header": true,
                                      "id": "23",
                                      "title": "Заголовок",
                                    },
                                  ],
                                  "title": "Top",
                                },
                                Object {
                                  "hint": "Bottom",
                                  "hintPosition": "bottom",
                                  "icon": "fa fa-vk",
                                  "id": "Bottom2",
                                  "subMenu": Array [
                                    Object {
                                      "header": true,
                                      "id": "23",
                                      "title": "Заголовок",
                                    },
                                  ],
                                  "title": "Bottom",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Действия Метаданные для виджета 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Действия
      </li>
      <li
        className="breadcrumb-item active"
      >
        Метаданные для виджета
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "действия--метаданные-для-виджета",
                        "kind": "Действия",
                        "name": "Метаданные для виджета",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\actions\\\\Actions.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Метаданные для виджета",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Actions
                      actions={
                        Object {
                          "dummy": Object {
                            "src": "dummy",
                          },
                        }
                      }
                      containerKey="metaBtns"
                      toolbar={
                        Array [
                          Object {
                            "buttons": Array [
                              Object {
                                "actionId": "dummy",
                                "color": "success",
                                "count": "7",
                                "disabled": false,
                                "hint": "Создать запись",
                                "icon": "fa fa-plus",
                                "id": "testBtn11",
                                "size": "md",
                                "title": "Создать",
                                "visible": true,
                              },
                              Object {
                                "actionId": "dummy",
                                "color": "warning",
                                "count": "1",
                                "disabled": true,
                                "hint": "Изменить запись",
                                "icon": "fa fa-pencil",
                                "id": "testBtn12",
                                "size": "md",
                                "title": "Изменить",
                                "visible": true,
                              },
                              Object {
                                "actionId": "dummy",
                                "color": "danger",
                                "count": "34",
                                "disabled": false,
                                "hint": "Удалить запись",
                                "icon": "fa fa-trash",
                                "id": "testBtn13",
                                "size": "md",
                                "title": "Удалить",
                                "visible": true,
                              },
                            ],
                          },
                          Object {
                            "buttons": Array [
                              Object {
                                "actionId": "dummy",
                                "color": "secondary",
                                "count": "9",
                                "disabled": false,
                                "hint": "Копировать запись",
                                "icon": "fa fa-clone",
                                "id": "testBtn21",
                                "size": "md",
                                "title": "Копировать",
                                "visible": true,
                              },
                              Object {
                                "color": "primary",
                                "disabled": false,
                                "hint": "Доп. опции",
                                "icon": "fa fa-info-circle",
                                "id": "testBtn22",
                                "size": "md",
                                "subMenu": Array [
                                  Object {
                                    "actionId": "dummy",
                                    "color": "secondary",
                                    "count": "4",
                                    "disabled": false,
                                    "hint": "Подписать запись",
                                    "icon": "fa fa-paper-plane",
                                    "id": "testBtn221",
                                    "size": "md",
                                    "title": "Подписать",
                                    "visible": true,
                                  },
                                ],
                                "title": "Еще",
                                "visible": true,
                              },
                            ],
                          },
                        ]
                      }
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Действия Ограничение доступа на выпадающие списки 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Действия
      </li>
      <li
        className="breadcrumb-item active"
      >
        Ограничение доступа на выпадающие списки
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "действия--ограничение-доступа-на-выпадающие-списки",
                        "kind": "Действия",
                        "name": "Ограничение доступа на выпадающие списки",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\actions\\\\Actions.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Ограничение доступа на выпадающие списки",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <div>
                      <small>
                        Введите 
                        <mark>
                          admin
                        </mark>
                        , чтобы увидеть выпадающий список
                      </small>
                      <Connect(AuthButton) />
                      <br />
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummy",
                            },
                          }
                        }
                        containerKey="metaBtns"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "id": "testBtn22",
                                  "subMenu": Array [
                                    Object {
                                      "actionId": "dummy",
                                      "id": "testBtn23",
                                      "security": Object {
                                        "roles": Array [
                                          "admin",
                                        ],
                                      },
                                      "title": "Защищенная кнопка",
                                    },
                                    Object {
                                      "actionId": "dummy",
                                      "id": "testBtn23",
                                      "security": Object {
                                        "roles": Array [
                                          "admin",
                                        ],
                                      },
                                      "title": "Защищенная кнопка 2",
                                    },
                                  ],
                                  "title": "Кнопка",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Действия Ограничение доступа на кнопки 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Действия
      </li>
      <li
        className="breadcrumb-item active"
      >
        Ограничение доступа на кнопки
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "действия--ограничение-доступа-на-кнопки",
                        "kind": "Действия",
                        "name": "Ограничение доступа на кнопки",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\actions\\\\Actions.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Ограничение доступа на кнопки",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <div>
                      <small>
                        Введите 
                        <mark>
                          admin
                        </mark>
                        , чтобы увидеть скрытую кнопку
                      </small>
                      <Connect(AuthButton) />
                      <br />
                      <Actions
                        actions={
                          Object {
                            "dummy": Object {
                              "src": "dummy",
                            },
                          }
                        }
                        containerKey="metaBtns"
                        toolbar={
                          Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "dummy",
                                  "id": "testBtn22",
                                  "title": "Кнопка",
                                },
                                Object {
                                  "actionId": "dummy",
                                  "id": "testBtn23",
                                  "security": Object {
                                    "roles": Array [
                                      "admin",
                                    ],
                                  },
                                  "title": "Защищенная кнопка",
                                },
                              ],
                            },
                          ]
                        }
                      />
                    </div>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;
