// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Виджеты/Лист Placeholder 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Лист
      </li>
      <li
        className="breadcrumb-item active"
      >
        Placeholder
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-лист--placeholder",
                        "kind": "Виджеты/Лист",
                        "name": "Placeholder",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\List\\\\ListWidget.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Placeholder",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      actions={
                        Object {
                          "exportModal": Object {
                            "options": Object {
                              "payload": Object {
                                "actions": Object {
                                  "destroyModal": Object {
                                    "options": Object {
                                      "type": "n2o/modals/DESTROY",
                                    },
                                    "src": "perform",
                                  },
                                  "export": Object {
                                    "notification": Object {
                                      "severity": "danger",
                                      "text": "Это сообщение будет отображаться 10 секунд",
                                      "timeout": 10000,
                                    },
                                    "options": Object {
                                      "widgetId": "Page_Table",
                                    },
                                    "redirectTo": "/test",
                                    "src": "exportTable",
                                  },
                                },
                                "closeButton": false,
                                "name": "test2",
                                "size": "sm",
                                "src": "exportModal",
                                "title": "Экспортровать",
                                "toolbar": Array [
                                  Object {
                                    "buttons": Array [
                                      Object {
                                        "actionId": "export",
                                        "className": "btn-primary",
                                        "icon": "fa fa-download",
                                        "id": "export",
                                        "title": "Загрузить",
                                      },
                                      Object {
                                        "actionId": "destroyModal",
                                        "id": "cancelExport",
                                        "title": "Отменить",
                                      },
                                    ],
                                  },
                                ],
                                "type": "n2o/modals/INSERT",
                                "visible": true,
                                "widgetId": "Page_Table",
                              },
                              "type": "n2o/modals/INSERT",
                            },
                            "src": "perform",
                            "widgetId": "Page_Table",
                          },
                          "menuItem0": Object {
                            "options": Object {
                              "payload": Object {
                                "widgetId": "Page_Table",
                              },
                              "type": "n2o/widgets/TOGGLE_FILTER_VISIBILITY",
                            },
                            "src": "perform",
                          },
                          "menuItem2": Object {
                            "options": Object {
                              "payload": Object {
                                "widgetId": "Page_Table",
                              },
                              "type": "n2o/widgets/DATA_REQUEST",
                            },
                            "src": "perform",
                          },
                        }
                      }
                      className="n2o"
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/testListWidget",
                        }
                      }
                      divider={true}
                      fetchOnScroll={false}
                      hasMoreButton={true}
                      hasMoreNutton={true}
                      id="List"
                      level="widgets"
                      list={
                        Object {
                          "body": Object {
                            "id": "body",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "extra": Object {
                            "buttons": Array [
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Make a cat clever",
                                "icon": "fa fa-plus",
                                "id": "1",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Delete",
                                "icon": "fa fa-trash",
                                "id": "2",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                            ],
                            "className": "n2o",
                            "fieldKey": "name",
                            "id": "extra",
                            "src": "ButtonsCell",
                            "style": Object {},
                          },
                          "header": Object {
                            "as": "h3",
                            "id": "header",
                            "src": "TextCell",
                          },
                          "leftBottom": Object {
                            "as": "span",
                            "id": "leftBottom",
                            "src": "TextCell",
                          },
                          "leftTop": Object {
                            "className": "list-image",
                            "id": "leftTop",
                            "src": "ImageCell",
                            "title": "It's a cat!",
                          },
                          "rightBottom": Object {
                            "id": "rightBottom",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "rightTop": Object {
                            "icon": "fa fa-comment",
                            "id": "rightTop",
                            "src": "IconCell",
                            "visible": true,
                          },
                          "subHeader": Object {
                            "as": "h4",
                            "id": "subHeader",
                            "src": "BadgeCell",
                          },
                        }
                      }
                      maxHeight={null}
                      maxWidth={null}
                      paging={
                        Object {
                          "next": true,
                          "prev": true,
                          "size": 10,
                        }
                      }
                      placeholder={
                        Object {
                          "avatar": true,
                          "paragraph": 4,
                          "rows": 3,
                          "type": "list",
                        }
                      }
                      showPagination={false}
                      src="ListWidget"
                      toolbar={
                        Object {
                          "topRight": Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "menuItem0",
                                  "hint": "Изменить видимость фильтров",
                                  "icon": "fa fa-filter",
                                  "id": "menuItem0",
                                },
                                Object {
                                  "actionId": "menuItem2",
                                  "hint": "Обновить данные",
                                  "icon": "fa fa-refresh",
                                  "id": "menuItem2",
                                },
                              ],
                              "id": "topRight0",
                            },
                          ],
                        }
                      }
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Лист Загрузка по скроллу 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Лист
      </li>
      <li
        className="breadcrumb-item active"
      >
        Загрузка по скроллу
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-лист--загрузка-по-скроллу",
                        "kind": "Виджеты/Лист",
                        "name": "Загрузка по скроллу",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\List\\\\ListWidget.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Загрузка по скроллу",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/testListWidget",
                        }
                      }
                      fetchOnScroll={true}
                      id="List"
                      level="widgets"
                      list={
                        Object {
                          "body": Object {
                            "id": "body",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "extra": Object {
                            "buttons": Array [
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Make a cat clever",
                                "icon": "fa fa-plus",
                                "id": "1",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Delete",
                                "icon": "fa fa-trash",
                                "id": "2",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                            ],
                            "className": "n2o",
                            "fieldKey": "name",
                            "id": "extra",
                            "src": "ButtonsCell",
                            "style": Object {},
                          },
                          "header": Object {
                            "as": "h3",
                            "id": "header",
                            "src": "TextCell",
                          },
                          "leftBottom": Object {
                            "as": "span",
                            "id": "leftBottom",
                            "src": "TextCell",
                          },
                          "leftTop": Object {
                            "className": "list-image",
                            "id": "leftTop",
                            "src": "ImageCell",
                            "title": "It's a cat!",
                          },
                          "rightBottom": Object {
                            "id": "rightBottom",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "rightTop": Object {
                            "icon": "fa fa-comment",
                            "id": "rightTop",
                            "src": "IconCell",
                            "visible": true,
                          },
                          "subHeader": Object {
                            "as": "h4",
                            "id": "subHeader",
                            "src": "BadgeCell",
                          },
                        }
                      }
                      maxHeight={290}
                      paging={
                        Object {
                          "next": true,
                          "prev": true,
                          "size": 10,
                        }
                      }
                      src="ListWidget"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Лист Кастомный клик по строке 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Лист
      </li>
      <li
        className="breadcrumb-item active"
      >
        Кастомный клик по строке
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-лист--кастомный-клик-по-строке",
                        "kind": "Виджеты/Лист",
                        "name": "Кастомный клик по строке",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\List\\\\ListWidget.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Кастомный клик по строке",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/testListWidget",
                        }
                      }
                      hasMoreButton={false}
                      id="List"
                      level="widgets"
                      list={
                        Object {
                          "body": Object {
                            "id": "body",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "extra": Object {
                            "buttons": Array [
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Make a cat clever",
                                "icon": "fa fa-plus",
                                "id": "1",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Delete",
                                "icon": "fa fa-trash",
                                "id": "2",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                            ],
                            "className": "n2o",
                            "fieldKey": "name",
                            "id": "extra",
                            "src": "ButtonsCell",
                            "style": Object {},
                          },
                          "header": Object {
                            "as": "h3",
                            "id": "header",
                            "src": "TextCell",
                          },
                          "leftBottom": Object {
                            "as": "span",
                            "id": "leftBottom",
                            "src": "TextCell",
                          },
                          "leftTop": Object {
                            "className": "list-image",
                            "id": "leftTop",
                            "src": "ImageCell",
                            "title": "It's a cat!",
                          },
                          "rightBottom": Object {
                            "id": "rightBottom",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "rightTop": Object {
                            "icon": "fa fa-comment",
                            "id": "rightTop",
                            "src": "IconCell",
                            "visible": true,
                          },
                          "subHeader": Object {
                            "as": "h4",
                            "id": "subHeader",
                            "src": "BadgeCell",
                          },
                        }
                      }
                      rowClick={
                        Object {
                          "options": Object {
                            "payload": Object {
                              "closeButton": true,
                              "pageId": "Uid",
                              "pageUrl": "/Uid",
                              "size": "sm",
                              "title": "Новое модальное окно",
                              "visible": true,
                            },
                            "type": "n2o/modals/INSERT",
                          },
                          "src": "perform",
                        }
                      }
                      src="ListWidget"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Лист Кнопка "Еще" 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Лист
      </li>
      <li
        className="breadcrumb-item active"
      >
        Кнопка "Еще"
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-лист--кнопка-еще",
                        "kind": "Виджеты/Лист",
                        "name": "Кнопка \\"Еще\\"",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\List\\\\ListWidget.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Кнопка \\"Еще\\"",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/testListWidget",
                        }
                      }
                      hasMoreButton={true}
                      id="List"
                      level="widgets"
                      list={
                        Object {
                          "body": Object {
                            "id": "body",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "extra": Object {
                            "buttons": Array [
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Make a cat clever",
                                "icon": "fa fa-plus",
                                "id": "1",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Delete",
                                "icon": "fa fa-trash",
                                "id": "2",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                            ],
                            "className": "n2o",
                            "fieldKey": "name",
                            "id": "extra",
                            "src": "ButtonsCell",
                            "style": Object {},
                          },
                          "header": Object {
                            "as": "h3",
                            "id": "header",
                            "src": "TextCell",
                          },
                          "leftBottom": Object {
                            "as": "span",
                            "id": "leftBottom",
                            "src": "TextCell",
                          },
                          "leftTop": Object {
                            "className": "list-image",
                            "id": "leftTop",
                            "src": "ImageCell",
                            "title": "It's a cat!",
                          },
                          "rightBottom": Object {
                            "id": "rightBottom",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "rightTop": Object {
                            "icon": "fa fa-comment",
                            "id": "rightTop",
                            "src": "IconCell",
                            "visible": true,
                          },
                          "subHeader": Object {
                            "as": "h4",
                            "id": "subHeader",
                            "src": "BadgeCell",
                          },
                        }
                      }
                      paging={
                        Object {
                          "next": true,
                          "prev": true,
                          "size": 10,
                        }
                      }
                      src="ListWidget"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Лист Компонент без разделителя строк 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Лист
      </li>
      <li
        className="breadcrumb-item active"
      >
        Компонент без разделителя строк
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-лист--компонент-без-разделителя-строк",
                        "kind": "Виджеты/Лист",
                        "name": "Компонент без разделителя строк",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\List\\\\ListWidget.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                            ],
                            "text": "
      Компонент 'Список'
      ~~~js
      import List from 'n2o/lib/components/widgets/List/List';
      
      <List data={data} divider={false} />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Компонент без разделителя строк",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Список'
      ~~~js
      import List from 'n2o/lib/components/widgets/List/List';
      
      <List data={data} divider={false} />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <List
                      data={
                        Array [
                          Object {
                            "body": "Some words about cats",
                            "extra": "Extra?!",
                            "header": "It's a cat",
                            "leftTop": Object {
                              "src": "https://i.ytimg.com/vi/YCaGYUIfdy4/maxresdefault.jpg",
                            },
                            "rightBottom": "01.01.2019",
                            "rightTop": "14",
                            "subHeader": "The cat is stupid",
                          },
                          Object {
                            "body": "Some words about cats",
                            "extra": "Extra?!",
                            "header": "It's a cat",
                            "leftTop": Object {
                              "src": "https://i.ytimg.com/vi/YCaGYUIfdy4/maxresdefault.jpg",
                            },
                            "rightBottom": "01.01.2019",
                            "rightTop": "14",
                            "subHeader": "The cat is stupid",
                          },
                        ]
                      }
                      divider={false}
                      fetchOnScroll={false}
                      hasMoreButton={false}
                      hasSelect={false}
                      onFetchMore={[Function]}
                      onItemClick={[Function]}
                      rowClick={false}
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Лист Компонент с 1000 записей 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Лист
      </li>
      <li
        className="breadcrumb-item active"
      >
        Компонент с 1000 записей
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-лист--компонент-с-1000-записей",
                        "kind": "Виджеты/Лист",
                        "name": "Компонент с 1000 записей",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\List\\\\ListWidget.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Компонент с 1000 записей",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/testListWidget",
                        }
                      }
                      id="List"
                      level="widgets"
                      list={
                        Object {
                          "body": Object {
                            "id": "body",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "extra": Object {
                            "buttons": Array [
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Make a cat clever",
                                "icon": "fa fa-plus",
                                "id": "1",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Delete",
                                "icon": "fa fa-trash",
                                "id": "2",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                            ],
                            "className": "n2o",
                            "fieldKey": "name",
                            "id": "extra",
                            "src": "ButtonsCell",
                            "style": Object {},
                          },
                          "header": Object {
                            "as": "h3",
                            "id": "header",
                            "src": "TextCell",
                          },
                          "leftBottom": Object {
                            "as": "span",
                            "id": "leftBottom",
                            "src": "TextCell",
                          },
                          "leftTop": Object {
                            "className": "list-image",
                            "id": "leftTop",
                            "src": "ImageCell",
                            "title": "It's a cat!",
                          },
                          "rightBottom": Object {
                            "id": "rightBottom",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "rightTop": Object {
                            "icon": "fa fa-comment",
                            "id": "rightTop",
                            "src": "IconCell",
                            "visible": true,
                          },
                          "subHeader": Object {
                            "as": "h4",
                            "id": "subHeader",
                            "src": "BadgeCell",
                          },
                        }
                      }
                      paging={
                        Object {
                          "next": true,
                          "prev": true,
                          "size": 10,
                        }
                      }
                      src="ListWidget"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Лист Компонент с paging 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Лист
      </li>
      <li
        className="breadcrumb-item active"
      >
        Компонент с paging
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-лист--компонент-с-paging",
                        "kind": "Виджеты/Лист",
                        "name": "Компонент с paging",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\List\\\\ListWidget.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Компонент с paging",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/testListWidget",
                        }
                      }
                      id="List"
                      level="widgets"
                      list={
                        Object {
                          "body": Object {
                            "id": "body",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "extra": Object {
                            "buttons": Array [
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Make a cat clever",
                                "icon": "fa fa-plus",
                                "id": "1",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Delete",
                                "icon": "fa fa-trash",
                                "id": "2",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                            ],
                            "className": "n2o",
                            "fieldKey": "name",
                            "id": "extra",
                            "src": "ButtonsCell",
                            "style": Object {},
                          },
                          "header": Object {
                            "as": "h3",
                            "id": "header",
                            "src": "TextCell",
                          },
                          "leftBottom": Object {
                            "as": "span",
                            "id": "leftBottom",
                            "src": "TextCell",
                          },
                          "leftTop": Object {
                            "className": "list-image",
                            "id": "leftTop",
                            "src": "ImageCell",
                            "title": "It's a cat!",
                          },
                          "rightBottom": Object {
                            "id": "rightBottom",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "rightTop": Object {
                            "icon": "fa fa-comment",
                            "id": "rightTop",
                            "src": "IconCell",
                            "visible": true,
                          },
                          "subHeader": Object {
                            "as": "h4",
                            "id": "subHeader",
                            "src": "BadgeCell",
                          },
                        }
                      }
                      paging={
                        Object {
                          "next": true,
                          "prev": true,
                          "size": 10,
                        }
                      }
                      showPagination={true}
                      src="ListWidget"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Лист Компонент со стандартной реализацией 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Лист
      </li>
      <li
        className="breadcrumb-item active"
      >
        Компонент со стандартной реализацией
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-лист--компонент-со-стандартной-реализацией",
                        "kind": "Виджеты/Лист",
                        "name": "Компонент со стандартной реализацией",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\List\\\\ListWidget.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                            ],
                            "text": "
      Компонент 'Список'
      ~~~js
      import List from 'n2o/lib/components/widgets/List/List';
      
      <List data={data} selectedId={2} />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Компонент со стандартной реализацией",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Список'
      ~~~js
      import List from 'n2o/lib/components/widgets/List/List';
      
      <List data={data} selectedId={2} />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <List
                      data={
                        Array [
                          Object {
                            "body": "Some words about cats",
                            "extra": "Extra?!",
                            "header": "It's a cat",
                            "id": 1,
                            "leftTop": Object {
                              "src": "https://i.ytimg.com/vi/YCaGYUIfdy4/maxresdefault.jpg",
                            },
                            "rightBottom": "01.01.2019",
                            "rightTop": "14",
                            "subHeader": "The cat is stupid",
                          },
                          Object {
                            "body": "Some words about cats",
                            "extra": "Extra?!",
                            "header": "It's a cat",
                            "id": 2,
                            "leftBottom": "a little description",
                            "leftTop": Object {
                              "src": "https://i.ytimg.com/vi/YCaGYUIfdy4/maxresdefault.jpg",
                            },
                            "rightBottom": "01.01.2019",
                            "rightTop": "14",
                            "subHeader": "The cat is stupid",
                          },
                        ]
                      }
                      divider={true}
                      fetchOnScroll={false}
                      hasMoreButton={false}
                      hasSelect={false}
                      onFetchMore={[Function]}
                      onItemClick={[Function]}
                      rowClick={false}
                      selectedId={2}
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Лист Метаданные с cells 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Лист
      </li>
      <li
        className="breadcrumb-item active"
      >
        Метаданные с cells
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-лист--метаданные-с-cells",
                        "kind": "Виджеты/Лист",
                        "name": "Метаданные с cells",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\List\\\\ListWidget.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Метаданные с cells",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      actions={
                        Object {
                          "exportModal": Object {
                            "options": Object {
                              "payload": Object {
                                "actions": Object {
                                  "destroyModal": Object {
                                    "options": Object {
                                      "type": "n2o/modals/DESTROY",
                                    },
                                    "src": "perform",
                                  },
                                  "export": Object {
                                    "notification": Object {
                                      "severity": "danger",
                                      "text": "Это сообщение будет отображаться 10 секунд",
                                      "timeout": 10000,
                                    },
                                    "options": Object {
                                      "widgetId": "Page_Table",
                                    },
                                    "redirectTo": "/test",
                                    "src": "exportTable",
                                  },
                                },
                                "closeButton": false,
                                "name": "test2",
                                "size": "sm",
                                "src": "exportModal",
                                "title": "Экспортровать",
                                "toolbar": Array [
                                  Object {
                                    "buttons": Array [
                                      Object {
                                        "actionId": "export",
                                        "className": "btn-primary",
                                        "icon": "fa fa-download",
                                        "id": "export",
                                        "title": "Загрузить",
                                      },
                                      Object {
                                        "actionId": "destroyModal",
                                        "id": "cancelExport",
                                        "title": "Отменить",
                                      },
                                    ],
                                  },
                                ],
                                "type": "n2o/modals/INSERT",
                                "visible": true,
                                "widgetId": "Page_Table",
                              },
                              "type": "n2o/modals/INSERT",
                            },
                            "src": "perform",
                            "widgetId": "Page_Table",
                          },
                          "menuItem0": Object {
                            "options": Object {
                              "payload": Object {
                                "widgetId": "Page_Table",
                              },
                              "type": "n2o/widgets/TOGGLE_FILTER_VISIBILITY",
                            },
                            "src": "perform",
                          },
                          "menuItem2": Object {
                            "options": Object {
                              "payload": Object {
                                "widgetId": "Page_Table",
                              },
                              "type": "n2o/widgets/DATA_REQUEST",
                            },
                            "src": "perform",
                          },
                        }
                      }
                      className="n2o"
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/testListWidget",
                        }
                      }
                      divider={true}
                      fetchOnScroll={false}
                      hasMoreButton={true}
                      hasMoreNutton={true}
                      id="List"
                      level="widgets"
                      list={
                        Object {
                          "body": Object {
                            "id": "body",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "extra": Object {
                            "buttons": Array [
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Make a cat clever",
                                "icon": "fa fa-plus",
                                "id": "1",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                              Object {
                                "action": Object {
                                  "options": Object {
                                    "testProp": "testValueProp",
                                  },
                                  "src": "dummyImpl",
                                },
                                "disabled": false,
                                "hint": "Delete",
                                "icon": "fa fa-trash",
                                "id": "2",
                                "size": "md",
                                "title": "",
                                "visible": true,
                              },
                            ],
                            "className": "n2o",
                            "fieldKey": "name",
                            "id": "extra",
                            "src": "ButtonsCell",
                            "style": Object {},
                          },
                          "header": Object {
                            "as": "h3",
                            "id": "header",
                            "src": "TextCell",
                          },
                          "leftBottom": Object {
                            "as": "span",
                            "id": "leftBottom",
                            "src": "TextCell",
                          },
                          "leftTop": Object {
                            "className": "list-image",
                            "id": "leftTop",
                            "src": "ImageCell",
                            "title": "It's a cat!",
                          },
                          "rightBottom": Object {
                            "id": "rightBottom",
                            "src": "TextCell",
                            "visible": true,
                          },
                          "rightTop": Object {
                            "icon": "fa fa-comment",
                            "id": "rightTop",
                            "src": "IconCell",
                            "visible": true,
                          },
                          "subHeader": Object {
                            "as": "h4",
                            "id": "subHeader",
                            "src": "BadgeCell",
                          },
                        }
                      }
                      maxHeight={null}
                      maxWidth={null}
                      paging={
                        Object {
                          "next": true,
                          "prev": true,
                          "size": 10,
                        }
                      }
                      showPagination={false}
                      src="ListWidget"
                      toolbar={
                        Object {
                          "topRight": Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "menuItem0",
                                  "hint": "Изменить видимость фильтров",
                                  "icon": "fa fa-filter",
                                  "id": "menuItem0",
                                },
                                Object {
                                  "actionId": "menuItem2",
                                  "hint": "Обновить данные",
                                  "icon": "fa fa-refresh",
                                  "id": "menuItem2",
                                },
                              ],
                              "id": "topRight0",
                            },
                          ],
                        }
                      }
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;
