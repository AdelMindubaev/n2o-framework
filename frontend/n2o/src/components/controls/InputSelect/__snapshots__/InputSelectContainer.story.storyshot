// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Контролы/InputSelect Баджи 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Контролы
      </li>
      <li
        className="breadcrumb-item active"
      >
        InputSelect
      </li>
      <li
        className="breadcrumb-item active"
      >
        Баджи
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "контролы-inputselect--баджи",
                        "kind": "Контролы/InputSelect",
                        "name": "Баджи",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\controls\\\\InputSelect\\\\InputSelectContainer.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Розенкранц',
          badge: 'Писатель',
        },
        {
          id: '2',
          name: 'Иммануил',
          badge: 'Художник',
          color: 'danger',
        },
        {
          id: '3',
          name: 'Сергей',
          badge: 'Поэт',
          color: 'info',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          filter=\\"includes\\"
          badgeFieldId=\\"badge\\"
          badgeColorFieldId=\\"color\\"
      />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Баджи",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Розенкранц',
          badge: 'Писатель',
        },
        {
          id: '2',
          name: 'Иммануил',
          badge: 'Художник',
          color: 'danger',
        },
        {
          id: '3',
          name: 'Сергей',
          badge: 'Поэт',
          color: 'info',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          filter=\\"includes\\"
          badgeFieldId=\\"badge\\"
          badgeColorFieldId=\\"color\\"
      />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <InputSelectContainer
                      badgeColorFieldId="color"
                      badgeFieldId="badge"
                      closePopupOnSelect={true}
                      dataProvider={
                        Object {
                          "method": "GET",
                          "url": "n2o/data/test",
                        }
                      }
                      disabled={false}
                      expandPopUp={false}
                      filter="includes"
                      flip={false}
                      groupFieldId=""
                      hasCheckboxes={false}
                      iconFieldId=""
                      imageFieldId=""
                      labelFieldId="name"
                      loading={false}
                      multiSelect={false}
                      options={Array []}
                      page={1}
                      placeholder="Введите значение"
                      queryId="list"
                      resetOnBlur={false}
                      size={10}
                      value={Array []}
                      valueFieldId="id"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Контролы/InputSelect Группы 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Контролы
      </li>
      <li
        className="breadcrumb-item active"
      >
        InputSelect
      </li>
      <li
        className="breadcrumb-item active"
      >
        Группы
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "контролы-inputselect--группы",
                        "kind": "Контролы/InputSelect",
                        "name": "Группы",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\controls\\\\InputSelect\\\\InputSelectContainer.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Петр',
          country: 'Россия',
          icon: 'fa fa-male',
        },
        {
          id: '2',
          name: 'Петро',
          country: 'Украина',
          icon: 'fa fa-female',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          groupFieldId=\\"country\\"
          filter=\\"includes\\"
      />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Группы",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Петр',
          country: 'Россия',
          icon: 'fa fa-male',
        },
        {
          id: '2',
          name: 'Петро',
          country: 'Украина',
          icon: 'fa fa-female',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          groupFieldId=\\"country\\"
          filter=\\"includes\\"
      />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <InputSelectContainer
                      badgeColorFieldId="color"
                      badgeFieldId="badge"
                      closePopupOnSelect={true}
                      dataProvider={
                        Object {
                          "method": "GET",
                          "url": "n2o/data/test",
                        }
                      }
                      disabled={false}
                      expandPopUp={false}
                      filter="includes"
                      flip={false}
                      groupFieldId="country"
                      hasCheckboxes={false}
                      iconFieldId=""
                      imageFieldId=""
                      labelFieldId="name"
                      loading={false}
                      multiSelect={false}
                      options={Array []}
                      page={1}
                      placeholder="Введите значение"
                      queryId="list"
                      resetOnBlur={false}
                      size={10}
                      value={Array []}
                      valueFieldId="id"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Контролы/InputSelect Изображения 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Контролы
      </li>
      <li
        className="breadcrumb-item active"
      >
        InputSelect
      </li>
      <li
        className="breadcrumb-item active"
      >
        Изображения
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "контролы-inputselect--изображения",
                        "kind": "Контролы/InputSelect",
                        "name": "Изображения",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\controls\\\\InputSelect\\\\InputSelectContainer.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Moto Morini Scrambler',
          image:
            'http://bazamoto.ru/img/moto_morini/sport-1200/sport-1200_2009_1.jpg',
        },
        {
          id: '2',
          name: 'Moto Indian Scout ABS Burgundy Metallic',
          image:
            'https://cdn.dealerspike.com/imglib/v1/800x600/imglib/trimsdb/7373871-5858031-38816341.jpg',
        },
        {
          id: '3',
          name: 'Moto Indian Scout ABS',
          image:
            'https://cdp.azureedge.net/products/USA/IDN/2018/MC/CRUISER/SCOUT_ABS/49/BRILLIANT_BLUE_-_WHITE_-_RED_PINSTRIPE/2000000001.jpg',
        },
        {
          id: '4',
          name: 'Moto Indian Scout Sixty ABS',
          image:
            'https://cdp.azureedge.net/products/USA/IDN/2018/MC/CRUISER/SCOUT_SIXTY_ABS/49/INDIAN_MOTORCYCLE_RED/2000000006.jpg',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          imageFieldId=\\"image\\"
      />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Изображения",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Moto Morini Scrambler',
          image:
            'http://bazamoto.ru/img/moto_morini/sport-1200/sport-1200_2009_1.jpg',
        },
        {
          id: '2',
          name: 'Moto Indian Scout ABS Burgundy Metallic',
          image:
            'https://cdn.dealerspike.com/imglib/v1/800x600/imglib/trimsdb/7373871-5858031-38816341.jpg',
        },
        {
          id: '3',
          name: 'Moto Indian Scout ABS',
          image:
            'https://cdp.azureedge.net/products/USA/IDN/2018/MC/CRUISER/SCOUT_ABS/49/BRILLIANT_BLUE_-_WHITE_-_RED_PINSTRIPE/2000000001.jpg',
        },
        {
          id: '4',
          name: 'Moto Indian Scout Sixty ABS',
          image:
            'https://cdp.azureedge.net/products/USA/IDN/2018/MC/CRUISER/SCOUT_SIXTY_ABS/49/INDIAN_MOTORCYCLE_RED/2000000006.jpg',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          imageFieldId=\\"image\\"
      />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <InputSelectContainer
                      badgeColorFieldId="color"
                      badgeFieldId="badge"
                      closePopupOnSelect={true}
                      dataProvider={
                        Object {
                          "method": "GET",
                          "url": "n2o/data/test",
                        }
                      }
                      disabled={false}
                      expandPopUp={false}
                      filter="includes"
                      flip={false}
                      groupFieldId=""
                      hasCheckboxes={false}
                      iconFieldId={null}
                      imageFieldId="image"
                      labelFieldId="name"
                      loading={false}
                      multiSelect={false}
                      options={Array []}
                      page={1}
                      placeholder="Введите значение"
                      queryId="list"
                      resetOnBlur={false}
                      size={10}
                      value=""
                      valueFieldId="id"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Контролы/InputSelect Иконки 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Контролы
      </li>
      <li
        className="breadcrumb-item active"
      >
        InputSelect
      </li>
      <li
        className="breadcrumb-item active"
      >
        Иконки
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "контролы-inputselect--иконки",
                        "kind": "Контролы/InputSelect",
                        "name": "Иконки",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\controls\\\\InputSelect\\\\InputSelectContainer.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Мужской',
          icon: 'fa fa-male',
        },
        {
          id: '2',
          name: 'Женский',
          icon: 'fa fa-female',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          iconFieldId=\\"icon\\"
          filter=\\"includes\\"
      />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Иконки",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Мужской',
          icon: 'fa fa-male',
        },
        {
          id: '2',
          name: 'Женский',
          icon: 'fa fa-female',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          iconFieldId=\\"icon\\"
          filter=\\"includes\\"
      />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <InputSelectContainer
                      badgeColorFieldId="color"
                      badgeFieldId="badge"
                      closePopupOnSelect={true}
                      dataProvider={
                        Object {
                          "method": "GET",
                          "url": "n2o/data/test",
                        }
                      }
                      disabled={false}
                      expandPopUp={false}
                      filter="includes"
                      flip={false}
                      groupFieldId=""
                      hasCheckboxes={false}
                      iconFieldId="icon"
                      imageFieldId=""
                      labelFieldId="name"
                      loading={false}
                      multiSelect={false}
                      options={Array []}
                      page={1}
                      placeholder="Введите значение"
                      queryId="list"
                      resetOnBlur={false}
                      size={10}
                      value=""
                      valueFieldId="id"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Контролы/InputSelect Кеширование запросов 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Контролы
      </li>
      <li
        className="breadcrumb-item active"
      >
        InputSelect
      </li>
      <li
        className="breadcrumb-item active"
      >
        Кеширование запросов
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "контролы-inputselect--кеширование-запросов",
                        "kind": "Контролы/InputSelect",
                        "name": "Кеширование запросов",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\controls\\\\InputSelect\\\\InputSelectContainer.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Медведева Светлана Андреевна',
          image:
            'https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png',
        },
        {
          id: '2',
          name: 'Орлов Матвей Эрнестович ',
          image:
            'https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png',
        },
        {
          id: '3',
          name: 'Салагин Святослав Григориевич',
          image: 'https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png',
        },
        {
          id: '4',
          name: 'Моргунова Алина Мироновна',
          image:
            'https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png',
        },
        {
          id: '5',
          name: 'Краевский Гавриил Алексеевич',
          image: 'https://img.faceyourmanga.com/mangatars/0/0/39/large_9319.png',
        },
        {
          id: '6',
          name: 'Сазонтова Елена Данииловна',
          image:
            'https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png',
        },
      ];
      
      <InputSelectContainer
          {...props}
          placeholder=\\"Стандартный\\"
      />
        <InputSelectContainer
        {...props}
        caching={true}
        placeholder=\\"С кешированием\\"
      />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Кеширование запросов",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Медведева Светлана Андреевна',
          image:
            'https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png',
        },
        {
          id: '2',
          name: 'Орлов Матвей Эрнестович ',
          image:
            'https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png',
        },
        {
          id: '3',
          name: 'Салагин Святослав Григориевич',
          image: 'https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png',
        },
        {
          id: '4',
          name: 'Моргунова Алина Мироновна',
          image:
            'https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png',
        },
        {
          id: '5',
          name: 'Краевский Гавриил Алексеевич',
          image: 'https://img.faceyourmanga.com/mangatars/0/0/39/large_9319.png',
        },
        {
          id: '6',
          name: 'Сазонтова Елена Данииловна',
          image:
            'https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png',
        },
      ];
      
      <InputSelectContainer
          {...props}
          placeholder=\\"Стандартный\\"
      />
        <InputSelectContainer
        {...props}
        caching={true}
        placeholder=\\"С кешированием\\"
      />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <div
                      className="row"
                    >
                      <InputSelectContainer
                        badgeColorFieldId="color"
                        badgeFieldId="badge"
                        closePopupOnSelect={true}
                        dataProvider={
                          Object {
                            "method": "GET",
                            "url": "n2o/data/test",
                          }
                        }
                        disabled={false}
                        expandPopUp={false}
                        filter="server"
                        flip={false}
                        groupFieldId=""
                        hasCheckboxes={false}
                        iconFieldId="icon"
                        imageFieldId="image"
                        labelFieldId="name"
                        loading={false}
                        multiSelect={false}
                        options={Array []}
                        page={1}
                        placeholder="Стандартный"
                        queryId="list"
                        resetOnBlur={false}
                        size={10}
                        value={Array []}
                        valueFieldId="id"
                      />
                    </div>
                    <div
                      className="row"
                      style={
                        Object {
                          "marginTop": "10px",
                        }
                      }
                    >
                      <InputSelectContainer
                        badgeColorFieldId="color"
                        badgeFieldId="badge"
                        caching={true}
                        closePopupOnSelect={true}
                        dataProvider={
                          Object {
                            "method": "GET",
                            "url": "n2o/data/test",
                          }
                        }
                        disabled={false}
                        expandPopUp={false}
                        filter="server"
                        flip={false}
                        groupFieldId=""
                        hasCheckboxes={false}
                        iconFieldId="icon"
                        imageFieldId="image"
                        labelFieldId="name"
                        loading={false}
                        multiSelect={false}
                        options={Array []}
                        page={1}
                        placeholder="С кешированием"
                        queryId="list"
                        resetOnBlur={false}
                        size={10}
                        value={Array []}
                        valueFieldId="id"
                      />
                    </div>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Контролы/InputSelect Метаданные 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Контролы
      </li>
      <li
        className="breadcrumb-item active"
      >
        InputSelect
      </li>
      <li
        className="breadcrumb-item active"
      >
        Метаданные
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "контролы-inputselect--метаданные",
                        "kind": "Контролы/InputSelect",
                        "name": "Метаданные",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\controls\\\\InputSelect\\\\InputSelectContainer.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Метаданные",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      form={
                        Object {
                          "fetchOnInit": false,
                          "fieldsets": Array [
                            Object {
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "closePopupOnSelect": true,
                                            "dataProvider": Object {
                                              "method": "GET",
                                              "url": "n2o/data/test",
                                            },
                                            "disabled": false,
                                            "expandPopUp": false,
                                            "filter": "server",
                                            "flip": false,
                                            "format": undefined,
                                            "groupFieldId": "",
                                            "hasCheckboxes": false,
                                            "iconFieldId": "icon",
                                            "imageFieldId": "image",
                                            "labelFieldId": "name",
                                            "loading": false,
                                            "multiSelect": false,
                                            "placeholder": "Введите значение",
                                            "queryId": "list",
                                            "resetOnBlur": false,
                                            "size": 10,
                                            "src": "InputSelect",
                                            "value": Array [],
                                            "valueFieldId": "id",
                                          },
                                          "dependency": Array [],
                                          "id": "testControl",
                                          "label": "Компонент находится в форме",
                                          "src": "StandardField",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                              "src": "StandardFieldset",
                            },
                          ],
                        }
                      }
                      id="Page_Form"
                      level="widgets"
                      src="FormWidget"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Контролы/InputSelect Мульти режим 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Контролы
      </li>
      <li
        className="breadcrumb-item active"
      >
        InputSelect
      </li>
      <li
        className="breadcrumb-item active"
      >
        Мульти режим
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "контролы-inputselect--мульти-режим",
                        "kind": "Контролы/InputSelect",
                        "name": "Мульти режим",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\controls\\\\InputSelect\\\\InputSelectContainer.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Медведева Светлана Андреевна',
          image:
            'https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png',
        },
        {
          id: '2',
          name: 'Орлов Матвей Эрнестович ',
          image:
            'https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png',
        },
        {
          id: '3',
          name: 'Салагин Святослав Григориевич',
          image: 'https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png',
        },
        {
          id: '4',
          name: 'Моргунова Алина Мироновна',
          image:
            'https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png',
        },
        {
          id: '5',
          name: 'Краевский Гавриил Алексеевич',
          image: 'https://img.faceyourmanga.com/mangatars/0/0/39/large_9319.png',
        },
        {
          id: '6',
          name: 'Сазонтова Елена Данииловна',
          image:
            'https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          multiSelect={true}
          imageFieldId=\\"image\\"
      />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Мульти режим",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Медведева Светлана Андреевна',
          image:
            'https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png',
        },
        {
          id: '2',
          name: 'Орлов Матвей Эрнестович ',
          image:
            'https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png',
        },
        {
          id: '3',
          name: 'Салагин Святослав Григориевич',
          image: 'https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png',
        },
        {
          id: '4',
          name: 'Моргунова Алина Мироновна',
          image:
            'https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png',
        },
        {
          id: '5',
          name: 'Краевский Гавриил Алексеевич',
          image: 'https://img.faceyourmanga.com/mangatars/0/0/39/large_9319.png',
        },
        {
          id: '6',
          name: 'Сазонтова Елена Данииловна',
          image:
            'https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          multiSelect={true}
          imageFieldId=\\"image\\"
      />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <InputSelectContainer
                      badgeColorFieldId="color"
                      badgeFieldId="badge"
                      closePopupOnSelect={true}
                      dataProvider={
                        Object {
                          "method": "GET",
                          "url": "n2o/data/test",
                        }
                      }
                      disabled={false}
                      expandPopUp={false}
                      filter="includes"
                      flip={false}
                      groupFieldId=""
                      hasCheckboxes={false}
                      iconFieldId="icon"
                      imageFieldId="image"
                      labelFieldId="name"
                      loading={false}
                      multiSelect={true}
                      options={Array []}
                      page={1}
                      placeholder="Введите значение"
                      queryId="list"
                      resetOnBlur={false}
                      size={10}
                      value={Array []}
                      valueFieldId="id"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Контролы/InputSelect Расширяемый popUp 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Контролы
      </li>
      <li
        className="breadcrumb-item active"
      >
        InputSelect
      </li>
      <li
        className="breadcrumb-item active"
      >
        Расширяемый popUp
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "контролы-inputselect--расширяемый-popup",
                        "kind": "Контролы/InputSelect",
                        "name": "Расширяемый popUp",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\controls\\\\InputSelect\\\\InputSelectContainer.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Крузенштерн Розенкранц Николаевич. Моряк и подводник.....',
        },
        {
          id: '2',
          name: 'Комаровский Иммануил Васильевич',
        },
        {
          id: '3',
          name: 'Петровский Сергей Вахтангович',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          filter=\\"includes\\"
          expandPopUp={true}
      />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Расширяемый popUp",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Крузенштерн Розенкранц Николаевич. Моряк и подводник.....',
        },
        {
          id: '2',
          name: 'Комаровский Иммануил Васильевич',
        },
        {
          id: '3',
          name: 'Петровский Сергей Вахтангович',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          filter=\\"includes\\"
          expandPopUp={true}
      />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <InputSelectContainer
                      badgeColorFieldId="color"
                      badgeFieldId="badge"
                      closePopupOnSelect={true}
                      dataProvider={
                        Object {
                          "method": "GET",
                          "url": "n2o/data/test",
                        }
                      }
                      disabled={false}
                      expandPopUp={true}
                      filter="includes"
                      flip={false}
                      groupFieldId=""
                      hasCheckboxes={false}
                      iconFieldId=""
                      imageFieldId=""
                      labelFieldId="name"
                      loading={false}
                      multiSelect={false}
                      options={Array []}
                      page={1}
                      placeholder="Введите значение"
                      queryId="list"
                      resetOnBlur={false}
                      size={10}
                      value={Array []}
                      valueFieldId="id"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Контролы/InputSelect Сжатие текста 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Контролы
      </li>
      <li
        className="breadcrumb-item active"
      >
        InputSelect
      </li>
      <li
        className="breadcrumb-item active"
      >
        Сжатие текста
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "контролы-inputselect--сжатие-текста",
                        "kind": "Контролы/InputSelect",
                        "name": "Сжатие текста",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\controls\\\\InputSelect\\\\InputSelectContainer.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name:
            '«Русла́н и Людми́ла» — первая законченная поэма Александра Сергеевича Пушкина; волшебная сказка, вдохновлённая древнерусскими былинами.',
        },
        {
          id: '2',
          name:
            'Поэма написана в 1818—1820, после выхода из Лицея; Пушкин иногда указывал, что начал писать поэму ещё в Лицее, но, по-видимому, к этому времени относятся лишь самые общие замыслы, едва ли текст. Ведя после выхода из Лицея в Петербурге жизнь «самую рассеянную», Пушкин работал над поэмой в основном во время болезней.',
        },
        {
          id: '3',
          name:
            'Пушкин ставил задачей создать «богатырскую» сказочную поэму в духе известного ему по французским переводам «Неистового Роланда» Ариосто (критики называли этот жанр «романтическим», что не следует путать с романтизмом в современном понимании).',
        },
      ];
      
      <InputSelectContainer 
          {...props}
      />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Сжатие текста",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name:
            '«Русла́н и Людми́ла» — первая законченная поэма Александра Сергеевича Пушкина; волшебная сказка, вдохновлённая древнерусскими былинами.',
        },
        {
          id: '2',
          name:
            'Поэма написана в 1818—1820, после выхода из Лицея; Пушкин иногда указывал, что начал писать поэму ещё в Лицее, но, по-видимому, к этому времени относятся лишь самые общие замыслы, едва ли текст. Ведя после выхода из Лицея в Петербурге жизнь «самую рассеянную», Пушкин работал над поэмой в основном во время болезней.',
        },
        {
          id: '3',
          name:
            'Пушкин ставил задачей создать «богатырскую» сказочную поэму в духе известного ему по французским переводам «Неистового Роланда» Ариосто (критики называли этот жанр «романтическим», что не следует путать с романтизмом в современном понимании).',
        },
      ];
      
      <InputSelectContainer 
          {...props}
      />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <InputSelectContainer
                      badgeColorFieldId="color"
                      badgeFieldId="badge"
                      closePopupOnSelect={true}
                      dataProvider={
                        Object {
                          "method": "GET",
                          "url": "n2o/data/test",
                        }
                      }
                      disabled={false}
                      expandPopUp={false}
                      filter="includes"
                      flip={false}
                      groupFieldId=""
                      hasCheckboxes={false}
                      iconFieldId=""
                      imageFieldId=""
                      labelFieldId="name"
                      loading={false}
                      multiSelect={false}
                      options={Array []}
                      page={1}
                      placeholder="Введите значение"
                      queryId="list"
                      resetOnBlur={false}
                      size={10}
                      value={Array []}
                      valueFieldId="id"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Контролы/InputSelect Список из метаданных 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Контролы
      </li>
      <li
        className="breadcrumb-item active"
      >
        InputSelect
      </li>
      <li
        className="breadcrumb-item active"
      >
        Список из метаданных
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "контролы-inputselect--список-из-метаданных",
                        "kind": "Контролы/InputSelect",
                        "name": "Список из метаданных",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\controls\\\\InputSelect\\\\InputSelectContainer.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Список из метаданных",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <InputSelectContainer
                      badgeColorFieldId="color"
                      badgeFieldId="badge"
                      closePopupOnSelect={true}
                      dataProvider={
                        Object {
                          "method": "GET",
                          "url": "n2o/data/test",
                        }
                      }
                      disabled={false}
                      expandPopUp={false}
                      filter="server"
                      flip={false}
                      groupFieldId=""
                      hasCheckboxes={false}
                      iconFieldId="icon"
                      imageFieldId="image"
                      labelFieldId="name"
                      loading={false}
                      multiSelect={false}
                      options={
                        Array [
                          Object {
                            "country": "Россия",
                            "dob": "11.09.1992",
                            "icon": "fa fa-address-card",
                            "id": "1",
                            "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png",
                            "name": "Медведева Светлана Андреевна",
                          },
                          Object {
                            "country": "Россия",
                            "dob": "24.04.1891",
                            "icon": "fa fa-address-card",
                            "id": "2",
                            "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png",
                            "name": "Орлов Матвей Эрнестович ",
                          },
                          Object {
                            "country": "США",
                            "dob": "03.12.1981",
                            "icon": "fa fa-address-card",
                            "id": "3",
                            "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png",
                            "name": "Салагин Святослав Григориевич",
                          },
                          Object {
                            "country": "США",
                            "dob": "11.11.2003",
                            "icon": "fa fa-address-card",
                            "id": "4",
                            "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png",
                            "name": "Моргунова Алина Мироновна",
                          },
                          Object {
                            "country": "Беларусь",
                            "dob": "20.11.1991",
                            "icon": "fa fa-address-card",
                            "id": "5",
                            "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_9319.png",
                            "name": "Краевский Гавриил Алексеевич",
                          },
                          Object {
                            "country": "Беларусь",
                            "dob": "20.11.1991",
                            "icon": "fa fa-address-card",
                            "id": "6",
                            "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png",
                            "name": "Сазонтова Елена Данииловна",
                          },
                          Object {
                            "country": "Беларусь",
                            "dob": "20.11.1991",
                            "icon": "fa fa-address-card",
                            "id": "7",
                            "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png",
                            "name": "Унковский Юрий Эдуардович",
                          },
                          Object {
                            "country": "Беларусь",
                            "dob": "20.11.1991",
                            "icon": "fa fa-address-card",
                            "id": "8",
                            "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_140189.png",
                            "name": "Ягешева Милена Ивановна",
                          },
                          Object {
                            "country": "Россия",
                            "dob": "11.09.1992",
                            "icon": "fa fa-address-card",
                            "id": "9",
                            "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png",
                            "name": "Краснянский Анатолий Давидович",
                          },
                          Object {
                            "country": "Россия",
                            "dob": "24.04.1891",
                            "icon": "fa fa-address-card",
                            "id": "10",
                            "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png",
                            "name": "Сериков Владлен Фомевич",
                          },
                          Object {
                            "country": "США",
                            "dob": "03.12.1981",
                            "icon": "fa fa-address-card",
                            "id": "11",
                            "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png",
                            "name": "Рябов Гаврила Еремеевич",
                          },
                          Object {
                            "country": "Россия",
                            "dob": "11.09.1992",
                            "icon": "fa fa-address-card",
                            "id": "12",
                            "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png",
                            "name": "Яманова Нона Семеновна",
                          },
                          Object {
                            "country": "Россия",
                            "dob": "24.04.1891",
                            "icon": "fa fa-address-card",
                            "id": "13",
                            "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png",
                            "name": "Черепанова Зоя Афанасиевна",
                          },
                          Object {
                            "country": "США",
                            "dob": "03.12.1981",
                            "icon": "fa fa-address-card",
                            "id": "14",
                            "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png",
                            "name": "Ивашин Соломон Макарович",
                          },
                          Object {
                            "country": "Россия",
                            "dob": "11.09.1992",
                            "icon": "fa fa-address-card",
                            "id": "15",
                            "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png",
                            "name": "Тотенков Егор Денисович",
                          },
                          Object {
                            "country": "Россия",
                            "dob": "24.04.1891",
                            "icon": "fa fa-address-card",
                            "id": "16",
                            "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png",
                            "name": "Куксюка Дарья Иосифовна",
                          },
                          Object {
                            "country": "США",
                            "dob": "03.12.1981",
                            "icon": "fa fa-address-card",
                            "id": "17",
                            "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png",
                            "name": "Попова Влада Никитевна",
                          },
                          Object {
                            "country": "Россия",
                            "dob": "11.09.1992",
                            "icon": "fa fa-address-card",
                            "id": "18",
                            "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3206.png",
                            "name": "Скороходова Виктория Тимофеевна",
                          },
                          Object {
                            "country": "Россия",
                            "dob": "24.04.1891",
                            "icon": "fa fa-address-card",
                            "id": "19",
                            "image": "https://img.faceyourmanga.com/mangatars/0/2/2729/large_3156.png",
                            "name": "Муратов Афанасий Зиновиевич",
                          },
                          Object {
                            "country": "США",
                            "dob": "03.12.1981",
                            "icon": "fa fa-address-card",
                            "id": "20",
                            "image": "https://img.faceyourmanga.com/mangatars/0/0/39/large_511.png",
                            "name": "Бореев Захар Федосиевич",
                          },
                        ]
                      }
                      page={1}
                      placeholder="Введите значение"
                      queryId="list"
                      resetOnBlur={false}
                      size={10}
                      value={Array []}
                      valueFieldId="id"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Контролы/InputSelect Форматирование 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Контролы
      </li>
      <li
        className="breadcrumb-item active"
      >
        InputSelect
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форматирование
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "контролы-inputselect--форматирование",
                        "kind": "Контролы/InputSelect",
                        "name": "Форматирование",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\controls\\\\InputSelect\\\\InputSelectContainer.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Владимир Серпухов',
          dob: '11.09.1992',
        },
        {
          id: '2',
          name: 'Игонь Николаев',
          dob: '24.04.1891',
        },
        {
          id: '3',
          name: 'Владимир Серпухов ',
          dob: '03.12.1981',
        },
        {
          id: '4',
          name: 'Анатолий Петухов',
          dob: '11.11.2003',
        },
        {
          id: '5',
          name: 'Николай Патухов',
          dob: '20.11.1991',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          format=\\"\`name + ' ' + dob\`\\"
          filter=\\"includes\\"
      />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Форматирование",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Владимир Серпухов',
          dob: '11.09.1992',
        },
        {
          id: '2',
          name: 'Игонь Николаев',
          dob: '24.04.1891',
        },
        {
          id: '3',
          name: 'Владимир Серпухов ',
          dob: '03.12.1981',
        },
        {
          id: '4',
          name: 'Анатолий Петухов',
          dob: '11.11.2003',
        },
        {
          id: '5',
          name: 'Николай Патухов',
          dob: '20.11.1991',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          format=\\"\`name + ' ' + dob\`\\"
          filter=\\"includes\\"
      />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <InputSelectContainer
                      badgeColorFieldId="color"
                      badgeFieldId="badge"
                      closePopupOnSelect={true}
                      dataProvider={
                        Object {
                          "method": "GET",
                          "url": "n2o/data/test",
                        }
                      }
                      disabled={false}
                      expandPopUp={false}
                      filter="includes"
                      flip={false}
                      format="\`name+' '+dob\`"
                      groupFieldId=""
                      hasCheckboxes={false}
                      iconFieldId="icon"
                      imageFieldId="image"
                      labelFieldId="name"
                      loading={false}
                      multiSelect={false}
                      options={Array []}
                      page={1}
                      placeholder="Введите значение"
                      queryId="list"
                      resetOnBlur={false}
                      size={10}
                      value={Array []}
                      valueFieldId="id"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Контролы/InputSelect Чекбоксы 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Контролы
      </li>
      <li
        className="breadcrumb-item active"
      >
        InputSelect
      </li>
      <li
        className="breadcrumb-item active"
      >
        Чекбоксы
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "контролы-inputselect--чекбоксы",
                        "kind": "Контролы/InputSelect",
                        "name": "Чекбоксы",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\controls\\\\InputSelect\\\\InputSelectContainer.story.js",
                          "framework": "react",
                          "info": Object {
                            "propTables": Array [
                              [Function],
                            ],
                            "propTablesExclude": Array [
                              [Function],
                              [Function],
                            ],
                            "text": "
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Первый',
        },
        {
          id: '2',
          name: 'Второй',
        },
        {
          id: '3',
          name: 'Третии',
        },
        {
          id: '4',
          name: 'Четвертый',
        },
        {
          id: '5',
          name: 'Пятый',
        },
        {
          id: '6',
          name: 'Шестой',
        },
        {
          id: '7',
          name: 'Седьмой',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          multiSelect={true}
          hasCheckboxes={true}
          filter=\\"server\\"
      />
      ~~~
      ",
                          },
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Чекбоксы",
                      }
                    }
                    excludedPropTypes={Array []}
                    info="
      Компонент 'Выпадающий список'
      ~~~js
      import InputSelectContainer from 'n2o-framework/lib/components/controls/InputSelect/InputSelectContainer';
      
      const data = [
        {
          id: '1',
          name: 'Первый',
        },
        {
          id: '2',
          name: 'Второй',
        },
        {
          id: '3',
          name: 'Третии',
        },
        {
          id: '4',
          name: 'Четвертый',
        },
        {
          id: '5',
          name: 'Пятый',
        },
        {
          id: '6',
          name: 'Шестой',
        },
        {
          id: '7',
          name: 'Седьмой',
        },
      ];
      
      <InputSelectContainer 
          {...props}
          multiSelect={true}
          hasCheckboxes={true}
          filter=\\"server\\"
      />
      ~~~
      "
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={
                      Array [
                        [Function],
                      ]
                    }
                    propTablesExclude={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <InputSelectContainer
                      badgeColorFieldId="color"
                      badgeFieldId="badge"
                      closePopupOnSelect={true}
                      dataProvider={
                        Object {
                          "method": "GET",
                          "url": "n2o/data/test",
                        }
                      }
                      disabled={false}
                      expandPopUp={false}
                      filter="server"
                      flip={false}
                      groupFieldId=""
                      hasCheckboxes={true}
                      iconFieldId=""
                      imageFieldId=""
                      labelFieldId="name"
                      loading={false}
                      multiSelect={true}
                      options={Array []}
                      page={1}
                      placeholder="Введите значение"
                      queryId="list"
                      resetOnBlur={false}
                      size={10}
                      value={Array []}
                      valueFieldId="id"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;
