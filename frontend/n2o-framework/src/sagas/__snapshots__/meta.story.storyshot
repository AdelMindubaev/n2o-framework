// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Функциональность/Сайд-эффекты на экшены Метаданные 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Функциональность
      </li>
      <li
        className="breadcrumb-item active"
      >
        Сайд-эффекты на экшены
      </li>
      <li
        className="breadcrumb-item active"
      >
        Метаданные
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "функциональность-сайд-эффекты-на-экшены--метаданные",
                        "kind": "Функциональность/Сайд-эффекты на экшены",
                        "name": "Метаданные",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\sagas\\\\meta.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Метаданные",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <div>
                      <Factory
                        actions={
                          Object {
                            "exportModal": Object {
                              "options": Object {
                                "payload": Object {
                                  "actions": Object {
                                    "export": Object {
                                      "options": Object {
                                        "meta": Object {
                                          "modalsToClose": 1,
                                        },
                                        "payload": Object {
                                          "modelLink": "models.resolve['Page_Table']",
                                          "widgetId": "Page_Table",
                                        },
                                        "type": "n2o/actionImpl/START_INVOKE",
                                        "widgetId": "Page_Table",
                                      },
                                      "redirectTo": "/test",
                                      "src": "perform",
                                    },
                                  },
                                  "closeButton": false,
                                  "name": "test2",
                                  "pageId": "test",
                                  "size": "sm",
                                  "title": "Отправить запрос и закрыть модальное окно(сайд-эффект)",
                                  "toolbar": Array [
                                    Object {
                                      "buttons": Array [
                                        Object {
                                          "actionId": "export",
                                          "className": "btn-primary",
                                          "id": "export",
                                          "title": "Отправить запрос",
                                        },
                                      ],
                                    },
                                  ],
                                  "type": "n2o/modals/INSERT",
                                  "visible": true,
                                  "widgetId": "Page_Table",
                                },
                                "type": "n2o/modals/INSERT",
                              },
                              "src": "perform",
                              "widgetId": "Page_Table",
                            },
                            "refresh": Object {
                              "options": Object {
                                "meta": Object {
                                  "notification": Object {
                                    "severity": "success",
                                    "text": "Данные обновились",
                                  },
                                  "refresh": true,
                                },
                                "payload": Object {
                                  "widgetId": "Page_Table",
                                },
                                "type": "n2o/widgets/TOGGLE_FILTER_VISIBILITY",
                              },
                              "src": "perform",
                            },
                            "size": Object {
                              "options": Object {
                                "payload": Object {
                                  "size": 5,
                                  "widgetId": "Page_Table",
                                },
                                "type": "n2o/widgets/CHANGE_SIZE",
                              },
                              "src": "changeSize",
                            },
                            "toggle": Object {
                              "options": Object {
                                "meta": Object {
                                  "redirect": "/redirectTest",
                                },
                                "payload": Object {
                                  "widgetId": "Page_Table",
                                },
                                "type": "n2o/widgets/TOGGLE_FILTER_VISIBILITY",
                                "widgetId": "Page_Table",
                              },
                              "src": "perform",
                            },
                            "toggleWidgetFilters": Object {
                              "options": Object {
                                "meta": Object {
                                  "notification": Object {
                                    "severity": "warning",
                                    "text": "Вы поменяли видимость фильтров",
                                  },
                                },
                                "payload": Object {
                                  "widgetId": "Page_Table",
                                },
                                "type": "n2o/widgets/TOGGLE_FILTER_VISIBILITY",
                              },
                              "src": "perform",
                            },
                          }
                        }
                        dataProvider={
                          Object {
                            "pathMapping": Object {},
                            "queryMapping": Object {},
                            "url": "n2o/data/test",
                          }
                        }
                        filter={
                          Object {
                            "blackResetList": Array [],
                            "filterButtonId": "filter",
                            "filterFieldsets": Array [
                              Object {
                                "rows": Array [
                                  Object {
                                    "cols": Array [
                                      Object {
                                        "fields": Array [
                                          Object {
                                            "control": Object {
                                              "src": "InputText",
                                            },
                                            "id": "name",
                                            "label": "Имя",
                                          },
                                        ],
                                      },
                                      Object {
                                        "fields": Array [
                                          Object {
                                            "control": Object {
                                              "src": "InputText",
                                            },
                                            "id": "surname",
                                            "label": "Фамилия",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                                "src": "StandardFieldset",
                              },
                            ],
                          }
                        }
                        id="Page_Table"
                        level="widgets"
                        paging={
                          Object {
                            "next": true,
                            "prev": true,
                            "size": 10,
                          }
                        }
                        src="TableWidget"
                        table={
                          Object {
                            "autoFocus": false,
                            "cells": Array [
                              Object {
                                "id": "name",
                                "src": "TextCell",
                              },
                              Object {
                                "icon": "fa fa-plus",
                                "id": "surname",
                                "src": "IconCell",
                                "textPlace": "right",
                                "type": "iconAndText",
                              },
                              Object {
                                "id": "birthday",
                                "src": "TextCell",
                              },
                            ],
                            "className": "n2o",
                            "colorFieldId": "",
                            "fetchOnInit": true,
                            "hasFocus": true,
                            "hasSelect": true,
                            "headers": Array [
                              Object {
                                "id": "name",
                                "label": "Имя",
                                "sortable": false,
                                "src": "TextTableHeader",
                              },
                              Object {
                                "id": "surname",
                                "label": "Фамилия",
                                "sortable": true,
                                "src": "TextTableHeader",
                              },
                              Object {
                                "id": "birthday",
                                "label": "Дата рождения",
                                "sortable": true,
                                "src": "TextTableHeader",
                              },
                            ],
                            "size": 10,
                            "sorting": Object {
                              "birthday": "ASC",
                            },
                            "style": Object {},
                          }
                        }
                        toolbar={
                          Object {
                            "topRight": Array [
                              Object {
                                "buttons": Array [
                                  Object {
                                    "actionId": "toggleWidgetFilters",
                                    "id": "filter",
                                    "title": "Сообщение после экшена",
                                  },
                                  Object {
                                    "actionId": "toggle",
                                    "id": "6",
                                    "title": "Редирект",
                                  },
                                  Object {
                                    "actionId": "refresh",
                                    "id": "7",
                                    "title": "Запрос после экшена",
                                  },
                                  Object {
                                    "actionId": "exportModal",
                                    "id": "9",
                                    "title": "Закрытие модального окна после экшена",
                                  },
                                ],
                              },
                            ],
                          }
                        }
                      />
                    </div>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;
