// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Виджеты/Форма Placeholder 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форма
      </li>
      <li
        className="breadcrumb-item active"
      >
        Placeholder
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-форма--placeholder",
                        "kind": "Виджеты/Форма",
                        "name": "Placeholder",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\Form\\\\FormWidget.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Placeholder",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <div>
                      <Factory
                        dataProvider={
                          Object {
                            "pathMapping": Object {},
                            "queryMapping": Object {},
                            "url": "n2o/data/test",
                          }
                        }
                        dependency={Object {}}
                        form={
                          Object {
                            "fetchOnInit": true,
                            "fieldsets": Array [
                              Object {
                                "rows": Array [
                                  Object {
                                    "cols": Array [
                                      Object {
                                        "fields": Array [
                                          Object {
                                            "control": Object {
                                              "length": 10,
                                              "src": "InputText",
                                            },
                                            "id": "surname",
                                            "label": "Фамилия",
                                            "required": true,
                                            "src": "StandardField",
                                          },
                                          Object {
                                            "control": Object {
                                              "length": 10,
                                              "src": "InputText",
                                            },
                                            "help": "Или просто текст",
                                            "id": "name",
                                            "label": "Имя",
                                            "src": "StandardField",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                                "src": "StandardFieldset",
                              },
                            ],
                          }
                        }
                        id="Page_Form"
                        level="widgets"
                        placeholder={
                          Object {
                            "cols": 1,
                            "rows": 2,
                            "type": "form",
                          }
                        }
                        src="FormWidget"
                      />
                    </div>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Форма Валидации 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форма
      </li>
      <li
        className="breadcrumb-item active"
      >
        Валидации
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-форма--валидации",
                        "kind": "Виджеты/Форма",
                        "name": "Валидации",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\Form\\\\FormWidget.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Валидации",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      actions={
                        Object {
                          "update": Object {
                            "options": Object {
                              "confirm": true,
                              "modelLink": "models.resolve['Page_Form']",
                            },
                            "src": "invoke",
                          },
                        }
                      }
                      dependency={Object {}}
                      form={
                        Object {
                          "fetchOnInit": false,
                          "fieldsets": Array [
                            Object {
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "description": "Описание поля",
                                          "id": "field1",
                                          "label": "Предупреждение",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field2",
                                          "label": "Ошибка",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field3",
                                          "label": "Успешное действие",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field4",
                                          "label": "Обязательное поле",
                                          "required": true,
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field5",
                                          "label": "AJAX",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field6",
                                          "label": "Максимальная длина",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field7",
                                          "label": "Минимальная длина",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field8",
                                          "label": "Целое число",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field9",
                                          "label": "Русский язык",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field10",
                                          "label": "JS-condition",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field11",
                                          "label": "Равно значению",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field42",
                                          "label": "Условие ( field42 == '1')",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field41",
                                          "label": "Зависит от 'Условия'",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                  ],
                                },
                              ],
                              "src": "StandardFieldset",
                            },
                          ],
                          "filterDefaultValues": Object {
                            "fetch": Array [
                              Object {
                                "bindLink": "models.resolve['Page_Table']",
                              },
                            ],
                          },
                          "validation": Object {
                            "field1": Array [
                              Object {
                                "expression": "(field1.length == 0)",
                                "severity": "warning",
                                "text": "Предупреждение",
                                "type": "condition",
                              },
                            ],
                            "field10": Array [
                              Object {
                                "expression": "field10 === 'N2O'",
                                "severity": "warning",
                                "text": "значение должно быть равно N2O(js-expression)",
                                "type": "condition",
                              },
                            ],
                            "field11": Array [
                              Object {
                                "field": "N2O",
                                "severity": "warning",
                                "text": "Значение быть равно N2O(match)",
                                "type": "match",
                              },
                            ],
                            "field2": Array [
                              Object {
                                "expression": "(field2.length == 0)",
                                "severity": "danger",
                                "text": "Ошибка",
                                "type": "condition",
                              },
                            ],
                            "field3": Array [
                              Object {
                                "expression": "(field3.length == 0)",
                                "severity": "success",
                                "text": "Успешное действие",
                                "type": "condition",
                              },
                            ],
                            "field4": Array [
                              Object {
                                "severity": "danger",
                                "text": "Поле обязательное",
                                "type": "required",
                              },
                            ],
                            "field41": Array [
                              Object {
                                "expression": "(field42 == '1')",
                                "severity": "danger",
                                "text": "Поле обязательное по условию",
                                "type": "required",
                              },
                            ],
                            "field5": Array [
                              Object {
                                "type": "constraint",
                                "validationKey": "validCheckSurname",
                              },
                            ],
                            "field6": Array [
                              Object {
                                "max": 5,
                                "severity": "warning",
                                "text": "Максимальная длина равна 5 символам",
                                "type": "maxLength",
                              },
                            ],
                            "field7": Array [
                              Object {
                                "min": 5,
                                "severity": "warning",
                                "text": "Минимальная длина равна 5 символам",
                                "type": "minLength",
                              },
                            ],
                            "field8": Array [
                              Object {
                                "severity": "warning",
                                "text": "Введите целое число",
                                "type": "integer",
                              },
                            ],
                            "field9": Array [
                              Object {
                                "severity": "warning",
                                "text": "Введите значения, используя кириллицу",
                                "type": "russian",
                              },
                            ],
                          },
                        }
                      }
                      id="Page_Form"
                      level="widgets"
                      src="FormWidget"
                      toolbar={
                        Object {
                          "topLeft": Array [
                            Array [
                              Object {
                                "actionId": "update",
                                "id": "update",
                                "title": "Сохранить",
                              },
                            ],
                          ],
                        }
                      }
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Форма Видимость и блокировка филдсета 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форма
      </li>
      <li
        className="breadcrumb-item active"
      >
        Видимость и блокировка филдсета
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-форма--видимость-и-блокировка-филдсета",
                        "kind": "Виджеты/Форма",
                        "name": "Видимость и блокировка филдсета",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\Form\\\\FormWidget.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Видимость и блокировка филдсета",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/test",
                        }
                      }
                      dependency={Object {}}
                      form={
                        Object {
                          "fetchOnInit": false,
                          "fieldsets": Array [
                            Object {
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "data": Array [
                                              Object {
                                                "id": 1,
                                                "label": "Показать/разблокировать все fieldsets",
                                              },
                                              Object {
                                                "id": 2,
                                                "label": "Скрыть fieldset",
                                              },
                                              Object {
                                                "id": 3,
                                                "label": "Заблокировать fieldset",
                                              },
                                              Object {
                                                "id": 4,
                                                "label": "Скрыть вложенный fieldset",
                                              },
                                              Object {
                                                "id": 5,
                                                "label": "Заблокировать вложенный fieldset",
                                              },
                                            ],
                                            "labelFieldId": "label",
                                            "src": "InputSelect",
                                            "valueFieldId": "id",
                                          },
                                          "id": "fieldName",
                                          "label": "Выберите действие",
                                          "src": "StandardField",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                              "src": "StandartFieldset",
                            },
                            Object {
                              "dependency": Array [
                                Object {
                                  "on": Array [
                                    "fieldName",
                                  ],
                                  "type": "reRender",
                                },
                              ],
                              "enabled": "\`fieldName.id != 3\`",
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "name",
                                          "label": "Первое поле",
                                          "src": "StandardField",
                                        },
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "surname",
                                          "label": "Второе поле",
                                          "src": "StandardField",
                                        },
                                      ],
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fieldsets": Array [
                                        Object {
                                          "dependency": Array [
                                            Object {
                                              "on": Array [
                                                "fieldName",
                                              ],
                                              "type": "reRender",
                                            },
                                          ],
                                          "enabled": "\`fieldName.id != 5\`",
                                          "rows": Array [
                                            Object {
                                              "cols": Array [
                                                Object {
                                                  "fields": Array [
                                                    Object {
                                                      "control": Object {
                                                        "src": "InputText",
                                                      },
                                                      "id": "innerName",
                                                      "label": "Вложеное поле",
                                                      "src": "StandardField",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                          "src": "StandartFieldset",
                                          "visible": "\`fieldName.id != 4\`",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                              "src": "StandartFieldset",
                              "visible": "\`fieldName.id != 2\`",
                            },
                          ],
                          "modelPrefix": "resolve",
                          "validation": Object {},
                        }
                      }
                      id="Page_Form"
                      level="widgets"
                      src="FormWidget"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Форма Метаданные 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форма
      </li>
      <li
        className="breadcrumb-item active"
      >
        Метаданные
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-форма--метаданные",
                        "kind": "Виджеты/Форма",
                        "name": "Метаданные",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\Form\\\\FormWidget.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Метаданные",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      actions={
                        Object {
                          "update": Object {
                            "options": Object {
                              "confirm": true,
                              "modelLink": "models.resolve['Page_Form']",
                            },
                            "src": "invoke",
                          },
                        }
                      }
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/test",
                        }
                      }
                      dependency={Object {}}
                      form={
                        Object {
                          "fetchOnInit": false,
                          "fieldDefaultValues": Object {
                            "surname2": "moscow",
                          },
                          "fieldsets": Array [
                            Object {
                              "dependency": Array [
                                Object {
                                  "on": Array [
                                    "a.b.c",
                                    "z.x.c",
                                  ],
                                  "type": "re-render",
                                },
                              ],
                              "enabled": "\`y < 5\`",
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "length": 10,
                                            "src": "InputText",
                                          },
                                          "help": "<p><strong>При вводе скрывается поле <span style='color: #ff0000;'>'Имя'</span>, чтобы поле появилось введите 'test'</strong></p>",
                                          "id": "surname",
                                          "label": "Фамилия",
                                          "required": true,
                                          "src": "StandardField",
                                        },
                                        Object {
                                          "control": Object {
                                            "length": 10,
                                            "src": "InputText",
                                          },
                                          "dependency": Array [
                                            Object {
                                              "expression": "surname == 'test'",
                                              "on": Array [
                                                "surname",
                                              ],
                                              "type": "visible",
                                            },
                                          ],
                                          "help": "Или просто текст",
                                          "id": "name",
                                          "label": "Имя",
                                          "src": "StandardField",
                                        },
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "dependency": Array [],
                                          "id": "hideField",
                                          "label": "Скрытое поле",
                                          "src": "StandardField",
                                          "visible": false,
                                        },
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "dependency": Array [],
                                          "description": "Изначально заблокировано",
                                          "enabled": false,
                                          "id": "patrName",
                                          "label": "Отчество",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "fieldsets": Array [
                                        Object {
                                          "labelPosition": "top-left",
                                          "rows": Array [
                                            Object {
                                              "cols": Array [
                                                Object {
                                                  "fields": Array [
                                                    Object {
                                                      "control": Object {
                                                        "src": "DateInterval",
                                                      },
                                                      "id": "dateInterval",
                                                      "label": "Срок",
                                                      "src": "StandardField",
                                                    },
                                                    Object {
                                                      "control": Object {
                                                        "data": Array [
                                                          Object {
                                                            "id": 1,
                                                            "label": "Мужской",
                                                          },
                                                          Object {
                                                            "id": 2,
                                                            "label": "Женский",
                                                          },
                                                        ],
                                                        "labelFieldId": "label",
                                                        "src": "RadioGroup",
                                                        "type": "n2o",
                                                      },
                                                      "id": "name2",
                                                      "label": "Пол",
                                                      "src": "StandardField",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                          "src": "StandardFieldset",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                              "src": "StandardFieldset",
                              "visible": "\`x > 1\`",
                            },
                          ],
                          "filterDefaultValues": Object {
                            "fetch": Array [
                              Object {
                                "bindLink": "models.resolve['Page_Table']",
                              },
                            ],
                          },
                          "prompt": false,
                          "validation": Object {
                            "email": Array [
                              Object {
                                "text": "Некорректный e-mail",
                                "type": "email",
                              },
                            ],
                            "name": Array [
                              Object {
                                "severity": "danger",
                                "text": "Поле обязательно для заполнения",
                                "type": "required",
                              },
                              Object {
                                "expression": "(name === 'test')",
                                "severity": "warning",
                                "text": "Имя должно быть test",
                                "type": "condition",
                              },
                            ],
                            "surname": Array [
                              Object {
                                "severity": "success",
                                "text": "Доступная фамилия",
                                "type": "constraint",
                                "validationKey": "validCheckSurname",
                              },
                            ],
                          },
                        }
                      }
                      id="Page_Form"
                      level="widgets"
                      src="FormWidget"
                      toolbar={
                        Object {
                          "topLeft": Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "update",
                                  "id": "update",
                                  "title": "Сохранить",
                                  "validate": false,
                                },
                              ],
                            },
                          ],
                        }
                      }
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Форма Ограничение доступа 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форма
      </li>
      <li
        className="breadcrumb-item active"
      >
        Ограничение доступа
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-форма--ограничение-доступа",
                        "kind": "Виджеты/Форма",
                        "name": "Ограничение доступа",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\Form\\\\FormWidget.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Ограничение доступа",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <div>
                      <small>
                        Введите 
                        <mark>
                          admin
                        </mark>
                        , чтобы увидеть скрытый виджет региона
                      </small>
                      <Connect(AuthButton) />
                      <br />
                      <Factory
                        dataProvider={
                          Object {
                            "pathMapping": Object {},
                            "queryMapping": Object {},
                            "url": "n2o/data/test",
                          }
                        }
                        dependency={Object {}}
                        form={
                          Object {
                            "fetchOnInit": false,
                            "fieldsets": Array [
                              Object {
                                "rows": Array [
                                  Object {
                                    "cols": Array [
                                      Object {
                                        "fieldsets": Array [
                                          Object {
                                            "rows": Array [
                                              Object {
                                                "cols": Array [
                                                  Object {
                                                    "fields": Array [
                                                      Object {
                                                        "control": Object {
                                                          "src": "InputText",
                                                        },
                                                        "id": "innerName",
                                                        "label": "Скрытое поле",
                                                        "src": "StandardField",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            ],
                                            "security": Object {
                                              "roles": Array [
                                                "admin",
                                              ],
                                            },
                                            "src": "StandartFieldset",
                                          },
                                          Object {
                                            "rows": Array [
                                              Object {
                                                "cols": Array [
                                                  Object {
                                                    "fields": Array [
                                                      Object {
                                                        "control": Object {
                                                          "security": Object {
                                                            "roles": Array [
                                                              "admin",
                                                            ],
                                                          },
                                                          "src": "InputText",
                                                        },
                                                        "id": "innerName",
                                                        "label": "Поле с скрытым контроллом",
                                                        "src": "StandardField",
                                                      },
                                                    ],
                                                  },
                                                ],
                                              },
                                            ],
                                            "src": "StandartFieldset",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                                "src": "StandartFieldset",
                              },
                            ],
                            "modelPrefix": "resolve",
                            "validation": Object {},
                          }
                        }
                        id="Page_Form"
                        level="widgets"
                        src="FormWidget"
                      />
                    </div>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Форма Отображение в полях сообщений от сервера 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форма
      </li>
      <li
        className="breadcrumb-item active"
      >
        Отображение в полях сообщений от сервера
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-форма--отображение-в-полях-сообщений-от-сервера",
                        "kind": "Виджеты/Форма",
                        "name": "Отображение в полях сообщений от сервера",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\Form\\\\FormWidget.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Отображение в полях сообщений от сервера",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      actions={
                        Object {
                          "invoke": Object {
                            "options": Object {
                              "payload": Object {
                                "dataProvider": Object {
                                  "url": "n2o/data",
                                },
                                "modelLink": "test",
                                "widgetId": "Page_Form",
                              },
                              "type": "n2o/actionImpl/START_INVOKE",
                            },
                            "src": "perform",
                          },
                        }
                      }
                      dataProvider={Object {}}
                      dependency={Object {}}
                      form={
                        Object {
                          "fetchOnInit": false,
                          "fieldsets": Array [
                            Object {
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "name",
                                          "label": "Имя",
                                          "src": "StandardField",
                                        },
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "surname",
                                          "label": "Фамилия",
                                          "src": "StandardField",
                                        },
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "age",
                                          "label": "Возраст",
                                          "src": "StandardField",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                              "src": "StandardFieldset",
                            },
                          ],
                        }
                      }
                      id="Page_Form"
                      level="widgets"
                      src="FormWidget"
                      toolbar={
                        Object {
                          "topLeft": Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "invoke",
                                  "hint": "Получить серверное сообщение",
                                  "id": "send",
                                  "title": "Получить сообщение",
                                },
                              ],
                            },
                          ],
                        }
                      }
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Форма Расположение лейбла 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форма
      </li>
      <li
        className="breadcrumb-item active"
      >
        Расположение лейбла
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-форма--расположение-лейбла",
                        "kind": "Виджеты/Форма",
                        "name": "Расположение лейбла",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\Form\\\\FormWidget.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Расположение лейбла",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      actions={Object {}}
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/test",
                        }
                      }
                      dependency={Object {}}
                      form={
                        Object {
                          "fetchOnInit": false,
                          "fieldsets": Array [
                            Object {
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fieldsets": Array [
                                        Object {
                                          "labelPosition": "top-left",
                                          "rows": Array [
                                            Object {
                                              "cols": Array [
                                                Object {
                                                  "fields": Array [
                                                    Object {
                                                      "control": Object {
                                                        "src": "InputText",
                                                      },
                                                      "id": "field1",
                                                      "label": "Сверху слева",
                                                      "src": "StandardField",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                          "src": "StandardFieldset",
                                        },
                                      ],
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fieldsets": Array [
                                        Object {
                                          "labelPosition": "top-right",
                                          "rows": Array [
                                            Object {
                                              "cols": Array [
                                                Object {
                                                  "fields": Array [
                                                    Object {
                                                      "control": Object {
                                                        "src": "InputText",
                                                      },
                                                      "id": "field2",
                                                      "label": "Сверху справа",
                                                      "src": "StandardField",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                          "src": "StandardFieldset",
                                        },
                                      ],
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fieldsets": Array [
                                        Object {
                                          "labelAlignment": "left",
                                          "labelPosition": "left",
                                          "labelWidth": 250,
                                          "rows": Array [
                                            Object {
                                              "cols": Array [
                                                Object {
                                                  "fields": Array [
                                                    Object {
                                                      "control": Object {
                                                        "src": "InputText",
                                                      },
                                                      "id": "field3",
                                                      "label": "Слева и прибит слева",
                                                      "src": "StandardField",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                          "src": "StandardFieldset",
                                        },
                                      ],
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fieldsets": Array [
                                        Object {
                                          "labelAlignment": "right",
                                          "labelPosition": "left",
                                          "labelWidth": 250,
                                          "rows": Array [
                                            Object {
                                              "cols": Array [
                                                Object {
                                                  "fields": Array [
                                                    Object {
                                                      "control": Object {
                                                        "src": "InputText",
                                                      },
                                                      "id": "field3",
                                                      "label": "Слева и прибит справа",
                                                      "src": "StandardField",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                          "src": "StandardFieldset",
                                        },
                                      ],
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fieldsets": Array [
                                        Object {
                                          "labelAlignment": "left",
                                          "labelPosition": "left",
                                          "labelWidth": "min",
                                          "rows": Array [
                                            Object {
                                              "cols": Array [
                                                Object {
                                                  "fields": Array [
                                                    Object {
                                                      "control": Object {
                                                        "src": "InputText",
                                                      },
                                                      "id": "field3",
                                                      "label": "Ширина min",
                                                      "src": "StandardField",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                          "src": "StandardFieldset",
                                        },
                                      ],
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fieldsets": Array [
                                        Object {
                                          "labelAlignment": "left",
                                          "labelPosition": "left",
                                          "labelWidth": "default",
                                          "rows": Array [
                                            Object {
                                              "cols": Array [
                                                Object {
                                                  "fields": Array [
                                                    Object {
                                                      "control": Object {
                                                        "src": "InputText",
                                                      },
                                                      "id": "field3",
                                                      "label": "Ширина default(180px)",
                                                      "src": "StandardField",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                          "src": "StandardFieldset",
                                        },
                                      ],
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fieldsets": Array [
                                        Object {
                                          "labelPosition": "left",
                                          "rows": Array [
                                            Object {
                                              "cols": Array [
                                                Object {
                                                  "fields": Array [
                                                    Object {
                                                      "control": Object {
                                                        "src": "InputText",
                                                      },
                                                      "id": "field3",
                                                      "label": "Слева",
                                                      "src": "StandardField",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                          "src": "StandardFieldset",
                                        },
                                      ],
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fieldsets": Array [
                                        Object {
                                          "labelPosition": "right",
                                          "rows": Array [
                                            Object {
                                              "cols": Array [
                                                Object {
                                                  "fields": Array [
                                                    Object {
                                                      "control": Object {
                                                        "src": "InputText",
                                                      },
                                                      "id": "field4",
                                                      "label": "Справа",
                                                      "src": "StandardField",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                          "src": "StandardFieldset",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                              "src": "StandardFieldset",
                            },
                          ],
                          "filterDefaultValues": Object {},
                          "validation": Object {},
                        }
                      }
                      id="Page_Form"
                      level="widgets"
                      src="FormWidget"
                      toolbar={Object {}}
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Форма Сворачиваемая форма 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форма
      </li>
      <li
        className="breadcrumb-item active"
      >
        Сворачиваемая форма
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-форма--сворачиваемая-форма",
                        "kind": "Виджеты/Форма",
                        "name": "Сворачиваемая форма",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\Form\\\\FormWidget.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Сворачиваемая форма",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/test",
                        }
                      }
                      dependency={Object {}}
                      form={
                        Object {
                          "fetchOnInit": false,
                          "fieldsets": Array [
                            Object {
                              "expand": true,
                              "hasArrow": true,
                              "label": "Заголовок филдсета",
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "name",
                                          "label": "Имя",
                                          "src": "StandardField",
                                        },
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "surname",
                                          "label": "Фамилия",
                                          "src": "StandardField",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                              "src": "CollapseFieldset",
                              "type": "line",
                            },
                          ],
                          "validation": Object {},
                        }
                      }
                      id="Page_Form"
                      level="widgets"
                      src="FormWidget"
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Форма Тест на нагруженную форму 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форма
      </li>
      <li
        className="breadcrumb-item active"
      >
        Тест на нагруженную форму
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-форма--тест-на-нагруженную-форму",
                        "kind": "Виджеты/Форма",
                        "name": "Тест на нагруженную форму",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\Form\\\\FormWidget.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Тест на нагруженную форму",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      actions={
                        Object {
                          "invoke": Object {
                            "options": Object {
                              "payload": Object {
                                "dataProvider": Object {
                                  "url": "n2o/data",
                                },
                                "modelLink": "test",
                                "widgetId": "Page_Form",
                              },
                              "type": "n2o/actionImpl/START_INVOKE",
                            },
                            "src": "perform",
                          },
                        }
                      }
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/test",
                        }
                      }
                      dependency={Object {}}
                      form={
                        Object {
                          "fetchOnInit": false,
                          "fieldsets": Array [
                            Object {
                              "className": "h6",
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "data": Array [
                                              Object {
                                                "id": 1,
                                                "label": "Показать/разблокировать все fieldsets",
                                              },
                                              Object {
                                                "id": 2,
                                                "label": "Скрыть fieldset",
                                              },
                                              Object {
                                                "id": 3,
                                                "label": "Заблокировать fieldset",
                                              },
                                              Object {
                                                "id": 4,
                                                "label": "Скрыть вложенный fieldset",
                                              },
                                              Object {
                                                "id": 5,
                                                "label": "Заблокировать вложенный fieldset",
                                              },
                                            ],
                                            "labelFieldId": "label",
                                            "src": "InputSelect",
                                            "valueFieldId": "id",
                                          },
                                          "id": "fieldName",
                                          "label": "Выберите действие",
                                          "src": "StandardField",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                              "showLine": true,
                              "src": "TitleFieldset",
                              "style": Object {
                                "border": "1px dotted gray",
                                "padding": "10px",
                              },
                              "title": "Видимость и блокировка филдсета",
                            },
                            Object {
                              "dependency": Array [
                                Object {
                                  "on": Array [
                                    "fieldName",
                                  ],
                                  "type": "reRender",
                                },
                              ],
                              "enabled": "\`fieldName.id != 3\`",
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "name",
                                          "label": "Первое поле",
                                          "src": "StandardField",
                                        },
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "surname",
                                          "label": "Второе поле",
                                          "src": "StandardField",
                                        },
                                      ],
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fieldsets": Array [
                                        Object {
                                          "dependency": Array [
                                            Object {
                                              "on": Array [
                                                "fieldName",
                                              ],
                                              "type": "reRender",
                                            },
                                          ],
                                          "enabled": "\`fieldName.id != 5\`",
                                          "rows": Array [
                                            Object {
                                              "cols": Array [
                                                Object {
                                                  "fields": Array [
                                                    Object {
                                                      "control": Object {
                                                        "src": "InputText",
                                                      },
                                                      "id": "innerName",
                                                      "label": "Вложеное поле",
                                                      "src": "StandardField",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                          "src": "StandartFieldset",
                                          "visible": "\`fieldName.id != 4\`",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                              "src": "StandartFieldset",
                              "visible": "\`fieldName.id != 2\`",
                            },
                            Object {
                              "expand": true,
                              "hasArrow": true,
                              "label": "Заголовок филдсета",
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "name111",
                                          "label": "Имя",
                                          "src": "StandardField",
                                        },
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "surname111",
                                          "label": "Фамилия",
                                          "src": "StandardField",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                              "src": "CollapseFieldset",
                              "type": "line",
                            },
                            Object {
                              "className": "h6 red",
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "description": "Описание поля",
                                          "id": "field1",
                                          "label": "Предупреждение",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field2",
                                          "label": "Ошибка",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field3",
                                          "label": "Успешное действие",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field4",
                                          "label": "Обязательное поле",
                                          "required": true,
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field5",
                                          "label": "AJAX",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field6",
                                          "label": "Максимальная длина",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field7",
                                          "label": "Минимальная длина",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field8",
                                          "label": "Целое число",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field9",
                                          "label": "Русский язык",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field10",
                                          "label": "JS-condition",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field11",
                                          "label": "Равно значению",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                  ],
                                },
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field42",
                                          "label": "Условие ( field42 == '1')",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "field41",
                                          "label": "Зависит от 'Условия'",
                                          "src": "StandardField",
                                        },
                                      ],
                                      "size": 4,
                                    },
                                  ],
                                },
                              ],
                              "showLine": true,
                              "src": "TitleFieldset",
                              "style": Object {
                                "border": "1px dotted gray",
                                "padding": "10px",
                              },
                              "title": "Валидации",
                            },
                            Object {
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "nameSerValid",
                                          "label": "Имя",
                                          "src": "StandardField",
                                        },
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "surnameSerValid",
                                          "label": "Фамилия",
                                          "src": "StandardField",
                                        },
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "ageSerValid",
                                          "label": "Возраст",
                                          "src": "StandardField",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                              "showLine": true,
                              "src": "TitleFieldset",
                              "style": Object {
                                "border": "1px dotted gray",
                                "padding": "10px",
                              },
                              "title": "Сообщения с сервера",
                            },
                          ],
                          "modelPrefix": "resolve",
                          "validation": Object {
                            "field1": Array [
                              Object {
                                "expression": "(field1.length == 0)",
                                "severity": "warning",
                                "text": "Предупреждение",
                                "type": "condition",
                              },
                            ],
                            "field10": Array [
                              Object {
                                "expression": "field10 === 'N2O'",
                                "severity": "warning",
                                "text": "значение должно быть равно N2O(js-expression)",
                                "type": "condition",
                              },
                            ],
                            "field11": Array [
                              Object {
                                "field": "N2O",
                                "severity": "warning",
                                "text": "Значение быть равно N2O(match)",
                                "type": "match",
                              },
                            ],
                            "field2": Array [
                              Object {
                                "expression": "(field2.length == 0)",
                                "severity": "danger",
                                "text": "Ошибка",
                                "type": "condition",
                              },
                            ],
                            "field3": Array [
                              Object {
                                "expression": "(field3.length == 0)",
                                "severity": "success",
                                "text": "Успешное действие",
                                "type": "condition",
                              },
                            ],
                            "field4": Array [
                              Object {
                                "severity": "danger",
                                "text": "Поле обязательное",
                                "type": "required",
                              },
                            ],
                            "field41": Array [
                              Object {
                                "expression": "(field42 == '1')",
                                "severity": "danger",
                                "text": "Поле обязательное по условию",
                                "type": "required",
                              },
                            ],
                            "field5": Array [
                              Object {
                                "type": "constraint",
                                "validationKey": "validCheckSurname",
                              },
                            ],
                            "field6": Array [
                              Object {
                                "max": 5,
                                "severity": "warning",
                                "text": "Максимальная длина равна 5 символам",
                                "type": "maxLength",
                              },
                            ],
                            "field7": Array [
                              Object {
                                "min": 5,
                                "severity": "warning",
                                "text": "Минимальная длина равна 5 символам",
                                "type": "minLength",
                              },
                            ],
                            "field8": Array [
                              Object {
                                "severity": "warning",
                                "text": "Введите целое число",
                                "type": "integer",
                              },
                            ],
                            "field9": Array [
                              Object {
                                "severity": "warning",
                                "text": "Введите значения, используя кириллицу",
                                "type": "russian",
                              },
                            ],
                          },
                        }
                      }
                      id="Page_Form"
                      level="widgets"
                      src="FormWidget"
                      toolbar={
                        Object {
                          "topLeft": Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "invoke",
                                  "hint": "Получить серверное сообщение",
                                  "id": "send",
                                  "title": "Получить сообщение",
                                },
                              ],
                            },
                          ],
                        }
                      }
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Форма Форма с Prompt 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форма
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форма с Prompt
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-форма--форма-с-prompt",
                        "kind": "Виджеты/Форма",
                        "name": "Форма с Prompt",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\Form\\\\FormWidget.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Форма с Prompt",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <BrowserRouter>
                      <div>
                        <div
                          className="row"
                        >
                          <div
                            className="col-6"
                          >
                            <h5>
                              Меню
                            </h5>
                            <div
                              className="nav flex-column"
                            >
                              <Link
                                className="nav-link"
                                replace={false}
                                to="/"
                              >
                                Форма
                              </Link>
                              <Link
                                className="nav-link"
                                replace={false}
                                to="/another"
                              >
                                Другая страница
                              </Link>
                            </div>
                          </div>
                          <div
                            className="col-6"
                          >
                            <Switch>
                              <Route
                                component={[Function]}
                                exact={true}
                                path="/"
                              />
                              <Route
                                component={[Function]}
                                path="/another"
                              />
                            </Switch>
                          </div>
                        </div>
                      </div>
                    </BrowserRouter>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Форма Экшены полей 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Форма
      </li>
      <li
        className="breadcrumb-item active"
      >
        Экшены полей
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-форма--экшены-полей",
                        "kind": "Виджеты/Форма",
                        "name": "Экшены полей",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\Form\\\\FormWidget.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Экшены полей",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <Factory
                      actions={
                        Object {
                          "disable": Object {
                            "options": Object {
                              "fieldName": "name",
                              "formName": "Page_Form",
                              "shouldApply": true,
                            },
                            "src": "enabled",
                          },
                          "enable": Object {
                            "options": Object {
                              "fieldName": "name",
                              "formName": "Page_Form",
                              "shouldApply": false,
                            },
                            "src": "enabled",
                          },
                          "hide": Object {
                            "options": Object {
                              "fieldName": "name",
                              "formName": "Page_Form",
                              "shouldApply": true,
                            },
                            "src": "visible",
                          },
                          "show": Object {
                            "options": Object {
                              "fieldName": "name",
                              "formName": "Page_Form",
                              "shouldApply": false,
                            },
                            "src": "visible",
                          },
                        }
                      }
                      dataProvider={
                        Object {
                          "pathMapping": Object {},
                          "queryMapping": Object {},
                          "url": "n2o/data/test",
                        }
                      }
                      dependency={Object {}}
                      form={
                        Object {
                          "fetchOnInit": false,
                          "fieldsets": Array [
                            Object {
                              "rows": Array [
                                Object {
                                  "cols": Array [
                                    Object {
                                      "fields": Array [
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "name",
                                          "label": "Имя",
                                          "src": "StandardField",
                                        },
                                        Object {
                                          "control": Object {
                                            "src": "InputText",
                                          },
                                          "id": "surname",
                                          "label": "Фамилия",
                                          "src": "StandardField",
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                              "src": "StandardFieldset",
                            },
                          ],
                          "filterDefaultValues": Object {
                            "fetch": Array [
                              Object {
                                "bindLink": "models.resolve['Page_Table']",
                              },
                            ],
                          },
                          "validation": Object {},
                        }
                      }
                      id="Page_Form"
                      level="widgets"
                      src="FormWidget"
                      toolbar={
                        Object {
                          "topLeft": Array [
                            Object {
                              "buttons": Array [
                                Object {
                                  "actionId": "disable",
                                  "hint": "Сделать поле неактивным",
                                  "id": "disable",
                                  "title": "Дезактивировать",
                                },
                                Object {
                                  "actionId": "enable",
                                  "hint": "Сделать поле активным",
                                  "id": "enable",
                                  "title": "Активировать",
                                },
                                Object {
                                  "actionId": "hide",
                                  "hint": "Сделать поле невидимым",
                                  "id": "hide",
                                  "title": "Убрать",
                                },
                                Object {
                                  "actionId": "show",
                                  "hint": "Сделать поле видимым",
                                  "id": "show",
                                  "title": "Показать",
                                },
                                Object {
                                  "color": "primary",
                                  "hint": "Откроется если в одно из полей Имя или Фамилия внесены данные",
                                  "id": "submit",
                                  "resolveEnabled": Object {
                                    "modelLink": "models.resolve['Page_Form']",
                                    "on": Array [
                                      "name",
                                      "surname",
                                    ],
                                  },
                                  "title": "Отправить",
                                },
                              ],
                            },
                          ],
                        }
                      }
                    />
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;
