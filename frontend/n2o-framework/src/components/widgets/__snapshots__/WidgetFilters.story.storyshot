// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Виджеты/Таблица Выборочное сбрасывание фильтра 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Таблица
      </li>
      <li
        className="breadcrumb-item active"
      >
        Выборочное сбрасывание фильтра
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-таблица--выборочное-сбрасывание-фильтра",
                        "kind": "Виджеты/Таблица",
                        "name": "Выборочное сбрасывание фильтра",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\WidgetFilters.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Выборочное сбрасывание фильтра",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <div>
                      <Factory
                        actions={
                          Object {
                            "exportModal": Object {
                              "options": Object {
                                "payload": Object {
                                  "actions": Object {
                                    "destroyModal": Object {
                                      "options": Object {
                                        "type": "n2o/modals/DESTROY",
                                      },
                                      "src": "perform",
                                    },
                                    "export": Object {
                                      "notification": Object {
                                        "severity": "danger",
                                        "text": "Это сообщение будет отображаться 10 секунд",
                                        "timeout": 10000,
                                      },
                                      "options": Object {
                                        "widgetId": "Page_Table",
                                      },
                                      "redirectTo": "/test",
                                      "src": "exportTable",
                                    },
                                  },
                                  "closeButton": false,
                                  "name": "test2",
                                  "size": "sm",
                                  "src": "exportModal",
                                  "title": "Экспортровать",
                                  "toolbar": Array [
                                    Object {
                                      "buttons": Array [
                                        Object {
                                          "actionId": "export",
                                          "className": "btn-primary",
                                          "icon": "fa fa-download",
                                          "id": "export",
                                          "title": "Загрузить",
                                        },
                                        Object {
                                          "actionId": "destroyModal",
                                          "id": "cancelExport",
                                          "title": "Отменить",
                                        },
                                      ],
                                    },
                                  ],
                                  "type": "n2o/modals/INSERT",
                                  "visible": true,
                                  "widgetId": "Page_Table",
                                },
                                "type": "n2o/modals/INSERT",
                              },
                              "src": "perform",
                              "widgetId": "Page_Table",
                            },
                            "menuItem0": Object {
                              "options": Object {
                                "payload": Object {
                                  "widgetId": "Page_Table",
                                },
                                "type": "n2o/widgets/TOGGLE_FILTER_VISIBILITY",
                              },
                              "src": "perform",
                            },
                            "menuItem2": Object {
                              "options": Object {
                                "payload": Object {
                                  "widgetId": "Page_Table",
                                },
                                "type": "n2o/widgets/DATA_REQUEST",
                              },
                              "src": "perform",
                            },
                          }
                        }
                        className="n2o"
                        dataProvider={
                          Object {
                            "pathMapping": Object {},
                            "queryMapping": Object {
                              "filter.name": Object {
                                "link": "models.filter['Page_Table'].name",
                              },
                              "filter.surname": Object {
                                "link": "models.filter['Page_Table'].surname",
                              },
                            },
                            "url": "n2o/data/test",
                          }
                        }
                        filter={
                          Object {
                            "blackResetList": Array [
                              "name",
                            ],
                            "filterButtonId": "filter",
                            "filterFieldsets": Array [
                              Object {
                                "rows": Array [
                                  Object {
                                    "cols": Array [
                                      Object {
                                        "fields": Array [
                                          Object {
                                            "control": Object {
                                              "src": "InputText",
                                            },
                                            "description": "Это поле не сбросится",
                                            "id": "name",
                                            "label": "Имя",
                                          },
                                        ],
                                      },
                                      Object {
                                        "fields": Array [
                                          Object {
                                            "control": Object {
                                              "src": "InputText",
                                            },
                                            "id": "surname",
                                            "label": "Фамилия",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                                "src": "StandardFieldset",
                              },
                            ],
                            "filterPlace": "top",
                          }
                        }
                        id="Page_Table"
                        level="widgets"
                        paging={
                          Object {
                            "next": true,
                            "prev": true,
                            "size": 10,
                          }
                        }
                        src="TableWidget"
                        table={
                          Object {
                            "autoFocus": false,
                            "cells": Array [
                              Object {
                                "id": "name",
                                "src": "TextCell",
                              },
                              Object {
                                "icon": "fa fa-plus",
                                "id": "surname",
                                "src": "IconCell",
                                "textPlace": "right",
                                "type": "iconAndText",
                              },
                              Object {
                                "id": "birthday",
                                "src": "TextCell",
                              },
                            ],
                            "fetchOnInit": true,
                            "hasFocus": true,
                            "hasSelect": true,
                            "headers": Array [
                              Object {
                                "id": "name",
                                "label": "Имя",
                                "sortable": false,
                                "src": "TextTableHeader",
                                "width": "50",
                              },
                              Object {
                                "id": "surname",
                                "label": "Фамилия",
                                "sortable": true,
                                "src": "TextTableHeader",
                              },
                              Object {
                                "id": "birthday",
                                "label": "Дата рождения",
                                "sortable": true,
                                "src": "TextTableHeader",
                              },
                            ],
                            "rowClass": "\`gender.id == 1 ? 'red' : gender.id == 2 ? 'blue' : gender.id == 3 ? 'white' : 'green'\`",
                            "size": 10,
                            "sorting": Object {
                              "birthday": "ASC",
                            },
                            "style": Object {},
                          }
                        }
                        toolbar={
                          Object {
                            "topRight": Array [
                              Object {
                                "buttons": Array [
                                  Object {
                                    "actionId": "menuItem0",
                                    "hint": "Изменить видимость фильтров",
                                    "icon": "fa fa-filter",
                                    "id": "menuItem0",
                                  },
                                  Object {
                                    "dropdownSrc": "ToggleColumn",
                                    "hint": "Изменить видимость колонок",
                                    "icon": "fa fa-table",
                                    "id": "menuItem1",
                                  },
                                  Object {
                                    "actionId": "menuItem2",
                                    "hint": "Обновить данные",
                                    "icon": "fa fa-refresh",
                                    "id": "menuItem2",
                                  },
                                  Object {
                                    "dropdownSrc": "ChangeSize",
                                    "hint": "Изменить размер",
                                    "icon": "fa fa-bars",
                                    "id": "menuItem3",
                                  },
                                  Object {
                                    "actionId": "exportModal",
                                    "hint": "Экспортировать данные",
                                    "icon": "fa fa-download",
                                    "id": "menuItem4",
                                  },
                                ],
                                "id": "topRight0",
                              },
                            ],
                          }
                        }
                      />
                    </div>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;

exports[`Storyshots Виджеты/Таблица Поиск при изменений поля 1`] = `
<div
  style={
    Object {
      "padding": "2rem",
    }
  }
>
  <nav
    aria-label="breadcrumb"
  >
    <ol
      className="breadcrumb"
    >
      <li
        className="breadcrumb-item active"
      >
        Виджеты
      </li>
      <li
        className="breadcrumb-item active"
      >
        Таблица
      </li>
      <li
        className="breadcrumb-item active"
      >
        Поиск при изменений поля
      </li>
    </ol>
  </nav>
  <Card
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "column",
      }
    }
    tag="div"
  >
    <CardBody
      style={
        Object {
          "flexBasis": "auto",
          "flexGrow": 1,
          "minWidth": "90%",
        }
      }
      tag="div"
    >
      <IntlProvider
        locale="ru"
        messages={Object {}}
      >
        <Provider
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <withContext(SecurityProvider)
            authProvider={[Function]}
            redirectPath="/login"
          >
            <FactoryProvider
              config={
                Object {
                  "actions": Object {
                    "dummyImpl": [Function],
                    "exportTable": [Function],
                    "link": [Function],
                    "perform": [Function],
                  },
                  "cells": Object {
                    "BadgeCell": [Function],
                    "ButtonsCell": [Function],
                    "CheckboxCell": [Function],
                    "CollapsedCell": [Function],
                    "EditableCell": [Function],
                    "IconCell": [Function],
                    "ImageCell": [Function],
                    "LinkCell": [Function],
                    "ProgressBarCell": [Function],
                    "TextCell": [Function],
                  },
                  "controls": Object {
                    "AutoComplete": [Function],
                    "ButtonUploader": [Function],
                    "Checkbox": [Function],
                    "CheckboxGroup": [Function],
                    "CodeEditor": [Function],
                    "DateInterval": [Function],
                    "DatePicker": [Function],
                    "DropZone": [Function],
                    "Html": [Function],
                    "InputHidden": [Function],
                    "InputMask": [Function],
                    "InputMoney": [Function],
                    "InputNumber": [Function],
                    "InputSelect": [Function],
                    "InputSelectTree": [Function],
                    "InputText": [Function],
                    "N2OSelect": [Function],
                    "OutputText": [Function],
                    "PasswordInput": [Function],
                    "Pills": [Function],
                    "RadioGroup": [Function],
                    "Rating": [Function],
                    "Select": [Function],
                    "Slider": [Function],
                    "Switch": [Function],
                    "TextArea": [Function],
                    "TextEditor": [Function],
                  },
                  "fields": Object {
                    "FilterButtonsField": [Function],
                    "RangeField": [Function],
                    "StandardField": [Function],
                    "TextField": [Function],
                  },
                  "fieldsets": Object {
                    "CollapseFieldset": [Function],
                    "LineFieldset": [Function],
                    "StandardFieldset": [Function],
                    "TitleFieldset": [Function],
                  },
                  "headers": Object {
                    "TextTableHeader": [Function],
                  },
                  "layouts": Object {
                    "LeftRightLayout": [Function],
                    "LeftTopBottomLayout": [Function],
                    "SingleLayout": [Function],
                    "TopBottomLayout": [Function],
                  },
                  "regions": Object {
                    "ListRegion": [Function],
                    "NoneRegion": [Function],
                    "PanelRegion": [Function],
                    "TabsRegion": [Function],
                  },
                  "snippets": Object {
                    "Alert": [Function],
                    "Collapse": [Function],
                    "Icon": [Function],
                    "Panel": [Function],
                    "Paragraph": [Function],
                    "PopoverConfirm": [Function],
                    "Spinner": [Function],
                    "Text": [Function],
                    "Title": [Function],
                    "Wireframe": [Function],
                  },
                  "widgets": Object {
                    "AdvancedTableWidget": [Function],
                    "ChartWidget": [Function],
                    "EditForm": [Function],
                    "FormWidget": [Function],
                    "HtmlWidget": [Function],
                    "ListWidget": [Function],
                    "TableWidget": [Function],
                    "TreeWidget": [Function],
                    "WireframeWidget": [Function],
                  },
                }
              }
              securityBlackList={Array []}
            >
              <Connect(ConnectedRouter)
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "zybh0s",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "zybh0s",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
              >
                <div>
                  <Story
                    PropTable={[Function]}
                    components={
                      Object {
                        "a": [Function],
                        "code": [Function],
                        "h1": [Function],
                        "h2": [Function],
                        "h3": [Function],
                        "h4": [Function],
                        "h5": [Function],
                        "h6": [Function],
                        "li": [Function],
                        "p": [Function],
                        "ul": [Function],
                      }
                    }
                    context={
                      Object {
                        "hooks": HooksContext {
                          "currentContext": [Circular],
                          "currentDecoratorName": null,
                          "currentEffects": Array [],
                          "currentHooks": Array [],
                          "currentPhase": "NONE",
                          "hasUpdates": false,
                          "hookListsMap": WeakMap {},
                          "mountedDecorators": Set {
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          },
                          "nextHookIndex": 0,
                          "prevEffects": Array [],
                          "prevMountedDecorators": Set {},
                          "renderListener": [Function],
                        },
                        "id": "виджеты-таблица--поиск-при-изменений-поля",
                        "kind": "Виджеты/Таблица",
                        "name": "Поиск при изменений поля",
                        "parameters": Object {
                          "fileName": "C:\\\\Users\\\\sliskov\\\\Projects\\\\n2o-new\\\\frontend\\\\n2o\\\\src\\\\components\\\\widgets\\\\WidgetFilters.story.js",
                          "framework": "react",
                          "options": Object {
                            "hierarchyRootSeparator": "|",
                            "hierarchySeparator": /\\\\/\\|\\\\\\./,
                          },
                        },
                        "story": "Поиск при изменений поля",
                      }
                    }
                    excludedPropTypes={Array []}
                    info=""
                    maxPropArrayLength={3}
                    maxPropObjectKeys={3}
                    maxPropStringLength={50}
                    maxPropsIntoLine={3}
                    propTableCompare={[Function]}
                    propTables={Array []}
                    propTablesExclude={Array []}
                    showHeader={true}
                    showInline={true}
                    showSource={false}
                    styles={[Function]}
                  >
                    <div>
                      <Factory
                        actions={
                          Object {
                            "exportModal": Object {
                              "options": Object {
                                "payload": Object {
                                  "actions": Object {
                                    "destroyModal": Object {
                                      "options": Object {
                                        "type": "n2o/modals/DESTROY",
                                      },
                                      "src": "perform",
                                    },
                                    "export": Object {
                                      "notification": Object {
                                        "severity": "danger",
                                        "text": "Это сообщение будет отображаться 10 секунд",
                                        "timeout": 10000,
                                      },
                                      "options": Object {
                                        "widgetId": "Page_Table",
                                      },
                                      "redirectTo": "/test",
                                      "src": "exportTable",
                                    },
                                  },
                                  "closeButton": false,
                                  "name": "test2",
                                  "size": "sm",
                                  "src": "exportModal",
                                  "title": "Экспортровать",
                                  "toolbar": Array [
                                    Object {
                                      "buttons": Array [
                                        Object {
                                          "actionId": "export",
                                          "className": "btn-primary",
                                          "icon": "fa fa-download",
                                          "id": "export",
                                          "title": "Загрузить",
                                        },
                                        Object {
                                          "actionId": "destroyModal",
                                          "id": "cancelExport",
                                          "title": "Отменить",
                                        },
                                      ],
                                    },
                                  ],
                                  "type": "n2o/modals/INSERT",
                                  "visible": true,
                                  "widgetId": "Page_Table",
                                },
                                "type": "n2o/modals/INSERT",
                              },
                              "src": "perform",
                              "widgetId": "Page_Table",
                            },
                            "menuItem0": Object {
                              "options": Object {
                                "payload": Object {
                                  "widgetId": "Page_Table",
                                },
                                "type": "n2o/widgets/TOGGLE_FILTER_VISIBILITY",
                              },
                              "src": "perform",
                            },
                            "menuItem2": Object {
                              "options": Object {
                                "payload": Object {
                                  "widgetId": "Page_Table",
                                },
                                "type": "n2o/widgets/DATA_REQUEST",
                              },
                              "src": "perform",
                            },
                          }
                        }
                        className="n2o"
                        dataProvider={
                          Object {
                            "pathMapping": Object {},
                            "queryMapping": Object {
                              "filter.name": Object {
                                "link": "models.filter['Page_Table'].name",
                              },
                              "filter.surname": Object {
                                "link": "models.filter['Page_Table'].surname",
                              },
                            },
                            "url": "n2o/data/test",
                          }
                        }
                        filter={
                          Object {
                            "blackResetList": Array [
                              "name",
                            ],
                            "filterButtonId": "filter",
                            "filterFieldsets": Array [
                              Object {
                                "rows": Array [
                                  Object {
                                    "cols": Array [
                                      Object {
                                        "fields": Array [
                                          Object {
                                            "control": Object {
                                              "src": "InputText",
                                            },
                                            "id": "surname",
                                            "label": "Фамилия",
                                          },
                                        ],
                                      },
                                    ],
                                  },
                                ],
                                "src": "StandardFieldset",
                              },
                            ],
                            "filterPlace": "top",
                            "hideButtons": true,
                            "searchOnChange": true,
                          }
                        }
                        id="Page_Table"
                        level="widgets"
                        paging={
                          Object {
                            "next": true,
                            "prev": true,
                            "size": 10,
                          }
                        }
                        src="TableWidget"
                        table={
                          Object {
                            "autoFocus": false,
                            "cells": Array [
                              Object {
                                "id": "name",
                                "src": "TextCell",
                              },
                              Object {
                                "icon": "fa fa-plus",
                                "id": "surname",
                                "src": "IconCell",
                                "textPlace": "right",
                                "type": "iconAndText",
                              },
                              Object {
                                "id": "birthday",
                                "src": "TextCell",
                              },
                            ],
                            "fetchOnInit": true,
                            "hasFocus": true,
                            "hasSelect": true,
                            "headers": Array [
                              Object {
                                "id": "name",
                                "label": "Имя",
                                "sortable": false,
                                "src": "TextTableHeader",
                                "width": "50",
                              },
                              Object {
                                "id": "surname",
                                "label": "Фамилия",
                                "sortable": true,
                                "src": "TextTableHeader",
                              },
                              Object {
                                "id": "birthday",
                                "label": "Дата рождения",
                                "sortable": true,
                                "src": "TextTableHeader",
                              },
                            ],
                            "rowClass": "\`gender.id == 1 ? 'red' : gender.id == 2 ? 'blue' : gender.id == 3 ? 'white' : 'green'\`",
                            "size": 10,
                            "sorting": Object {
                              "birthday": "ASC",
                            },
                            "style": Object {},
                          }
                        }
                        toolbar={
                          Object {
                            "topRight": Array [
                              Object {
                                "buttons": Array [
                                  Object {
                                    "actionId": "menuItem0",
                                    "hint": "Изменить видимость фильтров",
                                    "icon": "fa fa-filter",
                                    "id": "menuItem0",
                                  },
                                  Object {
                                    "dropdownSrc": "ToggleColumn",
                                    "hint": "Изменить видимость колонок",
                                    "icon": "fa fa-table",
                                    "id": "menuItem1",
                                  },
                                  Object {
                                    "actionId": "menuItem2",
                                    "hint": "Обновить данные",
                                    "icon": "fa fa-refresh",
                                    "id": "menuItem2",
                                  },
                                  Object {
                                    "dropdownSrc": "ChangeSize",
                                    "hint": "Изменить размер",
                                    "icon": "fa fa-bars",
                                    "id": "menuItem3",
                                  },
                                  Object {
                                    "actionId": "exportModal",
                                    "hint": "Экспортировать данные",
                                    "icon": "fa fa-download",
                                    "id": "menuItem4",
                                  },
                                ],
                                "id": "topRight0",
                              },
                            ],
                          }
                        }
                      />
                    </div>
                  </Story>
                  <withContext(Connect(ModalPages)) />
                </div>
              </Connect(ConnectedRouter)>
            </FactoryProvider>
          </withContext(SecurityProvider)>
        </Provider>
      </IntlProvider>
    </CardBody>
  </Card>
</div>
`;
