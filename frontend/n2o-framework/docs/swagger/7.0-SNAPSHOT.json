{
  "swagger": "2.0",
  "info": {
    "description": "Документация по взаимодействию серверной и клиенткой части N2O.",
    "version": "${project.version}",
    "title": "N2O REST API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "n2o.i-novus.ru",
  "basePath": "/dev",
  "tags": [
    {
      "name": "page",
      "description": "Получение метаданных страницы"
    },
    {
      "name": "widget",
      "description": "Получение метаданных виджета"
    },
    {
      "name": "data",
      "description": "Работа с данными"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/page/{pageId}": {
      "get": {
        "tags": [
          "page"
        ],
        "summary": "Получение метаданных страницы",
        "description": "Возвращает json для базовой отрисовки страницы",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageId",
            "in": "path",
            "description": "Уникальный идентификатор страницы",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный запрос",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "401": {
            "description": "Не авторизован"
          },
          "403": {
            "description": "Нет доступа"
          },
          "404": {
            "description": "Страница не найдена"
          },
          "500": {
            "description": "Ошибка при компиляции метаданных"
          }
        }
      }
    },
    "/page/{pageId}/container/{containerId}": {
      "get": {
        "tags": [
          "widget"
        ],
        "summary": "Получение метаданных виджета",
        "description": "Возвращает json для отрисовки виджета",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageId",
            "in": "path",
            "description": "Уникальный идентификатор страницы",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerId",
            "in": "path",
            "description": "Идентификатор контейнера на странице",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный запрос",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          "401": {
            "description": "Не авторизован"
          },
          "403": {
            "description": "Нет доступа"
          },
          "404": {
            "description": "Страница не найдена"
          },
          "500": {
            "description": "Ошибка при компиляции метаданных"
          }
        }
      }
    },
    "/data": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Получение данных виджета",
        "description": "Возвращает json со списком данных",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageId",
            "in": "query",
            "description": "Уникальный идентификатор страницы",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerId",
            "in": "query",
            "description": "Идентификатор контейнера на странице",
            "required": true,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Количество записей",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы. Для расчета limit/offset",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.*",
            "in": "query",
            "description": "Параметр фильтра. Пример: filter.id=1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный запрос",
            "schema": {
              "properties": {
                "count": {
                  "type": "integer",
                  "example": 2
                },
                "list": {
                  "type": "array",
                  "example": [
                    {
                      "id": 1,
                      "name": "Иван"
                    },
                    {
                      "id": 2,
                      "name": "Анастасия"
                    }
                  ]
                },
                "page": {
                  "type": "integer",
                  "example": 1
                },
                "size": {
                  "type": "integer",
                  "example": 10
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован"
          },
          "403": {
            "description": "Нет доступа"
          },
          "404": {
            "description": "Страница не найдена"
          },
          "500": {
            "description": "Ошибка при компиляции метаданных"
          }
        }
      },
      "post": {
        "tags": [
          "data"
        ],
        "summary": "Выполнение действия",
        "description": "Отправляет данные виджета для выполнения действия на сервере",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actionId",
            "in": "query",
            "description": "Идентификатор действия",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageId",
            "in": "query",
            "description": "Уникальный идентификатор страницы",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerId",
            "in": "query",
            "description": "Идентификатор контейнера на странице",
            "required": true,
            "type": "string"
          },
          {
            "name": "*.*",
            "in": "query",
            "description": "Параметр для действия. Пример: {id: 1, name: 'Роза'}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный запрос",
            "schema": {
              "properties": {
                "data": {
                  "type": "object",
                  "example": {
                    "id": 1,
                    "name": "Роза"
                  }
                },
                "message": {
                  "type": "array",
                  "example": [
                    {
                      "severity": "success",
                      "text": "Данные сохранены"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Не авторизован"
          },
          "403": {
            "description": "Нет доступа"
          },
          "404": {
            "description": "Страница не найдена"
          },
          "500": {
            "description": "Ошибка при компиляции метаданных"
          }
        }
      }
    }
  },
  "definitions": {
    "Container": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "patients",
          "description": "ID контейнера на странице"
        },
        "pageId": {
          "type": "string",
          "example": "ProtoPage",
          "description": "Уникальный ID страницы"
        },
        "opened": {
          "type": "boolean",
          "example": true,
          "description": "Состояние контейнера в момент инициализации.  Нужен для таких регионов как Tabs, List и др."
        },
        "fetchOnInit": {
          "type": "boolean",
          "example": true,
          "description": "Делать запрос за данными при инициализации или нет"
        },
        "icon": {
          "type": "string",
          "example": "fa fa-plus",
          "description": "Иконка контейнера"
        },
        "dependency": {
          "type": "object",
          "description": "Объект с зависимостями от этого контейнера",
          "properties": {
            "dependentContainers": {
              "type": "array",
              "description": "Список контейнеров зависимые от этого",
              "items": {
                "type": "object",
                "properties": {
                  "containerId": {
                    "type": "string",
                    "example": "patient"
                  },
                  "pageId": {
                    "type": "string",
                    "example": "ProtoPage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Region": {
      "type": "object",
      "properties": {
        "place": {
          "type": "string",
          "example": "top",
          "description": "Место в Layout под этот регион"
        },
        "src": {
          "type": "string",
          "example": "Tabs",
          "description": "Псевдоним компонента Region"
        },
        "containers": {
          "type": "array",
          "description": "Список контейнеров этого региона",
          "items": {
            "$ref": "#/definitions/Container"
          }
        }
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "ProtoPage",
          "description": "ID страницы"
        },
        "src": {
          "type": "string",
          "example": "TopBottom",
          "description": "Псевдоним компонента PageLayout"
        },
        "regions": {
          "type": "object",
          "description": "Список регионов",
          "additionalProperties": {
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "Widget": {
      "type": "object",
      "properties": {
        "actionMenu": {
          "type": "object",
          "description": "Список кнопок Actions в виджете",
          "properties": {
            "place": {
              "type": "array",
              "description": "вместо ключа place испольуем имя где расположить action group (topLeft, bottomRight и др)",
              "items": {
                "type": "array",
                "description": "Группы кнопок (action-group)",
                "items": {
                  "type": "object",
                  "properties": {
                    "actionId": {
                      "type": "string",
                      "example": "read",
                      "description": "ID кнопки"
                    },
                    "context": {
                      "type": "boolean",
                      "example": true,
                      "description": "Зависима ли кнопка от контекста"
                    },
                    "eventId": {
                      "type": "string",
                      "example": "update",
                      "description": "Ссылка на event в виджете"
                    },
                    "label": {
                      "type": "string",
                      "example": "Изменить",
                      "description": "Label кнопки"
                    }
                  }
                }
              }
            }
          }
        },
        "filterDefaultValues": {
          "type": "object",
          "description": "Список фильтров по умолчанию",
          "additionalProperties": {
            "type": "string",
            "example": "{single->ProtoPage.patients:id}",
            "description": "< * >- ключ фильтра"
          },
          "example": {
            "id": "{single->ProtoPage.patients:id}"
          }
        },
        "events": {
          "type": "object",
          "description": "Массив эвентов виджета. Модели эвентов описаны ниже.",
          "additionalProperties": {
            "$ref": "#/definitions/Event"
          }
        },
        "id": {
          "type": "string",
          "example": "ProtoPage.patients",
          "description": "ID виджета"
        },
        "size": {
          "type": "integer",
          "example": 15,
          "description": "Размер модели при выборке"
        },
        "src": {
          "type": "string",
          "example": "Table",
          "description": "Псевдоним компонента Widget"
        }
      }
    },
    "Table": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Widget"
        },
        {
          "type": "object",
          "properties": {
            "cells": {
              "type": "array",
              "description": "Список ячеек таблицы",
              "items": {
                "$ref": "#/definitions/Cell"
              }
            },
            "headers": {
              "type": "array",
              "description": "Список заголовков таблицы",
              "items": {
                "$ref": "#/definitions/TableHeader"
              }
            },
            "hasFocus": {
              "type": "boolean",
              "example": true,
              "description": "Нужен ли фокус на этом компоненте (влияет на работы с клавиатурой)"
            },
            "hasSelect": {
              "type": "boolean",
              "example": true,
              "description": "Можно ли выбирать запись"
            }
          }
        }
      ]
    },
    "Form": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Widget"
        },
        {
          "type": "object",
          "properties": {
            "fieldSetContainers": {
              "type": "array",
              "description": "Массив филдсетов",
              "items": {
                "type": "object",
                "properties": {
                  "blocks": {
                    "type": "array",
                    "description": "Массив блоков филдсета",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "type": "array",
                          "description": "Массив филдов в блоке филдсета. Модели филдов описаны ниже.",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/definitions/Field"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "update_ca1",
          "description": "ID эвента"
        },
        "src": {
          "type": "string",
          "example": "n2o/controls/action/states/invoke.state",
          "description": "Путь до экшена"
        }
      }
    },
    "ShowModal": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Event"
        },
        {
          "type": "object",
          "properties": {
            "pageId": {
              "type": "string",
              "example": "ProtoPage.patients",
              "description": "Страница которую нужно открыть в модалке"
            }
          }
        }
      ]
    },
    "Invoke": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Event"
        },
        {
          "type": "object",
          "properties": {
            "actionId": {
              "type": "string",
              "example": "update",
              "description": "ID экшена в объекте"
            },
            "objectId": {
              "type": "string",
              "example": "individual",
              "description": "ID объекта"
            }
          }
        }
      ]
    },
    "Field": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "name",
          "description": "ID филда"
        },
        "label": {
          "type": "string",
          "example": "Имя",
          "description": "Label филда"
        },
        "readonly": {
          "type": "boolean",
          "example": true,
          "description": "Readonly режим поля"
        },
        "placeholder": {
          "type": "string",
          "example": "Введите имя",
          "description": "placeholder поля"
        },
        "cssClass": {
          "type": "string",
          "example": "n2o-control-8 n2o-label-2",
          "description": "css класс который вешается на form-group"
        },
        "labelStyle": {
          "type": "object",
          "description": "объект стиля для label"
        },
        "controlStyle": {
          "type": "object",
          "description": "объект стиля для control"
        },
        "src": {
          "type": "string",
          "example": "Input",
          "description": "Псевдоним компонента Control"
        }
      }
    },
    "Input": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Field"
        },
        {
          "type": "object",
          "properties": {
            "length": {
              "type": "string",
              "example": 10,
              "description": "Максимальная длина"
            }
          }
        }
      ]
    },
    "Checkbox": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Field"
        },
        {
          "type": "object",
          "properties": {
            "compileLabel": {
              "type": "string",
              "example": "VIP",
              "description": "Лейбл чекбокса"
            }
          }
        }
      ]
    },
    "Cell": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "name",
          "description": "ID колонки"
        },
        "src": {
          "type": "string",
          "example": "TextCell",
          "description": "Псевдоним компонента Cell"
        },
        "options": {
          "type": "object",
          "description": "Опции конкретной реализации Cell"
        }
      }
    },
    "TextCell": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Cell"
        },
        {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "properties": {
                "fieldKey": {
                  "type": "string",
                  "description": "Ключ поля из модели"
                }
              }
            }
          }
        }
      ]
    },
    "TableHeader": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "name",
          "description": "ID колонки"
        },
        "sortable": {
          "type": "boolean",
          "example": true,
          "description": "Сортируема ли колонка"
        },
        "sorting": {
          "type": "string",
          "example": "ASC",
          "description": "Значение сортировки по умолчанию (NONE, ASC, DESC)"
        },
        "src": {
          "type": "string",
          "example": "TextHeaderCell",
          "description": "Псевдоним компонента TableHeader"
        },
        "options": {
          "type": "object",
          "description": "Опции конкретной реализации TableHeader"
        }
      }
    },
    "TextTableHeader": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TableHeader"
        },
        {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "example": "Имя",
                  "description": "Лейбл колонки"
                }
              }
            }
          }
        }
      ]
    }
  },
  "externalDocs": {
    "description": "Документация",
    "url": "https://wiki.i-novus.ru/display/N2O/N2O"
  }
}