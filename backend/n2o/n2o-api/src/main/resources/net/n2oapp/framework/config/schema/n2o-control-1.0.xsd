<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:ctr="http://n2oapp.net/framework/config/schema/base/control-base-1.0"
           xmlns:query_3.0="http://n2oapp.net/framework/config/schema/query-3.0"
           xmlns:wgt="http://n2oapp.net/framework/config/schema/n2o-widget-3.0"
           xmlns:dmn="http://n2oapp.net/framework/config/schema/base/domain-base-1.0"
           xmlns:event="http://n2oapp.net/framework/config/schema/n2o-event-1.0"
           targetNamespace="http://n2oapp.net/framework/config/schema/n2o-control-1.0">


    <xs:element name="hidden" type="controlHiddenDefinition"/>
    <xs:element name="debug" type="controlDebugDefinition"/>
    <xs:element name="input-text" type="controlInputTextDefinition"/>
    <xs:element name="password" type="controlPasswordDefinition"/>
    <xs:element name="output-text" type="controlOutputTextDefinition"/>
    <xs:element name="masked-input" type="controlMaskedInputDefinition"/>
    <xs:element name="checkbox" type="controlSimpleFieldDefinition"/>
    <xs:element name="date-time" type="controlDateDefinition"/>
    <xs:element name="date-interval" type="controlDateIntervalDefinition"/>
    <xs:element name="text-area" type="controlTextArea"/>
    <xs:element name="text-editor" type="controlTextEditor"/>
    <xs:element name="html" type="controlHtml"/>
    <xs:element name="code-editor" type="controlCodeEditor"/>
    <xs:element name="custom" type="controlCustom"/>
    <xs:element name="classifier" type="controlClassifierDefinition"/>
    <xs:element name="checkbox-group" type="controlOptionasListInlineDefinition"/>
    <xs:element name="radio-group" type="controlOptionasListInlineDefinition"/>
    <xs:element name="select" type="controlSelectDefinition"/>
    <xs:element name="buttons" type="buttonsDefinition"/>
    <xs:element name="select-tree" type="selectTreeDefinition"/>
    <xs:element name="input-select-tree" type="inputSelectTreeDefinition"/>
    <xs:element name="file-upload" type="controlFileUploadDefinition"/>
    <xs:element name="checkbox-grid" type="controlCheckboxGridDefinition"/>
    <xs:element name="code-merge" type="controlCodeMergeDefinition"/>
    <xs:element name="group-classifier" type="groupClassifierDefinition"/>
    <xs:element name="edit-grid" type="editGridDefinition"/>
    <xs:element name="input-select" type="controlInputSelectDefinition"/>
    <xs:element name="time" type="timeDefinition"/>
    <xs:element name="time-interval" type="controlTimeIntervalDefinition"/>
    <xs:element name="input-interval" type="controlInputIntervalDefinition"/>
    <xs:element name="button" type="controlButtonDefinition"/>

    <!--скрытый элемент управления на форме-->
    <xs:complexType name="controlHiddenDefinition">
        <xs:complexContent>
            <xs:extension base="controlSimpleFieldDefinition">
                <xs:sequence>
                    <xs:element name="update-model" type="updateModelDef" maxOccurs="1" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--элемент для отладки на форме-->
    <xs:complexType name="controlDebugDefinition">
        <xs:attribute name="id" type="xs:string" use="optional"/>
        <xs:attribute name="label" type="xs:string" use="optional"/>
    </xs:complexType>

    <!--элемент даты-->
    <xs:complexType name="controlDateDefinition">
        <xs:complexContent>
            <xs:extension base="controlSimpleFieldDefinition">
                <xs:attribute name="format" use="optional" type="dataFormatEnum"/>
                <xs:attribute name="default-time" use="optional" type="defaultTimeEnum"/>
                <xs:attribute name="max" use="optional" type="xs:string"/>
                <xs:attribute name="min" use="optional" type="xs:string"/>
                <xs:attribute name="utc" use="optional" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--поле ввода-->
    <xs:complexType name="controlInputTextDefinition">
        <xs:complexContent>
            <xs:extension base="controlSimpleFieldDefinition">
                <!--максимальное количество символов-->

                <xs:attribute name="length" type="xs:integer" use="optional"/>
                <xs:attribute name="min" type="xs:integer" use="optional"/>
                <xs:attribute name="max" type="xs:integer" use="optional"/>
                <xs:attribute name="step" type="xs:integer" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--поле вывода-->
    <xs:complexType name="controlOutputTextDefinition">
        <xs:complexContent>
            <xs:extension base="controlSimpleFieldDefinition">
                <xs:attribute name="icon" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Иконка.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="type" type="iconType" use="optional">
                    <xs:annotation>
                        <xs:documentation>С текстом или без.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="position" type="positionType" use="optional">
                    <xs:annotation>
                        <xs:documentation>Расположение.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- поле ввода пароля -->
    <xs:complexType name="controlPasswordDefinition">
        <xs:complexContent>
            <xs:extension base="controlSimpleFieldDefinition">
                <xs:attribute name="length" type="xs:integer" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="timeDefinition">
        <xs:complexContent>
            <xs:extension base="controlSimpleFieldDefinition"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="simpleFieldsValidation">
        <xs:sequence>
            <xs:element name="validation">
                <xs:complexType>
                    <xs:attribute name="ref-id" use="required"/>
                    <xs:attribute name="side" type="validationSidesDef" use="optional"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="validation-message-display">
        <xs:union memberTypes="xs:string">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="bubble"/>
                    <xs:enumeration value="text"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="validation-message-position">
        <xs:union memberTypes="xs:string">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="right"/>
                    <xs:enumeration value="bottom"/>
                    <xs:enumeration value="top"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <!--маскированное поле ввода-->
    <xs:complexType name="controlMaskedInputDefinition">
        <xs:complexContent>
            <xs:extension base="controlSimpleFieldDefinition">
                <!--максимальное количество символов-->
                <xs:attribute name="mask" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--code-editor-->
    <xs:complexType name="controlCodeEditor">
        <xs:complexContent>
            <xs:extension base="controlSimpleFieldDefinition">
                <xs:attribute name="rows" type="xs:positiveInteger" use="optional"/>
                <xs:attribute name="language" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="sql"/>
                            <xs:enumeration value="xml"/>
                            <xs:enumeration value="javascript"/>
                            <xs:enumeration value="groovy"/>
                            <xs:enumeration value="java"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--text-area-->
    <xs:complexType name="controlTextArea">
        <xs:complexContent>
            <xs:extension base="controlSimpleFieldDefinition">
                <xs:attribute name="rows" type="xs:positiveInteger" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--text-editor-->
    <xs:complexType name="controlTextEditor">
        <xs:complexContent>
            <xs:extension base="controlSimpleFieldDefinition">
                <xs:attribute name="height" type="xs:string" use="optional"/>
                <!-- путь к файлу конфигураций (см. n2o/controls/text.editor/lib/configurator/index.html) -->
                <xs:attribute name="config-url" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--html-->
    <xs:complexType name="controlHtml">
        <xs:annotation>
            <xs:documentation>
                Компонент html
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="controlSimpleFieldDefinition">
                <xs:attribute name="height" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--выбор из справочника-->
    <xs:complexType name="controlClassifierDefinition">
        <xs:complexContent>
            <xs:extension base="controlListClassifierDefinition">
                <xs:sequence>
                    <xs:element name="show-modal" type="classifierShowModalDefinition" maxOccurs="1" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="search-as-you-type" type="xs:boolean" use="optional"/>
                <xs:attribute name="word-wrap" type="xs:boolean" use="optional"/>
                <xs:attribute name="popup-scaling" type="popupScalingEnum" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--множественный выбор из справочника-->
    <xs:complexType name="controlMultiClassifierDefinition">
        <xs:complexContent>
            <xs:extension base="controlListClassifierDefinition">
                <xs:attribute name="search-as-you-type" type="xs:boolean" use="optional"/>
                <xs:attribute name="popup-scaling" type="popupScalingEnum" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--определение модального окна для классификатора-->
    <xs:complexType name="classifierShowModalDefinition">
        <xs:sequence>
            <xs:element name="pre-filters" maxOccurs="1" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="pre-filter" type="controlPreFilterDefinitionWithResetMode" minOccurs="1"
                                    maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <!--идентификатор макета, который отобразится в модальном окне-->
        <xs:attribute name="page-id" type="xs:string" use="required"/>
        <xs:attribute name="container-id" type="xs:string" use="optional"/>
        <xs:attribute name="result-container-id" type="xs:string" use="required"/>
        <!--идентификатор поля выборки (та выборка, на которой стоит текущая запись)-->
        <!--, значение которого передастся в выборку результирующей панели открываемой страницы-->
        <!--по умолчанию 'id'-->
        <xs:attribute name="master-field-id" type="xs:string" use="optional"/>
        <!--идентификатор поля выборки (та выборка, которая является результирующей панелью в открываемом модальном окне страницы)-->
        <!--, фильтруемое по значению master-field-id-->
        <!--по умолчанию 'id'-->
        <xs:attribute name="detail-field-id" type="xs:string" use="optional"/>
        <!--идентификатор поля выборки (та выборка, которая является результирующей панелью в макете), значение которого будет являться ключем элемента списка-->
        <!--по умолчанию 'id'-->
        <xs:attribute name="value-field-id" type="xs:string" use="optional"/>
        <!--идентификатор поля выборки (та выборка, которая является результирующей панелью в макете), значение которого будет являться отображаемым значением элемента списка-->
        <!--по умолчанию 'displayName'-->
        <xs:attribute name="label-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="page-name" type="xs:string" use="optional"/>
        <xs:attribute name="width" type="xs:string" use="optional"/>
        <xs:attribute name="min-width" type="xs:string" use="optional"/>
        <xs:attribute name="max-width" type="xs:string" use="optional"/>
    </xs:complexType>

    <!--определение предустановленного фильтра для элемента управления списками-->
    <xs:complexType name="controlPreFilterDefinition">
        <xs:annotation>
            <xs:documentation source="https://wiki.i-novus.ru/display/N2O/N2O.Documentation.Dependency"/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="value" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="field-id" type="xs:string" use="required"/>
        <xs:attribute name="ref" type="xs:string" use="optional"/>
        <xs:attribute name="value" type="xs:string" use="optional"/>
        <xs:attribute name="type" type="query_3.0:searchTypeEnumeration" use="optional"/>
    </xs:complexType>

    <!--определение предустановленного фильтра для элемента управления списками-->
    <xs:complexType name="updateModelPreFilterDefinition">
        <xs:complexContent>
            <xs:extension base="controlPreFilterDefinition">
                <xs:attribute name="on-change" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="controlPreFilterDefinitionWithResetMode">
        <xs:complexContent>
            <xs:extension base="controlPreFilterDefinition">
                <xs:attribute name="reset-mode" type="resetModeEnumeration" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="resetModeEnumeration">
        <xs:restriction base="xs:string">
            <xs:enumeration value="on"/>
            <xs:enumeration value="off"/>
        </xs:restriction>
    </xs:simpleType>


    <xs:complexType name="controlPreFilterWithoutRefDefinition">
        <xs:annotation>
            <xs:documentation source="https://wiki.i-novus.ru/display/N2O/N2O.Documentation.Dependency"/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="value" minOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="field-id" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string" use="optional"/>
        <xs:attribute name="type" type="query_3.0:searchTypeEnumeration" use="optional"/>
    </xs:complexType>

    <!--определение элемента управления списками на форме-->
    <xs:complexType name="controlListBaseDefinition" abstract="true">
        <xs:complexContent>
            <xs:extension base="controlBaseDefinition">
                <!--возможные источники значений списка-->
                <!--возможен выбор только одного из источников значений списка-->
                <xs:sequence>
                    <xs:element name="default-model" type="defaultModelDefinition" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="update-model" type="updateModelMasterDetailDef" maxOccurs="1" minOccurs="0"/>
                </xs:sequence>
                <!--настройка кеша-->
                <xs:attribute name="cache" type="cacheEnum" use="optional"/>
                <!-- Количество записей в выпадающем списке (По умолчанию 30) -->
                <xs:attribute name="size" type="xs:integer" use="optional"/>
                <xs:attribute name="autoselect-alone" type="xs:boolean" use="optional"/>
                <xs:attribute name="autoselect-first" type="xs:boolean" use="optional"/>
                <xs:attribute name="search" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="controlListDefinition" abstract="true">
        <xs:complexContent>
            <xs:extension base="controlListBaseDefinition">
                <xs:sequence>
                    <xs:element name="query" type="controlListQueryDefinition" maxOccurs="1" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="controlListClassifierDefinition" abstract="true">
        <xs:complexContent>
            <xs:extension base="controlListBaseDefinition">
                <xs:sequence>
                    <xs:element name="query" type="controlListQueryClassifierDefinition" maxOccurs="1" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="cacheEnum">
        <xs:restriction>
            <xs:enumeration value="off"/>
            <xs:enumeration value="on"/>
        </xs:restriction>
    </xs:simpleType>

    <!--определение источника значений списка - выборки-->
    <xs:complexType name="controlListQueryDefinition">
        <xs:annotation>
            <xs:documentation source="https://wiki.i-novus.ru/display/N2O/N2O.Documentation.Control"/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="pre-filters" maxOccurs="1" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="pre-filter" type="controlPreFilterDefinitionWithResetMode" minOccurs="1"
                                    maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <!--идентификатор выборки, которая является источником значений списка-->
        <xs:attribute name="query-id" type="xs:string" use="required"/>
        <!--идентификатор поля выборки (та выборка, которая является источником значений списка), значение которого будет являться ключем элемента списка-->
        <!--по умолчанию 'id'-->
        <xs:attribute name="value-field-id" type="xs:string" use="optional"/>
        <!--идентификатор поля выборки (та выборка, которая является источником значений списка), значение которого будет являться отображаемым значением элемента списка-->
        <!--по умолчанию 'displayName'-->
        <xs:attribute name="label-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="search-field-id" type="xs:string" use="optional"/>
        <!--идентификатор поля выборки (та выборка, на которой основана текущая форма), значение которого передастся в выборку источника записей списка-->
        <xs:attribute name="master-field-id" type="xs:string" use="optional"/>
        <!--идентификатор поля выборки (та выборка, которая является источником значений списка), фильтруемое по значению master-field-id-->
        <!--по умолчанию 'parentId'-->
        <xs:attribute name="detail-field-id" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="controlListQueryClassifierDefinition">
        <xs:complexContent>
            <xs:extension base="controlListQueryDefinition">
                <xs:sequence>
                    <xs:element name="hover-info" type="controlHoverInfo" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="controlOptionasListInlineDefinition">
        <xs:complexContent>
            <xs:extension base="controlOptionsListDefinition">
                <xs:attribute name="inline" type="xs:boolean" use="optional"/>
                <xs:attribute name="type" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--определение элемента управления списками на форме + прошитые значения как альтернатива query -->
    <xs:complexType name="controlOptionsListDefinition" abstract="true">
        <xs:complexContent>
            <xs:extension base="controlListDefinition">
                <xs:sequence>
                    <xs:element name="options" maxOccurs="1" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="option" type="xs:string" maxOccurs="unbounded" minOccurs="0"/>
                            </xs:sequence>
                            <xs:attribute name="format" type="xs:string" use="optional"/>
                            <xs:attribute name="icon-field-id" type="xs:string" use="optional"/>
                            <xs:attribute name="image-field-id" type="xs:string" use="optional"/>
                            <xs:attribute name="group-field-id" type="xs:string" use="optional"/>
                            <xs:attribute name="value-field-id" type="xs:string" use="optional"/>
                            <xs:attribute name="label-field-id" type="xs:string" use="optional"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="placeholder" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="selectTreeDefinition">
        <xs:complexContent>
            <xs:extension base="controlBaseDefinition">
                <xs:sequence>
                    <xs:element name="grouping-nodes" type="groupingNodesDefinition"/>
                    <xs:element name="inheritance-nodes" type="inheritanceNodesDefinition"/>
                    <xs:element name="default-model" type="defaultModelDefinition" maxOccurs="1" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="ajax" type="xs:boolean"/>
                <xs:attribute name="search" type="xs:boolean" use="optional" default="false"/>
                <xs:attribute name="cache" type="cacheEnum" use="optional"/>
                <xs:attribute name="checkboxes" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="inputSelectTreeDefinition">
        <xs:complexContent>
            <xs:extension base="selectTreeDefinition">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="groupingNodesDefinition">
        <xs:complexContent>
            <xs:extension base="ctr:controlListQueryDefinition">
                <xs:sequence>
                    <xs:sequence>
                        <xs:element name="pre-filters" maxOccurs="1" minOccurs="0">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="pre-filter" type="controlPreFilterDefinition" minOccurs="1"
                                                maxOccurs="unbounded"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:element name="node" type="nodeDefinition" minOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="search-field-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="nodeDefinition">
        <xs:sequence>
            <xs:element name="node" type="nodeDefinition"/>
        </xs:sequence>
        <xs:attribute name="value-field-id" type="xs:string" use="required"/>
        <xs:attribute name="label-field-id" type="xs:string" use="required"/>
        <xs:attribute name="icon" type="xs:string" use="optional"/>
        <xs:attribute name="enabled" type="xs:boolean" use="optional"/>
    </xs:complexType>

    <xs:complexType name="inheritanceNodesDefinition">
        <xs:complexContent>
            <xs:extension base="ctr:controlListQueryDefinition">
                <xs:sequence>
                    <xs:element name="pre-filters" maxOccurs="1" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="pre-filter" type="controlPreFilterDefinition" minOccurs="1"
                                            maxOccurs="unbounded"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="parent-field-id" type="xs:string" use="required"/>
                <xs:attribute name="has-children-field-id" type="xs:string" use="optional"/>
                <xs:attribute name="icon-field-id" type="xs:string" use="optional"/>
                <xs:attribute name="search-field-id" type="xs:string" use="optional"/>
                <!--@deprecated <xs:attribute name="can-resolved-field-id" type="xs:string" use="optional"/>-->
                <xs:attribute name="enabled-field-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="buttonsDefinition">
        <xs:complexContent>
            <xs:extension base="controlOptionsListDefinition">
                <xs:attribute name="data-toggle" type="dataToggleEnum" use="required"/>
                <xs:attribute name="color-field-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="controlCheckboxGridDefinition">
        <xs:complexContent>
            <xs:extension base="controlOptionsListDefinition">
                <xs:sequence>
                    <xs:element name="columns" maxOccurs="1" minOccurs="1">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="column" type="checkboxGridColumnDefinition" maxOccurs="unbounded"
                                            minOccurs="1"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="checkboxGridColumnDefinition">
        <xs:attribute name="name" type="xs:string" use="optional"/>
        <xs:attribute name="column-field-id" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:simpleType name="dataToggleEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="buttons-radio"/>
            <xs:enumeration value="buttons-checkbox"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="editGridDefinition">
        <xs:complexContent>
            <xs:extension base="controlBaseDefinition">
                <xs:sequence>
                    <xs:element name="object-id" type="xs:string" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="columns" maxOccurs="1" minOccurs="1">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="column" type="editGridColumnDefinition" maxOccurs="unbounded"
                                            minOccurs="1"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="editGridColumnDefinition">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="column-field-id" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="tableColumnListDefinition">
        <xs:complexContent>
            <xs:extension base="wgt:tableColumnListDefinition">
                <xs:sequence>
                    <xs:element name="column" type="wgt:tableColumnDefinition" maxOccurs="unbounded" minOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <xs:complexType name="controlCustom">
        <xs:complexContent>
            <xs:extension base="controlSimpleFieldDefinition">
                <xs:attribute name="src" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="defaultModelDefinition">
        <xs:sequence>
            <xs:element name="value" minOccurs="1">
                <xs:complexType>
                    <xs:attribute name="field-id" use="required"/>
                    <xs:attribute name="domain" use="optional" type="dmn:domainType"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>


    <xs:complexType name="controlBaseDefinition">
        <xs:complexContent>
            <xs:extension base="ctr:controlFieldDefinition">
                <xs:sequence>
                    <xs:element name="set-value-expression" type="setValueExpDefinition" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="validations" type="simpleFieldsValidation" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="actions" type="actionsValidation" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="dependencies" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="enabling-condition" minOccurs="0" maxOccurs="1">
                                    <xs:complexType>
                                        <xs:attribute name="on"/>
                                    </xs:complexType>
                                </xs:element>
                                <xs:element name="required-condition" minOccurs="0" maxOccurs="1">
                                    <xs:complexType>
                                        <xs:attribute name="on"/>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="description" minOccurs="0" maxOccurs="1" type="xs:string"/>
                    <xs:element name="properties" type="propertyListDefinition" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="propertyListDefinition">
        <xs:sequence>
            <xs:element name="property" type="propertyDefinition" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="propertyDefinition">
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="controlSimpleFieldDefinition">
        <xs:complexContent>
            <xs:extension base="controlBaseDefinition">
                <!--значение по умолчанию-->
                <xs:attribute name="default-value" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="setValueExpDefinition">
        <xs:attribute name="on" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:simpleType name="validationSidesDef">
        <xs:restriction>
            <xs:enumeration value="client"/>
            <xs:enumeration value="server"/>
            <xs:enumeration value="client,server"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="validationTargetEnum">
        <xs:restriction>
            <xs:enumeration value="field"/>
            <xs:enumeration value="form"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="dataFormatEnum">
        <xs:union memberTypes="xs:string">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="DD.MM.YYYY"/>
                    <xs:enumeration value="DD.MM.YYYY HH:mm"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:simpleType name="defaultTimeEnum">
        <xs:union memberTypes="xs:string">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="now()"/>
                    <xs:enumeration value="00:00"/>
                    <xs:enumeration value="12:00"/>
                    <xs:enumeration value="23:59"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:complexType name="controlDateIntervalDefinition">
        <xs:complexContent>
            <xs:extension base="controlBaseDefinition">
                <xs:sequence>
                    <xs:element name="default-model" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="begin" use="optional"/>
                            <xs:attribute name="end" use="optional"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="popup-placement" type="popupPlacementEnum" use="optional"/>
                <xs:attribute name="format" use="optional" type="dataFormatEnum"/>
                <xs:attribute name="begin-default-time" type="defaultTimeEnum" use="optional"/>
                <xs:attribute name="end-default-time" type="defaultTimeEnum" use="optional"/>
                <xs:attribute name="utc" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="controlTimeIntervalDefinition">
        <xs:complexContent>
            <xs:extension base="controlBaseDefinition">
                <xs:sequence>
                    <xs:element name="default-model" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="begin" use="optional"/>
                            <xs:attribute name="end" use="optional"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="src" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="controlInputIntervalDefinition">
        <xs:complexContent>
            <xs:extension base="controlBaseDefinition">
                <xs:sequence>
                    <xs:element name="default-model" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:attribute name="begin" use="optional"/>
                            <xs:attribute name="end" use="optional"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="min" type="xs:integer" use="optional"/>
                <xs:attribute name="max" type="xs:integer" use="optional"/>
                <xs:attribute name="step" type="xs:integer" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="popupPlacementEnum">
        <xs:restriction>
            <xs:enumeration value="up,right"/>
            <xs:enumeration value="up,left"/>
            <xs:enumeration value="down,right"/>
            <!--<xs:enumeration value="down,left"/>-->
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="controlCodeMergeDefinition">
        <xs:complexContent>
            <xs:extension base="controlBaseDefinition">
                <xs:attribute name="merge-view" type="mergeViewEnum" use="required"/>
                <xs:attribute name="show-differences" type="xs:boolean" use="required"/>
                <xs:attribute name="connect-align" type="xs:boolean" use="required"/>
                <xs:attribute name="collapse-identical" type="xs:boolean" use="required"/>
                <xs:attribute name="allow-editing-originals" type="xs:boolean" use="required"/>
                <xs:attribute name="rows" type="xs:positiveInteger" use="required"/>
                <xs:attribute name="language" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="sql"/>
                            <xs:enumeration value="xml"/>
                            <xs:enumeration value="javascript"/>
                            <xs:enumeration value="groovy"/>
                            <xs:enumeration value="java"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="mergeViewEnum">
        <xs:restriction>
            <xs:enumeration value="three-way"/>
            <xs:enumeration value="two-way"/>
        </xs:restriction>
    </xs:simpleType>

    <!--action-links-->
    <xs:complexType name="actionsValidation">
        <xs:sequence>
            <xs:element name="button" type="buttonDefinition" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="inherited-default" use="optional" type="xs:boolean"/>
    </xs:complexType>
    <xs:complexType name="buttonDefinition">
        <xs:complexContent>
            <xs:extension base="linkDefinition">
                <xs:sequence>
                    <xs:element name="a" type="ctr:anchorDef" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="update-model" type="updateModelMasterDetailDef" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="on-click" type="onClickDefinition" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="dependencies" type="dependencyDef" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="set-value-expression" type="xs:string" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="id" use="optional"/>
                <xs:attribute name="label" use="optional"/>
                <xs:attribute name="icon" use="optional"/>
                <xs:attribute name="type" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="text"/>
                            <xs:enumeration value="icon"/>
                            <xs:enumeration value="textAndIcon"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="key" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="linkDefinition">
        <xs:sequence>
            <xs:element name="show-modal-form" type="showModalFormDefinition" minOccurs="0" maxOccurs="1"/>
            <xs:element name="show-modal" type="showModalOpenPageDefinition" minOccurs="0" maxOccurs="1"/>
            <xs:element name="open-page" type="showModalOpenPageDefinition" minOccurs="0" maxOccurs="1"/>
            <xs:element name="a" type="ctr:anchorDef" minOccurs="0" maxOccurs="1"/>
            <xs:element name="update-model" type="updateModelMasterDetailDef" minOccurs="0" maxOccurs="1"/>
            <xs:element name="on-click" type="onClickDefinition" minOccurs="0" maxOccurs="1"/>
            <xs:element name="dependencies" type="dependencyDef" minOccurs="0" maxOccurs="1"/>
            <xs:element name="set-value-expression" type="xs:string" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="label" use="required"/>
        <xs:attribute name="key" use="optional"/>
        <xs:attribute name="id" use="optional"/>
    </xs:complexType>
    <xs:complexType name="showModalOpenPageDefinition">
        <xs:complexContent>
            <xs:extension base="wgt:showModalOpenPageDefinition">
                <xs:sequence>
                    <xs:element name="pre-filters" maxOccurs="1" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="pre-filter" type="controlPreFilterDefinition"
                                            maxOccurs="unbounded"
                                            minOccurs="1"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="target-field-id" type="xs:string" use="optional"/>
                <xs:attribute name="value-field-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="showModalFormDefinition">
        <xs:sequence>
            <xs:element name="edit" type="editWithoutAfterSubmitDefinition"/>
            <xs:element name="pre-filters" maxOccurs="1" minOccurs="0">
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation source="https://wiki.i-novus.ru/display/N2O/N2O.Documentation.Dependency"/>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="pre-filter" type="wgt:showModalPreFilterDefinition" maxOccurs="unbounded"
                                    minOccurs="1"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="form-id" type="xs:string" use="required"/>
        <xs:attribute name="page-name" type="xs:string" use="optional"/>
        <xs:attribute name="refresh-on-close" type="xs:boolean" use="optional"/>
        <xs:attribute name="master-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="detail-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="width" type="xs:string" use="optional"/>
        <xs:attribute name="min-width" type="xs:string" use="optional"/>
        <xs:attribute name="max-width" type="xs:string" use="optional"/>
        <xs:attribute name="target-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="value-field-id" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:complexType name="customEventDefinition">
        <xs:complexContent>
            <xs:extension base="event:customDefinition">
                <xs:sequence>
                    <xs:element name="properties" type="propertyListDefinition" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--edit в кнопке show-modal-form-->
    <xs:complexType name="editWithoutAfterSubmitDefinition">
        <xs:complexContent>
            <xs:extension base="editDefinition">
                <xs:attribute name="focus-after-submit" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="editDefinition">
        <xs:sequence>
            <xs:element name="invoke-action" type="ctr:submitActionDefinition" minOccurs="0"/>
            <xs:element name="redirect" type="ctr:redirectDef" minOccurs="0"/>
            <xs:element name="a" type="ctr:anchorDef" minOccurs="0"/>
            <xs:element name="create-or-update" type="ctr:createOrUpdateActionDef" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="model" type="ctr:modelDefinition"/>
        <xs:attribute name="condition" type="xs:string"/>
        <xs:attribute name="form-submit-label" type="xs:string"/>
        <xs:attribute name="refresh-after-submit" type="xs:boolean" use="optional"/>
        <xs:attribute name="create-more" type="xs:boolean" use="optional"/>
    </xs:complexType>

    <xs:complexType name="updateModelDef">
        <xs:sequence>
            <xs:element name="pre-filters" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="pre-filter" type="updateModelPreFilterDefinition"
                                    maxOccurs="unbounded"
                                    minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

        </xs:sequence>
        <xs:attribute name="query-id" use="required"/>
        <xs:attribute name="value-field-id" use="optional"/>
    </xs:complexType>

    <xs:complexType name="updateModelMasterDetailDef">
        <xs:sequence>
            <xs:element name="pre-filters" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="pre-filter" type="updateModelPreFilterDefinition"
                                    maxOccurs="unbounded"
                                    minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

        </xs:sequence>
        <xs:attribute name="query-id" use="required"/>
        <xs:attribute name="target" type="targetType" use="optional"/>
        <xs:attribute name="value-field-id" use="optional"/>
        <xs:attribute name="target-field-id" use="optional"/>
        <xs:attribute name="master-field-id" use="required"/>
        <xs:attribute name="detail-field-id" use="required"/>
    </xs:complexType>

    <xs:simpleType name="targetType">
        <xs:restriction>
            <xs:enumeration value="form"/>
            <xs:enumeration value="field"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="dependencyDef">
        <xs:sequence>
            <xs:element name="enabling-condition" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:attribute name="on"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="visibility-condition" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:attribute name="on"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="onClickDefinition">
        <xs:sequence>
            <xs:element name="properties" type="propertyListDefinition" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="src" type="xs:string"/>
        <xs:attribute name="function-name" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="controlFileUploadDefinition">
        <xs:complexContent>
            <xs:extension base="controlBaseDefinition">
                <xs:attribute name="mode" type="fileModeEnum"/>
                <xs:attribute name="upload-url" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="fileTypesEnum">
        <xs:union memberTypes="xs:string">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="image/*"/>
                    <xs:enumeration value="video/*"/>
                    <xs:enumeration value=".doc,.docx,.docm,.pdf,.txt,.rtf,.odt"/>
                    <xs:enumeration value=".xls,.xlsx,.xlsm,.csv,.ods"/>
                    <xs:enumeration value=".xml,.xsd,.html,.htm,.xhtml,.css,.xcss,.js,.jsp"/>
                    <xs:enumeration value=".zip,.rar,.gzip,.gz,.7z,.arj,.jar,.war,.tar"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="fileModeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="single"/>
            <xs:enumeration value="multi"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="popupScalingEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="normal"/>
            <xs:enumeration value="nowrap"/>
            <xs:enumeration value="auto"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="controlHoverInfo">
        <xs:sequence>
            <xs:element name="element" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="label" type="xs:string" use="optional"/>
                    <xs:attribute name="field-id" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="src" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="controlInputSelectDefinition">
        <xs:complexContent>
            <xs:extension base="controlOptionsListDefinition">
                <xs:sequence>
                    <xs:element name="query" type="inputSelectQueryDefinition" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="type" type="inputSelectType"/>
                <xs:attribute name="store-on-input" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="controlSelectDefinition">
        <xs:complexContent>
            <xs:extension base="controlOptionsListDefinition">
                <xs:sequence>
                    <xs:element name="query" type="inputSelectQueryDefinition" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
                <xs:attribute name="type" type="inputSelectType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="inputSelectType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="single"/>
            <xs:enumeration value="multi"/>
            <xs:enumeration value="checkboxes"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="inputSelectQueryDefinition">
        <xs:sequence>
            <xs:element name="pre-filters" maxOccurs="1" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="pre-filter" type="controlPreFilterDefinitionWithResetMode" minOccurs="1"
                                    maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="query-id" type="xs:string" use="required"/>
        <xs:attribute name="format" type="xs:string" use="optional"/>
        <xs:attribute name="icon-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="image-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="group-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="value-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="label-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="search-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="master-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="detail-field-id" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="controlButtonDefinition">
        <xs:complexContent>
            <xs:extension base="controlBaseDefinition">
                <xs:sequence>
                    <xs:element name="event" minOccurs="1" maxOccurs="1">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="show-modal" type="showModalOpenPageDefinition" maxOccurs="1"
                                            minOccurs="0"/>
                                <xs:element name="show-modal-form" type="showModalFormDefinition" maxOccurs="1"
                                            minOccurs="0"/>
                                <xs:element name="open-page" type="showModalOpenPageDefinition" maxOccurs="1"
                                            minOccurs="0"/>
                                <xs:element name="a" type="ctr:anchorDef" maxOccurs="1" minOccurs="0"/>
                                <xs:element name="invoke-action" type="ctr:invokeActionDefinition" maxOccurs="1"
                                            minOccurs="0"/>
                                <xs:element name="custom" type="customEventDefinition" maxOccurs="1" minOccurs="0"/>
                                <xs:any namespace="##other" processContents="strict" maxOccurs="1"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="title" use="optional" type="xs:string"/>
                <xs:attribute name="title-field-id" use="optional" type="xs:string"/>
                <xs:attribute name="icon" use="optional" type="xs:string"/>
                <xs:attribute name="icon-field-id" use="optional" type="xs:string"/>
                <xs:attribute name="type" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="text"/>
                            <xs:enumeration value="icon"/>
                            <xs:enumeration value="textAndIcon"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="iconType">
        <xs:annotation>
            <xs:documentation>Иконка с текстом или без.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="icon"/>
            <xs:enumeration value="iconAndText"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="positionType">
        <xs:annotation>
            <xs:documentation>Тип расположения.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="left"/>
            <xs:enumeration value="right"/>
        </xs:restriction>
    </xs:simpleType>

</xs:schema>