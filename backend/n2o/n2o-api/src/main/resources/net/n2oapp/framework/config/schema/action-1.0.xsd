<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://n2oapp.net/framework/config/schema/action-1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:element name="open-page" type="openPageDefinition"/>
    <xs:element name="show-modal" type="showModalDefinition"/>
    <xs:element name="a" type="aDefinition"/>
    <xs:element name="invoke" type="invokeActionDefinition"/>
    <xs:element name="perform-validation" type="performValidationDefinition"/>
    <xs:element name="close" type="closeDefinition"/>
    <xs:element name="copy" type="copyDefinition"/>
    <xs:element name="clear" type="clearDefinition"/>
    <xs:element name="set-value" type="setValueDefinition"/>
    <xs:element name="execute-query" type="executeQueryDefinition"/>
    <xs:element name="custom" type="customDefinition"/>

    <xs:complexType name="actions">
        <xs:sequence>
            <xs:element name="open-page" type="openPageDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="show-modal" type="showModalDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="a" type="aDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="invoke" type="invokeActionDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="perform-validation" type="performValidationDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="close" type="closeDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="copy" type="copyDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="clear" type="clearDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="set-value" type="setValueDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="execute-query" type="executeQueryDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="custom" type="customDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:any namespace="##other" processContents="strict">
                <xs:annotation>
                    <xs:documentation>Подключаемый через библиотеку обработчик действий.</xs:documentation>
                </xs:annotation>
            </xs:any>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="actionDefinition">
        <xs:annotation>
            <xs:documentation>Действия</xs:documentation>
        </xs:annotation>
        <xs:attribute name="src" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Реализация действия.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:anyAttribute>
            <xs:annotation>
                <xs:documentation>Возможность подключать любые атрибуты.</xs:documentation>
            </xs:annotation>
        </xs:anyAttribute>
    </xs:complexType>

    <xs:complexType name="pageDefinition">
        <xs:complexContent>
            <xs:extension base="actionDefinition">
                <xs:annotation>
                    <xs:documentation>Действие открытия страниц.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="pre-filters" type="preFiltersDefinition" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="pre-fields" type="preFieldsDefinition" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="page-name" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Кастомное имя открываемой страницы</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="submit-operation-id" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>На открываемой странице будут добавлены кнопки "Сохранить" и "Отмена". Кнопка
                            "Сохранить" будет выполнять заданную операцию объекта.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="submit-model" type="reduxModel" use="optional">
                    <xs:annotation>
                        <xs:documentation>На открываемой странице будут добавлены кнопки "Сохранить" и "Отмена". Кнопка
                            "Сохранить" будет выполнять с заданной моделью.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="submit-label" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Название кнопки отправки формы на открываемой странице. По умолчанию
                            "Сохранить".
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="upload" type="uploadType" use="optional">
                    <xs:annotation>
                        <xs:documentation>Источник данных виджета при открытии страницы. По умолчанию query.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="route" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>URL действия. По умолчанию вычисляется на основании идентификаторов страницы,
                            виджета
                            и действия.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="focus-after-submit" type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Поставить фокус в текущем виджете на запись, которую вернёт операция объекта
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="close-after-submit" type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Закрыть окно после успешного выполнения операции объекта</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="master-field-id" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Поле в модели текущего виджета</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="detail-field-id" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Поле в фильтрах мастер виджета на открываемой странице</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="redirect-url-after-submit" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Переадресовать на URL после успешного выполнения операции объекта.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="redirect-target-after-submit" type="redirectTargetType" use="optional">
                    <xs:annotation>
                        <xs:documentation>Сценарий переадресации после успешного выполнения операции объекта.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="openPageDefinition">
        <xs:complexContent>
            <xs:extension base="pageDefinition">
                <xs:annotation>
                    <xs:documentation>Открыть страницу поверх текущей.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="page-id" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>Страница, которая будет открыта поверх текущей.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="master-param" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Параметр фильтра</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="showModalDefinition">
        <xs:complexContent>
            <xs:extension base="pageDefinition">
                <xs:annotation>
                    <xs:documentation>Открыть страницу в модальном окне..</xs:documentation>
                </xs:annotation>
                <xs:attribute name="page-id" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>Страница, которая будет открыта поверх текущей.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="modal-size" type="modalSize" use="optional">
                    <xs:annotation>
                        <xs:documentation>Размер модального окна.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="object-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="uploadType">
        <xs:annotation>
            <xs:documentation>Источник данных виджета при открытии страницы.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="query"/>
            <xs:enumeration value="defaults"/>
            <xs:enumeration value="copy"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="modalSize">
        <xs:restriction base="xs:string">
            <xs:enumeration value="sm"/>
            <xs:enumeration value="lg"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="aDefinition">
        <xs:annotation>
            <xs:documentation>Открыть страницу браузера.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="actionDefinition">
                <xs:sequence>
                    <xs:element name="path-param" type="paramDefinition" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="query-param" type="paramDefinition" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="href" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>Адрес URL. Возможно использование плейсхолдеров {placeholder}
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="target" type="aType" use="optional">
                    <xs:annotation>
                        <xs:documentation>Cценарий открытия ссылки</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="paramDefinition">
        <xs:attribute name="name" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>Название параметра</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="value" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>Ссылка на значение парамерта</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="invokeActionDefinition">
        <xs:complexContent>
            <xs:extension base="actionDefinition">
                <xs:annotation>
                    <xs:documentation>Выполнить действие объекта.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="operation-id" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>Действие объекта, которое нужно выполнить над моделью виджета.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="close-after-success" type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Закрыть окно после успешного выполнения действия</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="route" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>URL для обращения к действию.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="redirect-url" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>URL адрес, на который произойдет переход сразу после успешного выполнения
                            действия..
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="redirect-target" type="redirectTargetType" use="optional">
                    <xs:annotation>
                        <xs:documentation>Сценарий открытия ссылки сразу после успешного выполнения операции. По
                            умолчанию self.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="redirectTargetType">
        <xs:annotation>
            <xs:documentation>Сценарий открытия ссылки сразу после успешного выполнения операции.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="self"/>
            <xs:enumeration value="newWindow"/>
            <xs:enumeration value="application"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="performValidationDefinition">
        <xs:complexContent>
            <xs:extension base="actionDefinition">
                <xs:annotation>
                    <xs:documentation>Провалидировать виджет.</xs:documentation>
                </xs:annotation>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="closeDefinition">
        <xs:complexContent>
            <xs:extension base="actionDefinition">
                <xs:annotation>
                    <xs:documentation>Закрыть окно.</xs:documentation>
                </xs:annotation>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="copyDefinition">
        <xs:complexContent>
            <xs:extension base="actionDefinition">
                <xs:annotation>
                    <xs:documentation>Скопировать модель.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="source-model" type="reduxModel" use="optional">
                    <xs:annotation>
                        <xs:documentation>Модель, которая будет скопирована. По умолчанию edit.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="target-model" type="reduxModel" use="optional">
                    <xs:annotation>
                        <xs:documentation>Модель, в которую будут скопированны данные. По умолчанию resolve.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="clearDefinition">
        <xs:complexContent>
            <xs:extension base="actionDefinition">
                <xs:annotation>
                    <xs:documentation>Очистить модель.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="model" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Название модели.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="setValueDefinition">
        <xs:complexContent>
            <xs:extension base="actionDefinition">
                <xs:annotation>
                    <xs:documentation>Установить значение в модель.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="target-field-id" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Поле модели, которое будет перезаписано значением, которое вернет функция в
                            теле. При отсутствии, будет перезаписана вся модель.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="executeQueryDefinition">
        <xs:complexContent>
            <xs:extension base="actionDefinition">
                <xs:annotation>
                    <xs:documentation>Сделать запрос за выборкой данных.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="pre-filters" type="preFiltersDefinition"/>
                </xs:sequence>
                <xs:attribute name="query-id" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>Выборка, которая будет запрошена.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="target-field-id" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Поле модели, которое будет перезаписано значением, которое вернет выборка.
                            При отсутствии, будет перезаписана вся модель.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="value-field-id" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Поле выборки, которое будет взято для записи в модель. При отсутствии, будет
                            взята вся выборка.
                            Если выборка вернула несколько значений, в каждом значении возьмется только это поле.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="customDefinition">
        <xs:complexContent>
            <xs:extension base="actionDefinition">
                <xs:annotation>
                    <xs:documentation>Кастомное действие.</xs:documentation>
                </xs:annotation>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="aType">
        <xs:annotation>
            <xs:documentation>Тип сценария открытия ссылки.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="newWindow"/>
            <xs:enumeration value="self"/>
            <xs:enumeration value="application"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="preFiltersDefinition">
        <xs:annotation>
            <xs:documentation>Предустановленная фильтрация.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="eq" type="preFilterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="in" type="preFilterDefValuesWithBody" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="like" type="preFilterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="likeStart" type="preFilterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="isNull" type="preFilterDefBase" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="contains" type="preFilterDefValuesWithBody" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="overlaps" type="preFilterDefValuesWithBody" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="more" type="preFilterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="less" type="preFilterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="notEq" type="preFilterDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="notIn" type="preFilterDefValues" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="isNotNull" type="preFilterDefBase" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="preFilterDefBase">
        <xs:annotation>
            <xs:documentation>Предустановленная фильтрация поля выборки.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="field-id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>Поле в выборке виджета, по которому будет фильтрация.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="required" type="xs:boolean" use="optional">
            <xs:annotation>
                <xs:documentation>Флаг обязательности предустановленного фильтра.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="preFilterDefValue">
        <xs:complexContent>
            <xs:extension base="preFieldDefBase">
                <xs:annotation>
                    <xs:documentation>Предустановленная фильтрация поля выборки.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="value" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Значение фильтра (одно значение).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="required" type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Флаг обязательности предустановленного фильтра.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="preFilterDefValues">
        <xs:complexContent>
            <xs:extension base="preFieldDefValue">
                <xs:annotation>
                    <xs:documentation>Предустановленная фильтрация поля выборки.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="values" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Значение фильтра (через запятую).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="required" type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Флаг обязательности предустановленного фильтра.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="preFilterDefValuesWithBody">
        <xs:complexContent>
            <xs:extension base="preFieldDefValue">
                <xs:annotation>
                    <xs:documentation>Предустановленная фильтрация поля выборки. С возможностью задания списка значений
                        в теле.
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:element name="value" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="values" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Значение фильтра (через запятую).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="required" type="xs:boolean" use="optional">
                    <xs:annotation>
                        <xs:documentation>Флаг обязательности предустановленного фильтра.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="preFieldsDefinition">
        <xs:annotation>
            <xs:documentation>Предустановленная фильтрация.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="eq" type="preFieldDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="in" type="preFieldDefValues" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="contains" type="preFieldDefValues" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="more" type="preFieldDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="less" type="preFieldDefValue" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="isNotNull" type="preFieldDefBase" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="isNull" type="preFieldDefBase" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="preFieldDefBase">
        <xs:annotation>
            <xs:documentation>Предустановленная фильтрация поля выборки.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="field-id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>Поле ввода в виджете, по которому будет предустановка.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ref-widget-id" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Идентификатор виджета, по полю которого будет фильтрация.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ref-model" type="reduxModel" use="optional">
            <xs:annotation>
                <xs:documentation>Модель виджета, по полю которого будет фильтрация.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="param" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>Параметр фильтра.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="preFieldDefValue">
        <xs:complexContent>
            <xs:extension base="preFieldDefBase">
                <xs:annotation>
                    <xs:documentation>Предустановленная фильтрация поля выборки.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="value" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Значение предустановки (одно значение).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="preFieldDefValues">
        <xs:complexContent>
            <xs:extension base="preFieldDefValue">
                <xs:annotation>
                    <xs:documentation>Предустановленная фильтрация поля выборки.</xs:documentation>
                </xs:annotation>
                <xs:attribute name="values" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>Значения предустановки (через запятую).</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="reduxModel">
        <xs:annotation>
            <xs:documentation>Модель данных.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="resolve"/>
            <xs:enumeration value="edit"/>
            <xs:enumeration value="filter"/>
        </xs:restriction>
    </xs:simpleType>

</xs:schema>
