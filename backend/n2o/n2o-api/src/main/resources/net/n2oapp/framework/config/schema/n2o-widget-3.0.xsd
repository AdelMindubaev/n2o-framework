<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:ctr="http://n2oapp.net/framework/config/schema/base/control-base-1.0"
           xmlns:fs="http://n2oapp.net/framework/config/schema/fieldset-3.0"
           xmlns:prop="http://n2oapp.net/framework/config/schema/base/properties-base-1.0"
           targetNamespace="http://n2oapp.net/framework/config/schema/n2o-widget-3.0"
           xmlns:dmn="http://n2oapp.net/framework/config/schema/base/domain-base-1.0"
           xmlns:menu="http://n2oapp.net/framework/config/schema/n2o-event-1.0"
           xmlns:query_3_0="http://n2oapp.net/framework/config/schema/query-3.0"
           xmlns:act="http://n2oapp.net/framework/config/schema/base/action-base-1.0"
           xml:base="fs:fieldSetDefinition">


    <xs:element name="form" type="formReferenceDefinition"/>
    <xs:element name="edit-form" type="editFormReferenceDefinition"/>
    <xs:element name="table" type="tableReferenceDefinition"/>
    <xs:element name="tree" type="treeReferenceDefinition"/>
    <xs:element name="chart" type="chartReferenceDefinition"/>
    <xs:element name="list" type="widgetListReferenceDefinition"/>
    <xs:element name="custom" type="customReferenceDefinition"/>
    <xs:element name="html" type="htmlReferenceDefinition"/>
    <xs:element name="wizard" type="wizardDefinition"/>

    <!--определение компонента-->
    <xs:complexType name="widgetDefinition">
        <xs:sequence>
            <xs:element name="properties" maxOccurs="1" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="prop:propertyListDefinition">
                            <xs:sequence>
                                <xs:element name="property" type="prop:propertyDefinition" maxOccurs="unbounded"
                                            minOccurs="1"/>
                            </xs:sequence>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <!--идентификатор выборки, на основе которой построен компонент-->
            <xs:element name="query-id" type="xs:string" maxOccurs="1" minOccurs="1"/>
            <!-- идентификатор объекта -->
            <xs:element name="object-id" type="xs:string" minOccurs="0" maxOccurs="1"/>
            <!--локализованное наименование компонента-->
            <!--по умолчанию равно элементу name выборки, на основе которой построен компонент-->
            <xs:element name="name" type="xs:string" maxOccurs="1" minOccurs="0"/>
            <!--количество записей, которое отображает виджет-->
            <xs:element name="size" type="xs:integer" maxOccurs="1" minOccurs="0"/>
            <!--возможные действия в компоненте-->
            <xs:element name="action-menu" type="actionMenuListDefinition" maxOccurs="1" minOccurs="0"/>
        </xs:sequence>
        <!--папка с исходниками-->
        <xs:attribute name="src" use="optional"/>
        <xs:attribute name="css-class" use="optional"/>
        <xs:attribute name="style" use="optional"/>
        <!--перечесление переопределяемых исходников, если не указан, переопределяются все (js, jsp, css)-->
        <xs:attribute name="customize" use="optional">
            <xs:simpleType>
                <xs:union memberTypes="xs:string">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="css"/>
                            <xs:enumeration value="js"/>
                            <xs:enumeration value="jsp"/>
                            <xs:enumeration value="css,js"/>
                            <xs:enumeration value="css,jsp"/>
                            <xs:enumeration value="js,jsp"/>
                            <xs:enumeration value="css,js,jsp"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <!--определение компонента - формы-->
    <xs:complexType name="abstractFormDefinitionWithEdit" abstract="true">
        <xs:complexContent>
            <xs:extension base="abstractFormDefinition">
                <xs:sequence>
                    <xs:element name="edit" type="editWithAfterSubmitDefinition" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="abstractFormDefinition" abstract="true">
        <xs:complexContent>
            <xs:extension base="widgetDefinition">
                <xs:sequence>
                    <xs:element name="modal-width" type="xs:string" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="object-id" type="xs:string" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="default-values-query-id" type="xs:string" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="query-id" type="xs:string" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="layout" type="formLayoutEnum" minOccurs="0" maxOccurs="1"/>
                    <xs:any namespace="##other" processContents="strict" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--определение компонента формы, который можно использовать многократно-->
    <xs:complexType name="formDefinition">
        <xs:complexContent>
            <xs:extension base="abstractFormDefinitionWithEdit">
                <xs:sequence>
                    <!--строковый глобальный уникальный идентификатор формы-->
                    <xs:element name="id" type="xs:string" maxOccurs="1" minOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--определение ссылки на компонент формы, который встраивается в панель-->
    <xs:complexType name="formReferenceDefinition">
        <xs:complexContent>
            <xs:extension base="abstractFormDefinitionWithEdit">
                <!--идентификатор формы, встраиваемой в панель-->
                <xs:attribute name="ref-id" type="xs:string" use="optional"/>
                <!--поле выборки (на которой основан компонент родительской панели), значение которого передалось из выбранной записи родительской панели-->
                <!--по умолчанию 'id'-->
                <xs:attribute name="master-field-id" type="xs:string" use="optional"/>
                <!--поле выборки (на которой основан компонент формы, встраиваемой в панель) фильтруемое по значению master-field-id-->
                <!--по умолчанию 'parentId'-->
                <xs:attribute name="detail-field-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <xs:complexType name="editFormReferenceDefinition">
        <xs:complexContent>
            <xs:extension base="editFormDefinition">
                <!--идентификатор формы, встраиваемой в панель-->
                <xs:attribute name="ref-id" type="xs:string" use="optional"/>
                <!--поле выборки (на которой основан компонент родительской панели), значение которого передалось из выбранной записи родительской панели-->
                <!--по умолчанию 'id'-->
                <xs:attribute name="master-field-id" type="xs:string" use="optional"/>
                <!--поле выборки (на которой основан компонент формы, встраиваемой в панель) фильтруемое по значению master-field-id-->
                <!--по умолчанию 'parentId'-->
                <xs:attribute name="detail-field-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="editFormDefinition">
        <xs:complexContent>
            <xs:extension base="abstractFormDefinition">
                <xs:sequence>
                    <xs:element name="model" minOccurs="0" maxOccurs="1" type="ctr:modelDefinition"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <!--определение компонента - таблицы-->
    <xs:complexType name="abstractTableDefinition">
        <xs:complexContent>
            <xs:extension base="widgetDefinition">
                <xs:sequence>
                    <xs:element name="columns" type="tableColumnListDefinition" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="sortings" type="tableSortingListDefinition" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="rows" maxOccurs="1" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="color" maxOccurs="1" minOccurs="0">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:element name="switch" type="switchDef" minOccurs="0"/>
                                        </xs:sequence>
                                        <xs:attribute name="color-field-id"/>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="paging" maxOccurs="1" minOccurs="0">
                        <xs:complexType>
                            <xs:attribute name="mode" use="optional">
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:enumeration value="on"/>
                                        <xs:enumeration value="off"/>
                                        <xs:enumeration value="lazy"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="always-show-count" type="xs:boolean" use="optional"/>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="settings" type="tableSettingsDefinition" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="checkboxes" type="xs:boolean" minOccurs="0" maxOccurs="1">
                        <xs:annotation><xs:documentation>Если "true" в таблице появится системный столбец с чекбоксами для групповых операций</xs:documentation></xs:annotation>
                    </xs:element>
                    <xs:element name="auto-select" type="xs:boolean" minOccurs="0" maxOccurs="1">
                        <xs:annotation><xs:documentation>Если "true", то выделение записей будет происходить при фокусе</xs:documentation></xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--определение компонента таблицы, который можно использовать многократно-->
    <xs:complexType name="tableDefinition">
        <xs:complexContent>
            <xs:extension base="abstractTableDefinition">
                <xs:sequence>
                    <!--строковый глобальный уникальный идентификатор таблицы-->
                    <xs:element name="id" type="xs:string" maxOccurs="1" minOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--определение ссылки на компонент таблицы, который встраивается в панель-->
    <xs:complexType name="tableReferenceDefinition">
        <xs:complexContent>
            <xs:extension base="abstractTableDefinition">
                <xs:sequence>
                    <!--список возможных фильтров таблицы-->
                    <!--если не определено - все поля выборки, которые могут быть фильтрами-->
                    <xs:element name="filters">
                        <xs:complexType>
                            <xs:complexContent>
                                <xs:extension base="fs:controlFieldElements">
                                    <xs:attribute name="position" type="filterPositionEnum" use="optional"/>
                                    <xs:attribute name="opened" type="xs:boolean" use="optional"/>
                                </xs:extension>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="settings" type="tableSettingsDefinition" maxOccurs="1" minOccurs="0"/>
                </xs:sequence>
                <!--идентификатор таблицы, встраиваемой в панель-->
                <xs:attribute name="ref-id" type="xs:string" use="optional"/>
                <!--поле выборки (на которой основан компонент родительской панели), значение которого передалось из выбранной записи родительской панели-->
                <!--по умолчанию 'id'-->
                <xs:attribute name="master-field-id" type="xs:string" use="optional"/>
                <!--поле выборки (на которой основан компонент таблицы, встраиваемой в панель) фильтруемое по значению master-field-id-->
                <!--по умолчанию 'parentId'-->
                <xs:attribute name="detail-field-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--список столбцов таблицы-->
    <!--если не определено - все поля выборки, которые могут возвращать значение-->
    <xs:complexType name="tableColumnListDefinition">
        <xs:sequence>
            <xs:element name="column" type="tableColumnDefinition" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="dynamic-column" type="tableDynamicColumnDefinition" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <!--определение базовых свойств столбца таблицы-->
    <xs:complexType name="tableAbstractColumnDefinition">
        <!--идентификатор поля выборки (на основе которой построена таблица), которое является столбцом-->
        <xs:attribute name="column-field-id" type="xs:string" use="required"/>
        <!--идентификатор поля выборки (на основе которой построена таблица), значение которого будет отображаться как всплывающая подсказка, при наведении на значения столбца-->
        <xs:attribute name="tooltip-field-id" type="xs:string" use="optional"/>
        <!--ширина столбца-->
        <xs:attribute name="width" type="xs:integer" use="optional"/>
        <xs:attribute name="format" type="formatDefinition" use="optional"/>
        <xs:attribute name="name" type="xs:string" use="optional"/>
        <xs:attribute name="icon" type="xs:string" use="optional"/>
        <xs:attribute name="visible" type="xs:boolean" use="optional"/>
        <xs:attribute name="type" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="text"/>
                    <xs:enumeration value="icon"/>
                    <xs:enumeration value="textAndIcon"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="visibility-condition" type="xs:string" use="optional"/>
    </xs:complexType>
    <!--определение столбца таблицы-->
    <xs:complexType name="tableColumnDefinition">
        <xs:complexContent>
            <xs:extension base="tableAbstractColumnDefinition">
                <xs:sequence>
                    <xs:element name="text" type="textDef" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="query" type="ctr:controlListQueryDefinition" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="checkbox" type="checkboxDef" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="icon" type="iconDef" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="badge" type="badgeDef" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="x-editable" type="x-editableDef" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="color" type="colorDef" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="link" type="linkDef" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="custom" type="customDef" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="image" type="imageDef" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="progress-bar" type="progressBarDef" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="list" type="listDef" maxOccurs="1" minOccurs="0"/>
                    <xs:any namespace="##other"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="tableDynamicColumnDefinition">
        <xs:complexContent>
            <xs:extension base="tableAbstractColumnDefinition">
                <xs:sequence>
                    <xs:element name="switch" type="dynamicColumnSwitchDef"/>
                </xs:sequence>
                <xs:attribute name="name" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--список предустановленных сортировок таблицы-->
    <!--если не определено - нет предустановленных сортировок-->
    <xs:complexType name="tableSortingListDefinition">
        <xs:sequence>
            <xs:element name="sorting" type="tableSortingDefinition" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="type" type="sortingType"/>
    </xs:complexType>

    <!--типы сортировки-->
    <xs:simpleType name="sortingType">
        <xs:union memberTypes="xs:string">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="single"/>
                    <xs:enumeration value="multi"/>
                    <xs:enumeration value="none"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:complexType name="tableSettingsDefinition">
        <xs:annotation><xs:documentation>Меню настроек таблицы</xs:documentation></xs:annotation>
        <xs:sequence>
            <xs:element name="filters" type="tableSettingsMenuDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="word-wrap" type="tableSettingsMenuBooleanDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="refresh" type="tableSettingsMenuDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="export" type="tableSettingsMenuDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="size" type="tableSettingsMenuDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="columns" type="tableSettingsMenuDefinition" maxOccurs="1" minOccurs="0"/>
            <!--<xs:element name="change-paging-size" type="xs:boolean" maxOccurs="1" minOccurs="0"/>-->
            <!--<xs:element name="can-export" type="xs:boolean" maxOccurs="1" minOccurs="0"/>-->
        </xs:sequence>
        <xs:attribute name="visible" type="xs:boolean" use="optional"/>
    </xs:complexType>

    <xs:complexType name="tableSettingsMenuDefinition">
        <xs:attribute name="visible" type="xs:boolean" use="optional"/>
        <xs:attribute name="submenu" type="xs:boolean" use="optional"/>
    </xs:complexType>

    <xs:complexType name="tableSettingsMenuBooleanDefinition">
        <xs:attribute name="visible" type="xs:boolean" use="optional"/>
        <xs:attribute name="submenu" type="xs:boolean" use="optional"/>
        <xs:attribute name="default-value" type="xs:boolean" use="optional"/>
    </xs:complexType>

    <!--определение предустановленной сортировки-->
    <xs:complexType name="tableSortingDefinition">
        <!--поле выборки (на основе которой построена таблица), по которому будет отсортирована таблица-->
        <xs:attribute name="sorting-field-id" type="xs:string" use="required"/>
        <xs:attribute name="direction" type="sortingDirectionEnum" default="NONE" use="optional"/>
    </xs:complexType>

    <!--определение контекстного меню таблицы-->
    <xs:complexType name="actionMenuListDefinition">
        <xs:sequence>
            <xs:element name="menu-item" type="menuItemDefinition" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="sub-menu" type="subMenuDefinition" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="group" type="menuItemGroupDefinition" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
        <!--возможность наследовать контекстное меню по умолчанию-->
        <xs:attribute name="inherit-default" type="xs:boolean" default="false" use="optional"/>
    </xs:complexType>

    <xs:complexType name="menuItemGroupDefinition">
        <xs:sequence minOccurs="1">
            <xs:element name="menu-item" type="menuItemDefinition" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element name="sub-menu" type="subMenuDefinition" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="place" use="optional">
            <xs:simpleType>
                <xs:union memberTypes="xs:string">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="top-left"/>
                            <xs:enumeration value="top-right"/>
                            <xs:enumeration value="bottom-left"/>
                            <xs:enumeration value="bottom-right"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="subMenuDefinition">
        <xs:complexContent>
            <xs:extension base="menuElementDefinition">
                <xs:sequence>
                    <xs:element name="menu-item" type="menuItemDefinition" maxOccurs="unbounded" minOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="menuElementDefinition" abstract="true">
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="label" type="xs:string" use="optional"/>
        <xs:attribute name="type" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="text"/>
                    <xs:enumeration value="icon"/>
                    <xs:enumeration value="textAndIcon"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="icon" type="xs:string" use="optional"/>
        <xs:attribute name="color" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="propertyDefinitionWithDomain">
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string" use="required"/>
        <xs:attribute name="domain" type="dmn:domainType" use="optional"/>
    </xs:complexType>

    <!--меню действий-->
    <xs:complexType name="menuItemDefinition">
        <xs:annotation>
            <xs:documentation source="https://wiki.i-novus.ru/display/N2O/N2O.Documentation.Model.ActionMenu"/>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ctr:controlDefinition">
                <!--возможно только одно из возможных действий-->
                <xs:sequence>
                    <xs:element name="properties" type="propertyListDefinition" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" maxOccurs="1" minOccurs="0"/>
                    <xs:element name="event" minOccurs="1" maxOccurs="1">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="show-modal" type="showModalOpenPageDefinition" maxOccurs="1"
                                            minOccurs="0"/>
                                <xs:element name="show-modal-form" type="showModalFormDefinition" maxOccurs="1"
                                            minOccurs="0"/>
                                <xs:element name="open-page" type="showModalOpenPageDefinition" maxOccurs="1"
                                            minOccurs="0"/>
                                <xs:element name="a" type="ctr:anchorDef" maxOccurs="1" minOccurs="0"/>
                                <xs:element name="invoke-action" type="ctr:invokeActionDefinition" maxOccurs="1"
                                            minOccurs="0"/>
                                <xs:element name="edit" type="editDefinition" maxOccurs="1" minOccurs="0"/>
                                <xs:element name="custom" type="customEventDefinition" maxOccurs="1" minOccurs="0"/>
                                <xs:element name="validate" maxOccurs="1" minOccurs="0"/>
                                <xs:element name="close" maxOccurs="1" minOccurs="0"/>
                                <xs:element name="invoke-action-and-close" type="invokeActionAndCloseDefinition" maxOccurs="0" minOccurs="0"/>
                                <xs:any namespace="##other" processContents="strict" maxOccurs="1"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <!--вложенное меню-->
                    <xs:element name="conditions" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="enabling-condition" minOccurs="0">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:element name="expression" minOccurs="1" maxOccurs="1">
                                                <xs:complexType>
                                                    <xs:attribute name="on" type="xs:string" use="optional"/>
                                                </xs:complexType>
                                            </xs:element>
                                            <xs:element name="tooltip" minOccurs="1" maxOccurs="1"/>
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                                <xs:element name="visibility-condition" minOccurs="0">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:element name="expression" minOccurs="1" maxOccurs="1">
                                                <xs:complexType>
                                                    <xs:attribute name="on" type="xs:string" use="optional"/>
                                                </xs:complexType>
                                            </xs:element>
                                        </xs:sequence>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <!--признак того, что данный элемент меню является основным-->
                <!--срабатывает как действие по умолчанию в компоненте (на двойной клик) и выделяется жирным шрифтом-->
                <xs:attribute name="default" type="xs:boolean" default="false" use="optional"/>
                <!--признак того, что действие привязано к контексту, если контекста нет, то элемент меню имеет атрибут readonly=false-->
                <!--если контекст есть и этот атрибут включен, то при вызове действия этот контекст передается на вход действию-->
                <!--если этот атрибут выключен, то при вызове действия действию передается пустой контекст-->
                <xs:attribute name="context" type="xs:boolean" default="true" use="optional"/>
                <!--признак, что действие является главным на странице (выделяется цветом, отображается в регионах)-->
                <xs:attribute name="primary" type="xs:boolean" default="false" use="optional"/>
                <!--тип отображения кнопки (с лейблом, со значком, с лейблом и значком) -->
                <xs:attribute name="type" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="text"/>
                            <xs:enumeration value="icon"/>
                            <xs:enumeration value="textAndIcon"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="icon" type="xs:string" use="optional"/>
                <xs:attribute name="key" type="xs:string" use="optional"/>
                <xs:attribute name="bulk" type="xs:boolean" use="optional"/>
                <xs:attribute name="color" type="xs:string" use="optional"/>
                <xs:attribute name="validate" type="xs:boolean" use="optional"/>
                <xs:attribute name="refresh-policy" use="optional">
                    <xs:simpleType>
                        <xs:restriction>
                            <xs:enumeration value="selected"/>
                            <xs:enumeration value="all"/>
                            <xs:enumeration value="nothing"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="showModalOpenPageDefinition">
        <xs:complexContent>
            <xs:extension base="menu:showModalOpenPageDefinition">
                <xs:sequence>
                    <xs:element name="pre-filters" maxOccurs="1" minOccurs="0">
                        <xs:complexType>
                            <xs:annotation>
                                <xs:documentation source="https://wiki.i-novus.ru/display/N2O/N2O.Documentation.Dependency"/>
                            </xs:annotation>
                            <xs:sequence>
                                <xs:element name="pre-filter" type="showModalPreFilterDefinition" maxOccurs="unbounded"
                                            minOccurs="1"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="showModalFormDefinition">
        <xs:complexContent>
            <xs:extension base="menu:showModalFormDefinition">
                <xs:sequence>
                    <xs:element name="edit" type="editWithoutAfterSubmitDefinition"/>
                    <xs:element name="pre-filters" maxOccurs="1" minOccurs="0">
                        <xs:complexType>
                            <xs:annotation>
                                <xs:documentation source="https://wiki.i-novus.ru/display/N2O/N2O.Documentation.Dependency"/>
                            </xs:annotation>
                            <xs:sequence>
                                <xs:element name="pre-filter" type="showModalPreFilterDefinition" maxOccurs="unbounded"
                                            minOccurs="1"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="editWithoutAfterSubmitDefinition">
        <xs:complexContent>
            <xs:extension base="menu:editWithoutAfterSubmitDefinition">
                <xs:sequence>
                    <xs:element name="invoke-action" type="ctr:submitActionDefinition" minOccurs="0"/>
                    <xs:element name="redirect" type="ctr:redirectDef" minOccurs="0"/>
                    <xs:element name="a" type="ctr:anchorDef" minOccurs="0"/>
                    <xs:element name="create-or-update" type="ctr:createOrUpdateActionDef" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="propertyListDefinition">
        <xs:sequence>
            <xs:element name="property" type="propertyDefinitionWithDomain" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <!--положение панели фильтров-->
    <xs:simpleType name="filterPositionEnum">
        <xs:restriction base="xs:string">
            <!--не задано-->
            <xs:enumeration value="top"/>
            <!--по возрастанию-->
            <xs:enumeration value="left"/>
            <!--по убыванию-->
            <xs:enumeration value="right"/>
        </xs:restriction>
    </xs:simpleType>


    <!--направление сортировки-->
    <xs:simpleType name="sortingDirectionEnum">
        <xs:restriction base="xs:string">
            <!--не задано-->
            <xs:enumeration value="NONE"/>
            <!--по возрастанию-->
            <xs:enumeration value="ASC"/>
            <!--по убыванию-->
            <xs:enumeration value="DESC"/>
        </xs:restriction>
    </xs:simpleType>

    <!--определение компонента - дерево-->
    <xs:complexType name="abstractTreeDefinition">
        <xs:complexContent>
            <xs:extension base="widgetDefinition">
                <xs:sequence>
                    <xs:element name="checkboxes" type="xs:boolean"/>
                    <xs:element name="ajax" type="xs:boolean"/>
                    <xs:element name="search" type="xs:boolean"/>
                    <xs:element name="expand" type="xs:boolean"/>
                    <xs:element name="grouping-nodes" type="groupingNodesDefinition"/>
                    <xs:element name="inheritance-nodes" type="inheritanceNodesDefinition"/>
                    <xs:element name="auto-select" type="xs:boolean"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="groupingNodesDefinition">
        <xs:sequence>
            <xs:element name="node" type="nodeDefinition" minOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="search-field-id" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="inheritanceNodesDefinition">
        <xs:attribute name="parent-field-id" type="xs:string" use="required"/>
        <xs:attribute name="label-field-id" type="xs:string" use="required"/>
        <xs:attribute name="has-children-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="search-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="enabled-field-id" type="xs:string" use="optional"/>
        <xs:attribute name="icon-field-id" type="xs:string" use="optional"/>
    </xs:complexType>

    <!--определение компонента дерево, который можно использовать многократно-->
    <xs:complexType name="treeDefinition">
        <xs:complexContent>
            <xs:extension base="abstractTreeDefinition">
                <xs:sequence>
                    <!--строковый глобальный уникальный идентификатор дерева-->
                    <xs:element name="id" type="xs:string" maxOccurs="1" minOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--определение ссылки на компонент дерево, который встраивается в панель-->
    <xs:complexType name="treeReferenceDefinition">
        <xs:complexContent>
            <xs:extension base="abstractTreeDefinition">
                <!--идентификатор дерева, встраиваемого в панель-->
                <xs:attribute name="ref-id" type="xs:string" use="optional"/>
                <!--поле выборки (на которой основан компонент родительской панели), значение которого передалось из выбранной записи родительской панели-->
                <!--по умолчанию 'id'-->
                <xs:attribute name="master-field-id" type="xs:string" use="optional"/>
                <!--поле выборки (на которой основан компонент дерево, встраиваемый в панель) фильтруемое по значению master-field-id-->
                <!--по умолчанию 'parentId'-->
                <xs:attribute name="detail-field-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="nodeDefinition">
        <xs:sequence>
            <xs:element name="node" type="nodeDefinition"/>
        </xs:sequence>
        <xs:attribute name="value-field-id" type="xs:string" use="required"/>
        <xs:attribute name="label-field-id" type="xs:string" use="required"/>
        <xs:attribute name="enabled" type="xs:boolean" use="optional"/>
        <xs:attribute name="icon" type="xs:string" use="optional"/>
    </xs:complexType>

    <!--определение ссылки на компонент chart, который встраивается в панель-->
    <xs:complexType name="chartReferenceDefinition">
        <xs:complexContent>
            <xs:extension base="abstractChartDefinition">
                <!--идентификатор графика, встраиваемого в панель-->
                <xs:attribute name="ref-id" type="xs:string" use="optional"/>
                <!--поле выборки (на которой основан компонент родительской панели), значение которого передалось из выбранной записи родительской панели-->
                <!--по умолчанию 'id'-->
                <xs:attribute name="master-field-id" type="xs:string" use="optional"/>
                <!--поле выборки (на которой основан компонент дерево, встраиваемый в панель) фильтруемое по значению master-field-id-->
                <!--по умолчанию 'parentId'-->
                <xs:attribute name="detail-field-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="abstractChartDefinition">
        <xs:complexContent>
            <xs:extension base="widgetDefinition">
                <xs:sequence>
                    <xs:element name="display" type="displayEnum" minOccurs="1"/>
                    <xs:element name="label-field-id" type="xs:string" minOccurs="1"/>
                    <xs:element name="value-field-id" type="xs:string" minOccurs="0"/>
                    <xs:element name="values" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="value" type="valuesDefinition"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="valuesDefinition">
        <xs:attribute name="field-id" type="xs:string" use="required"/>
        <xs:attribute name="color" type="colors" use="required"/>
    </xs:complexType>

    <!--список видов графика widget chart-->
    <xs:simpleType name="displayEnum">
        <xs:union memberTypes="xs:string">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="line"/>
                    <xs:enumeration value="bar"/>
                    <xs:enumeration value="radar"/>
                    <xs:enumeration value="polar"/>
                    <xs:enumeration value="pie"/>
                    <xs:enumeration value="doughnut"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <!--список цветов графика (согласно chart.js)-->
    <xs:simpleType name="colors">
        <xs:union memberTypes="xs:string">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="red"/>
                    <xs:enumeration value="yellow"/>
                    <xs:enumeration value="green"/>
                    <xs:enumeration value="blue"/>
                    <xs:enumeration value="grey"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <!--определение компонента chart, который можно использовать многократно-->
    <xs:complexType name="chartDefinition">
        <xs:complexContent>
            <xs:extension base="abstractChartDefinition">
                <xs:sequence>
                    <!--строковый глобальный уникальный идентификатор дерева-->
                    <xs:element name="id" type="xs:string" maxOccurs="1" minOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <xs:complexType name="customDefinition">
        <xs:complexContent>
            <xs:extension base="abstractCustomDefinition">
                <xs:sequence>
                    <xs:element name="id" type="xs:string" maxOccurs="1" minOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="customReferenceDefinition">
        <xs:complexContent>
            <xs:extension base="abstractCustomDefinition">
                <xs:attribute name="ref-id" type="xs:string" use="optional"/>
                <xs:attribute name="master-field-id" type="xs:string" use="optional"/>
                <xs:attribute name="detail-field-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="abstractCustomDefinition">
        <xs:complexContent>
            <xs:extension base="widgetDefinition">
                <xs:attribute name="src" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="htmlReferenceDefinition">
        <xs:sequence>
            <xs:element name="properties" maxOccurs="1" minOccurs="0">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="prop:propertyListDefinition">
                            <xs:sequence>
                                <xs:element name="property" type="prop:propertyDefinition" maxOccurs="unbounded"
                                            minOccurs="1"/>
                            </xs:sequence>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="name" type="xs:string" maxOccurs="1" minOccurs="0"/>
            <xs:element name="object-id" type="xs:string" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="url" use="required"/>
    </xs:complexType>

    <xs:complexType name="imageDef">
        <xs:attribute name="width" type="xs:string" use="optional"/>
        <xs:attribute name="shape" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="circle"/>
                    <xs:enumeration value="rounded"/>
                    <xs:enumeration value="polaroid"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="progressBarDef">
        <xs:sequence>
            <xs:element name="switch" type="switchDef"/>
        </xs:sequence>
        <xs:attribute name="size" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="normal"/>
                    <xs:enumeration value="large"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="striped" type="xs:boolean" use="optional"/>
        <xs:attribute name="active" type="xs:boolean" use="optional"/>
    </xs:complexType>

    <xs:complexType name="checkboxDef">
        <xs:sequence>
            <xs:element name="invoke-action" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:attribute name="action-id" use="required"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="dependencies" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="enabling-condition" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:attribute name="on" use="required"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="dynamicColumnSwitchDef">
        <xs:sequence>
            <xs:element name="case">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="text" type="textDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="checkbox" type="checkboxDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="icon" type="iconDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="badge" type="badgeDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="x-editable" type="x-editableDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="color" type="colorDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="link" type="linkDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="custom" type="customDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="image" type="imageDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="progress-bar" type="progressBarDef" maxOccurs="1" minOccurs="0"/>
                    </xs:sequence>
                    <xs:attribute name="value" use="required" type="xs:anyType"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="default">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="text" type="textDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="checkbox" type="checkboxDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="icon" type="iconDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="badge" type="badgeDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="x-editable" type="x-editableDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="color" type="colorDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="link" type="linkDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="custom" type="customDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="image" type="imageDef" maxOccurs="1" minOccurs="0"/>
                        <xs:element name="progress-bar" type="progressBarDef" maxOccurs="1" minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="value-field-id" use="optional"/>
    </xs:complexType>

    <xs:complexType name="switchDef">
        <xs:sequence>
            <xs:element name="case">
                <xs:complexType>
                    <xs:attribute name="value" use="required" type="xs:anyType"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="default"/>
        </xs:sequence>
        <xs:attribute name="value-field-id" use="optional"/>
    </xs:complexType>

    <xs:complexType name="iconDef">
        <xs:sequence>
            <xs:element name="switch" type="switchDef"/>
        </xs:sequence>
        <xs:attribute name="icon-field-id"/>
        <xs:attribute name="type" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="icon"/>
                    <xs:enumeration value="textAndIcon"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="position" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="left"/>
                    <xs:enumeration value="right"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="textDef">
        <xs:sequence>
            <xs:element name="switch" type="switchDef" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="style-field-id"/>
    </xs:complexType>

    <xs:complexType name="linkDef">
        <xs:sequence>
            <xs:element name="show-modal" type="showModalOpenPageDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="open-page" type="showModalOpenPageDefinition" maxOccurs="1" minOccurs="0"/>
            <xs:element name="a" type="ctr:anchorDef" maxOccurs="1" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="customDef">
        <xs:sequence>
            <xs:element name="switch" type="switchDef" minOccurs="0"/>
            <xs:element name="properties" maxOccurs="1" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="property" type="prop:propertyDefinition" maxOccurs="unbounded" minOccurs="1"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="src" type="xs:string" use="required"/>
        <xs:attribute name="css-class-field-id" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="colorDef">
        <xs:sequence>
            <xs:element name="switch" type="switchDef" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="color-field-id"/>
    </xs:complexType>

    <xs:complexType name="badgeDef">
        <xs:sequence minOccurs="1" maxOccurs="1">
            <xs:element name="switch" type="switchDef"/>
        </xs:sequence>
        <xs:attribute name="text" type="xs:string" use="required"/>
        <xs:attribute name="position" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="right"/>
                    <xs:enumeration value="left"/>
                    <xs:enumeration value="inline"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="x-editableDef" >
        <xs:sequence>
            <xs:any namespace="##other" processContents="strict" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="action-id" type="xs:string" use="required"/>
        <xs:attribute name="format" type="formatDefinition" use="optional"/>
    </xs:complexType>

    <xs:complexType name="listDef">
        <xs:sequence>
            <xs:element name="switch" type="switchDef" maxOccurs="1" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="label-field-id" type="xs:string" use="required"/>
    </xs:complexType>


    <xs:complexType name="showModalPreFilterDefinition">
        <xs:annotation>
            <xs:documentation source="https://wiki.i-novus.ru/display/N2O/N2O.Documentation.Dependency"/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="value" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="field-id" type="xs:string" use="required"/>
        <xs:attribute name="ref" type="xs:string" use="optional"/>
        <xs:attribute name="value" type="xs:string" use="optional"/>
        <xs:attribute name="container-id" type="xs:string" use="optional"/>
        <xs:attribute name="type" type="query_3_0:searchTypeEnumeration" use="optional"/>
    </xs:complexType>

    <xs:simpleType name="formatDefinition">
        <xs:union memberTypes="xs:string">
            <xs:simpleType>
                <xs:restriction>
                    <xs:enumeration value="date DD.MM.YYYY"/>
                    <xs:enumeration value="date 'DD.MM.YYYY HH:mm'"/>
                    <xs:enumeration value="dateUTC 'DD.MM.YYYY HH:mm'"/>
                    <xs:enumeration value="dateUTC HH:mm"/>
                    <xs:enumeration value="dateIntervalUTC HH:mm"/>
                    <xs:enumeration value="dateIntervalUTC DD.MM.YYYY"/>
                    <xs:enumeration value="dateIntervalUTC 'DD.MM.YYYY HH:mm'"/>
                    <xs:enumeration value="dateMills 'DD.MM.YYYY HH:mm'"/>
                    <xs:enumeration value="dateMills HH:mm"/>
                    <xs:enumeration value="dateFromNow true"/>
                    <xs:enumeration value="dateFromNow false"/>
                    <xs:enumeration value="number '0,0.00[000]'"/>
                    <xs:enumeration value="number '0,0.00'"/>
                    <xs:enumeration value="switcher 'X:x;Y:y;$:z'"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="formLayoutEnum">
        <xs:union memberTypes="xs:string">
            <xs:simpleType>
                <xs:restriction>
                    <xs:enumeration value="layout/left-center-right"/>
                    <xs:enumeration value="layout/left-right"/>
                    <xs:enumeration value="layout/left-right-bottom"/>
                    <xs:enumeration value="layout/top-bottom-accordion"/>
                    <xs:enumeration value="layout/top-bottom-tabs"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <!--edit на форме-->
    <xs:complexType name="editWithAfterSubmitDefinition">
        <xs:complexContent>
            <xs:extension base="editDefinition">
                <xs:attribute name="after-submit" type="ctr:afterSubmitTypes" use="optional"/>
                <xs:attribute name="after-cancel" type="ctr:afterSubmitCancelTypes" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="editDefinition">
        <xs:complexContent>
            <xs:extension base="menu:editDefinition">
                <xs:sequence>
                    <xs:element name="invoke-action" type="ctr:submitActionDefinition" minOccurs="0"/>
                    <xs:element name="redirect" type="ctr:redirectDef" minOccurs="0"/>
                    <xs:element name="a" type="ctr:anchorDef" minOccurs="0"/>
                    <xs:element name="create-or-update" type="ctr:createOrUpdateActionDef" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="customEventDefinition">
        <xs:complexContent>
            <xs:extension base="menu:customDefinition">
                <xs:sequence>
                    <xs:element name="properties" type="propertyListDefinition" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="invokeActionAndCloseDefinition">
        <xs:complexContent>
            <xs:extension base="editDefinition">
                <xs:attribute name="action-id" type="xs:string" use="required"/>
                <xs:attribute name="confirmation" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--WIDGET LIST-->
    <!--определение ссылки на компонент таблицы, который встраивается в панель-->
    <xs:complexType name="widgetListReferenceDefinition">
        <xs:complexContent>
            <xs:extension base="abstractWidgetListDefinition">
                <!--идентификатор таблицы, встраиваемой в панель-->
                <xs:attribute name="ref-id" type="xs:string" use="optional"/>
                <!--поле выборки (на которой основан компонент родительской панели), значение которого передалось из выбранной записи родительской панели-->
                <!--по умолчанию 'id'-->
                <xs:attribute name="master-field-id" type="xs:string" use="optional"/>
                <!--поле выборки (на которой основан компонент таблицы, встраиваемой в панель) фильтруемое по значению master-field-id-->
                <!--по умолчанию 'parentId'-->
                <xs:attribute name="detail-field-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--определение компонента - таблицы-->
    <xs:complexType name="abstractWidgetListDefinition">
        <xs:complexContent>
            <xs:extension base="widgetDefinition">
                <xs:sequence>
                    <xs:element name="rows" type="rowsDefinition" maxOccurs="1" minOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--определение строк списка-->
    <xs:complexType name="rowsDefinition">
        <xs:sequence>
            <xs:element name="text" type="textDef" maxOccurs="1" minOccurs="0"/>
            <xs:element name="checkbox" type="checkboxDef" maxOccurs="1" minOccurs="0"/>
            <xs:element name="icon" type="iconDef" maxOccurs="1" minOccurs="0"/>
            <xs:element name="badge" type="badgeDef" maxOccurs="1" minOccurs="0"/>
            <xs:element name="color" type="colorDef" maxOccurs="1" minOccurs="0"/>
            <xs:element name="link" type="linkDef" maxOccurs="1" minOccurs="0"/>
            <xs:element name="custom" type="customDef" maxOccurs="1" minOccurs="0"/>
            <xs:element name="image" type="imageDef" maxOccurs="1" minOccurs="0"/>
            <xs:element name="progress-bar" type="progressBarDef" maxOccurs="1" minOccurs="0"/>
            <xs:any namespace="##other" processContents="strict" maxOccurs="unbounded"/>
        </xs:sequence>
        <!--поле выборки содержащее текст, отображаемый в поле строке списка-->
        <xs:attribute name="label-field-id" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="wizardDefinition">
        <xs:complexContent>
            <xs:extension base="widgetDefinition">
                <xs:sequence>
                    <xs:element name="steps" minOccurs="1" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="step" type="wizardStepDefinition" minOccurs="1" maxOccurs="unbounded"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="finish" type="wizardFinishDefinition" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="ref-id" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="wizardStepDefinition">
        <xs:sequence>
            <xs:any namespace="##other" processContents="strict" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="optional"/>
        <xs:attribute name="description" type="xs:string" use="optional"/>
        <xs:attribute name="icon" type="xs:string" use="optional"/>
        <xs:attribute name="condition" type="xs:string" use="optional"/>
        <xs:attribute name="next-action-id" type="xs:string" use="optional"/>
        <xs:attribute name="next-label" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="wizardFinishDefinition">
        <xs:sequence>
            <xs:any namespace="##other" processContents="strict" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="optional"/>
        <xs:attribute name="finish-label" type="xs:string" use="optional"/>
        <xs:attribute name="finish-action-id" type="xs:string" use="optional"/>
    </xs:complexType>

</xs:schema>