<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:act="http://n2oapp.net/framework/config/schema/base/action-base-1.0"
           xmlns:dmn="http://n2oapp.net/framework/config/schema/base/domain-base-1.0"
           targetNamespace="http://n2oapp.net/framework/config/schema/base/control-base-1.0">

    <!--определение элемента управления-->
    <xs:complexType name="controlDefinition" abstract="true">
        <!--строковый локальный (в рамках формы) уникальный идентификатор-->
        <xs:attribute name="id" type="xs:string" use="required"/>
        <!--локализованная подпись поля формы-->
        <!--если элемент управления является полем формы, по умолчанию равна значению атрибута name поля выборки-->
        <!--если элемент управления является элементом меню, по умолчанию равна значению атрибута name действия-->
        <xs:attribute name="label" type="xs:string" use="optional"/>
        <!--признак видимости-->
        <xs:attribute name="visible" type="xs:boolean" default="true" use="optional"/>

        <xs:sequence>
            <xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>


    <xs:complexType name="controlPreFilterWithoutRefDefinition">
        <xs:annotation>
            <xs:documentation source="https://wiki.i-novus.ru/display/N2O/N2O.Documentation.Dependency"/>
        </xs:annotation>
        <xs:attribute name="field-id" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string" use="optional"/>
    </xs:complexType>


    <!--выполнение действия объекта формы-->
    <xs:complexType name="submitActionDefinition">
        <!--идентификатор действия объекта формы-->
        <xs:attribute name="action-id" type="act:actionGroupEnum" use="optional"/>
    </xs:complexType>

    <xs:complexType name="invokeActionDefinition">
        <xs:complexContent>
            <xs:extension base="submitActionDefinition">
                <!--требование подтверждения действия (появится модальное окно с информацией о запрошенном действии с требованием подтверждения)-->
                <xs:attribute name="confirmation" type="xs:boolean" default="true" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="redirectDef">
        <xs:attribute name="action-id" use="required"/>
        <xs:attribute name="href-field-id" use="required"/>
        <xs:attribute name="target" use="optional" type="redirectTarget"/>
    </xs:complexType>

    <xs:simpleType name="redirectTarget">
        <xs:restriction>
            <xs:enumeration value="self"/>
            <xs:enumeration value="newWindow"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="createOrUpdateActionDef">
        <!--идентификатор действия объекта формы-->
        <xs:attribute name="create-action-id" type="act:actionGroupEnum" use="required"/>
        <xs:attribute name="update-action-id" type="act:actionGroupEnum" use="required"/>
    </xs:complexType>

    <!--&lt;!&ndash;меню действий&ndash;&gt;-->
    <!--<xs:complexType name="controlActionMenuItemDefinition">-->
    <!--<xs:complexContent>-->
    <!--<xs:extension base="controlDefinition">-->
    <!--&lt;!&ndash;возможно только одно из возможных действий&ndash;&gt;-->
    <!--<xs:sequence>-->
    <!--<xs:element name="show-modal" type="actionShowModalDefinition" maxOccurs="1" minOccurs="0"/>-->
    <!--<xs:element name="invoke-action" type="invokeActionDefinition" maxOccurs="1" minOccurs="0"/>-->
    <!--&lt;!&ndash;вложенное меню&ndash;&gt;-->
    <!--<xs:element name="sub-menu" type="controlActionSubMenuDefinition" maxOccurs="1" minOccurs="0"/>-->
    <!--</xs:sequence>-->
    <!--&lt;!&ndash;признак того, что данный элемент меню является основным&ndash;&gt;-->
    <!--&lt;!&ndash;срабатывает как действие по умолчанию в компоненте (на двойной клик) и выделяется жирным шрифтом&ndash;&gt;-->
    <!--<xs:attribute name="default" type="xs:boolean" default="false" use="optional"/>-->
    <!--&lt;!&ndash;признак того, что действие привязано к контексту, если контекста нет, то элемент меню имеет атрибут readonly=false&ndash;&gt;-->
    <!--&lt;!&ndash;если контекст есть и этот атрибут включен, то при вызове действия этот контекст передается на вход действию&ndash;&gt;-->
    <!--&lt;!&ndash;если этот атрибут выключен, то при вызове действия действию передается пустой контекст&ndash;&gt;-->
    <!--<xs:attribute name="context" type="xs:boolean" default="true" use="optional"/>-->
    <!--</xs:extension>-->
    <!--</xs:complexContent>-->
    <!--</xs:complexType>-->


    <xs:complexType name="controlFieldDefinition" abstract="true">
        <xs:annotation>
            <xs:documentation source="https://wiki.i-novus.ru/display/N2O/N2O.Documentation.Control"/>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="controlDefinition">
                <!-- признак обязательности для заполнения-->
                <xs:attribute name="required" type="xs:boolean" use="optional"/>
                <!-- пока не будет выбрано значение поля, заданного в depends-on, текущее поле заблокируется -->
                <xs:attribute name="depends-on" type="xs:string" use="optional"/>
                <!-- условие зависимости-->
                <xs:attribute name="dependency-condition" type="xs:string" use="optional"/>
                <!-- ограничение на тип данных поля формы-->
                <xs:attribute name="domain" type="dmn:domainType" use="optional"/>
                <!-- поле сохраняет свое предыдущее значение при копировании (true) -->
                <xs:attribute name="copied" type="xs:boolean" default="true" use="optional"/>
                <!-- css класс поля -->
                <xs:attribute name="css-class" type="xs:string" use="optional"/>
                <!-- стиль компонента -->
                <xs:attribute name="control-style" type="xs:string" use="optional"/>
                <!-- стиль лейбла -->
                <xs:attribute name="label-style" type="xs:string" use="optional"/>
                <!-- шаблон поля (все что вокруг компонента: лейбл, валидации, описание, кнопки и т.д. )-->
                <xs:attribute name="layout" type="xs:string" use="optional"/>
                <!-- переопределение исходного кода компонента (путь до файла без .js .html .css) -->
                <xs:attribute name="src" type="xs:string" use="optional"/>
                <!-- подсказка для ввода -->
                <xs:attribute name="placeholder" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:complexContent>

    </xs:complexType>

    <!--определение источника значений списка - выборки-->
    <xs:complexType name="controlListQueryDefinition">
        <xs:annotation>
            <xs:documentation source="https://wiki.i-novus.ru/display/N2O/N2O.Documentation.Control"/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="pre-filters" maxOccurs="1" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="pre-filter" type="controlPreFilterDefinition" minOccurs="1"
                                    maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <!--идентификатор выборки, которая является источником значений списка-->
        <xs:attribute name="query-id" type="xs:string" use="required"/>
        <!--идентификатор поля выборки (та выборка, которая является источником значений списка), значение которого будет являться ключем элемента списка-->
        <!--по умолчанию 'id'-->
        <xs:attribute name="value-field-id" type="xs:string" use="optional"/>
        <!--идентификатор поля выборки (та выборка, которая является источником значений списка), значение которого будет являться отображаемым значением элемента списка-->
        <!--по умолчанию 'displayName'-->
        <xs:attribute name="label-field-id" type="xs:string" use="optional"/>
        <!--идентификатор поля выборки (та выборка, на которой основана текущая форма), значение которого передастся в выборку источника записей списка-->
        <xs:attribute name="master-field-id" type="xs:string" use="optional"/>
        <!--идентификатор поля выборки (та выборка, которая является источником значений списка), фильтруемое по значению master-field-id-->
        <!--по умолчанию 'parentId'-->
        <xs:attribute name="detail-field-id" type="xs:string" use="optional"/>
    </xs:complexType>


    <xs:complexType name="anchorDef">
        <xs:attribute name="href" use="required"/>
        <xs:attribute name="target" use="optional" type="redirectTarget"/>
    </xs:complexType>


    <xs:simpleType name="afterSubmitTypes">
        <xs:restriction>
            <xs:enumeration value="read"/>
            <xs:enumeration value="edit"/>
            <xs:enumeration value="closeModal"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="afterSubmitCancelTypes">
        <xs:restriction>
            <xs:enumeration value="read"/>
            <xs:enumeration value="reset"/>
            <xs:enumeration value="closeModal"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="modelDefinition">
        <xs:restriction>
            <xs:enumeration value="query"/>
            <xs:enumeration value="query-or-default"/>
            <xs:enumeration value="default"/>
            <xs:enumeration value="copy"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="styleEnum">
        <xs:union memberTypes="xs:string">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="label"/>
                    <xs:enumeration value="label label-success"/>
                    <xs:enumeration value="label label-warning"/>
                    <xs:enumeration value="label label-important"/>
                    <xs:enumeration value="label label-info"/>
                    <xs:enumeration value="label label-inverse"/>

                    <xs:enumeration value="badge"/>
                    <xs:enumeration value="badge badge-success"/>
                    <xs:enumeration value="badge badge-warning"/>
                    <xs:enumeration value="badge badge-important"/>
                    <xs:enumeration value="badge badge-info"/>
                    <xs:enumeration value="badge badge-inverse"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:complexType name="controlHoverInfo">
        <xs:attribute name="src" type="xs:string"/>
        <xs:sequence>
            <xs:element name="element" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="label" type="xs:string" use="optional"/>
                    <xs:attribute name="field-id" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
</xs:schema>