<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-4.0" object-id="testSqlQuery">
    <list>
        <mongodb collection-name="user" operation="find"/>
    </list>
    <count>
        <mongodb collection-name="user" operation="countDocuments"/>
    </count>

    <fields>
        <field id="id" domain="string">
            <select mapping="['_id'].toString()">_id</select>
            <filters>
                <eq filter-id="id">_id :eq :id</eq>
            </filters>
            <sorting/>
        </field>

        <field id="name" domain="string">
            <select>name</select>
            <filters>
                <eq filter-id="name"/>
                <notEq filter-id="notName"/>
                <like filter-id="nameLike" mapping="['nameLikeMap']">name :like :nameLikeMap</like>
                <likeStart filter-id="nameStart">name :likeStart :nameStart</likeStart>
            </filters>
            <sorting mapping="['sortName']">name :sortName</sorting>
        </field>

        <field id="userAge" domain="integer">
            <select mapping="['age']">age</select>
            <filters>
                <in filter-id="userAgeIn">age :in :userAgeIn</in>
                <notIn filter-id="userAgeNotIn">age :notIn :userAgeNotIn</notIn>
            </filters>
            <sorting/>
        </field>

        <field id="birthday" domain="localdate">
            <select/>
            <filters>
                <more filter-id="birthdayMore">birthday :more :birthdayMore</more>
                <less filter-id="birthdayLess"/>
            </filters>
        </field>

        <field id="vip">
            <select/>
        </field>

        <field id="gender.id">
            <select mapping="['gender']?.get('id')"/>
        </field>

        <field id="gender.name">
            <select mapping="['gender']?.get('name')" normalize="#this?.toLowerCase()"/>
        </field>
    </fields>
</query>
