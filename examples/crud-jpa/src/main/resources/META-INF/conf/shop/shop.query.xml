<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-4.0" object-id="shop" name="Товар есть в наличии в следующих магазинах">

    <list result-mapping="collection" count-mapping="count">
        <java class="net.n2oapp.tutorial.service.ShopService"
              method="getCollectionPage">
            <spring bean="shopService"/>
            <arguments>
                <argument type="criteria"
                          class="net.n2oapp.tutorial.util.ShopCriteria"/>
            </arguments>
        </java>
    </list>

    <unique filters="id" result-mapping="#this">
        <java class="net.n2oapp.tutorial.service.ShopService"
              method="getShopById">
            <spring />
            <arguments>
                <argument type="primitive" name="id" />
            </arguments>
        </java>
    </unique>

    <fields>
        <field id="id" domain="long">
            <select mapping="id"/>
            <sorting/>
            <filters>
                <eq filter-id="id" mapping="[0]"/>
            </filters>
        </field>

        <field id="name" domain="string">
            <select mapping="name"/>
            <sorting/>
            <filters>
                <eq filter-id="name"/>
            </filters>
        </field>

        <field id="address.id" domain="long">
            <select mapping="address?.id"/>
        </field>

        <field id="address.location" domain="string" name="Адрес">
            <select mapping="address?.location"/>
        </field>

        <field id="product.id" domain="long">
            <sorting/>
            <filters>
                <eq filter-id="product.id" mapping="productId"/>
            </filters>
        </field>

        <field id="productNames" domain="string[]">
            <select mapping="['products'].![name]"/>
            <sorting/>
        </field>

        <field id="products" domain="object[]">
            <select mapping="products"/>
        </field>

    </fields>
</query>
